<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ScrewTurn.Wiki.Core</name>
    </assembly>
    <members>
        <member name="T:ScrewTurn.Wiki.NavigationPaths">
            <summary>
            Manages navigation paths.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.NavigationPaths.GetAllNavigationPaths">
            <summary>
            Gets the list of the Navigation Paths.
            </summary>
            <returns>The navigation paths, sorted by name.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.NavigationPaths.GetNavigationPaths(ScrewTurn.Wiki.PluginFramework.NamespaceInfo)">
            <summary>
            Gets the list of the Navigation Paths in a namespace.
            </summary>
            <param name="nspace">The namespace.</param>
            <returns>The navigation paths, sorted by name.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.NavigationPaths.Exists(System.String)">
            <summary>
            Finds a Navigation Path's Name.
            </summary>
            <param name="name">The Name.</param>
            <returns>True if the Navigation Path exists.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.NavigationPaths.Find(System.String)">
            <summary>
            Finds and returns a Path.
            </summary>
            <param name="fullName">The full name.</param>
            <returns>The correct <see cref="T:NavigationPath" /> object or <c>null</c> if no path is found.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.NavigationPaths.AddNavigationPath(ScrewTurn.Wiki.PluginFramework.NamespaceInfo,System.String,System.Collections.Generic.List{ScrewTurn.Wiki.PluginFramework.PageInfo},ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV30)">
            <summary>
            Adds a new Navigation Path.
            </summary>
            <param name="nspace">The target namespace (<c>null</c> for the root).</param>
            <param name="name">The Name.</param>
            <param name="pages">The Pages.</param>
            <param name="provider">The Provider to use for the new Navigation Path, or <c>null</c> for the default provider.</param>
            <returns>True if the Path is added successfully.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.NavigationPaths.RemoveNavigationPath(System.String)">
            <summary>
            Removes a Navigation Path.
            </summary>
            <param name="fullName">The full name of the path to remove.</param>
            <returns><c>true</c> if the path is removed, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.NavigationPaths.ModifyNavigationPath(System.String,System.Collections.Generic.List{ScrewTurn.Wiki.PluginFramework.PageInfo})">
            <summary>
            Modifies a Navigation Path.
            </summary>
            <param name="fullName">The full name of the path to modify.</param>
            <param name="pages">The list of Pages.</param>
            <returns><c>true</c> if the path is modified, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.NavigationPaths.PathsPerPage(ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Finds all the Navigation Paths that include a Page.
            </summary>
            <param name="page">The Page.</param>
            <returns>The list of Navigation Paths.</returns>
        </member>
        <member name="T:ScrewTurn.Wiki.BreadcrumbsManager">
            <summary>
            Manages navigation Breadcrumbs.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.BreadcrumbsManager.GetCookie">
            <summary>
            Gets the cookie.
            </summary>
            <returns>The cookie, or <c>null</c>.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.BreadcrumbsManager.#ctor">
            <summary>
            Initializes a new instance of the <b>BreadcrumbsManager</b> class.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.BreadcrumbsManager.UpdateCookie">
            <summary>
            Updates the cookie.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.BreadcrumbsManager.AddPage(ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Adds a Page to the Breadcrumbs trail.
            </summary>
            <param name="page">The Page to add.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.BreadcrumbsManager.FindPage(ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Finds a page by name.
            </summary>
            <param name="page">The page.</param>
            <returns>The index in the collection.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.BreadcrumbsManager.RemovePage(ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Removes a Page from the Breadcrumbs trail.
            </summary>
            <param name="page">The Page to remove.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.BreadcrumbsManager.Clear">
            <summary>
            Clears the Breadcrumbs trail.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.BreadcrumbsManager.AllPages">
            <summary>
            Gets all the Pages in the trail that still exist.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.Redirections">
            <summary>
            Manages information about Page Redirections.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.Redirections.AddRedirection(ScrewTurn.Wiki.PluginFramework.PageInfo,ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Adds a new Redirection.
            </summary>
            <param name="source">The source Page.</param>
            <param name="destination">The destination Page.</param>
            <returns>True if the Redirection is added, false otherwise.</returns>
            <remarks>The method prevents circular and multi-level redirection.</remarks>
        </member>
        <member name="M:ScrewTurn.Wiki.Redirections.GetDestination(ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Gets the destination Page.
            </summary>
            <param name="page">The source Page.</param>
            <returns>The destination Page, or null.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Redirections.WipePageOut(ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Removes any occurrence of a Page from the redirection table, both on sources and destinations.
            </summary>
            <param name="page">The Page to wipe-out.</param>
            <remarks>This method is useful when removing a Page.</remarks>
        </member>
        <member name="M:ScrewTurn.Wiki.Redirections.Clear">
            <summary>
            Clears the Redirection table.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.Collectors">
            <summary>
            Contains instances of the Providers Collectors.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Collectors.FileNames">
            <summary>
            Contains the file names of the DLLs containing each provider (provider->file).
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Collectors.SettingsProvider">
            <summary>
            The settings storage provider.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Collectors.UsersProviderCollector">
            <summary>
            The Users Provider Collector instance.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Collectors.PagesProviderCollector">
            <summary>
            The Pages Provider Collector instance.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Collectors.FilesProviderCollector">
            <summary>
            The Files Provider Collector instance.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Collectors.FormatterProviderCollector">
            <summary>
            The Formatter Provider Collector instance.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Collectors.CacheProviderCollector">
            <summary>
            The Cache Provider Collector instance.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Collectors.DisabledUsersProviderCollector">
            <summary>
            The Disabled Users Provider Collector instance.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Collectors.DisabledFilesProviderCollector">
            <summary>
            The Disabled Files Provider Collector instance.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Collectors.DisabledPagesProviderCollector">
            <summary>
            The Disabled Pages Provider Collector instance.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Collectors.DisabledFormatterProviderCollector">
            <summary>
            The Disabled Formatter Provider Collector instance.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Collectors.DisabledCacheProviderCollector">
            <summary>
            The Disabled Cache Provider Collector instance.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.Collectors.FindProvider(System.String,System.Boolean@,System.Boolean@)">
            <summary>
            Finds a provider.
            </summary>
            <param name="typeName">The provider type name.</param>
            <param name="enabled">A value indicating whether the provider is enabled.</param>
            <param name="canDisable">A value indicating whether the provider can be disabled.</param>
            <returns>The provider, or <c>null</c>.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Collectors.TryUnload(System.String)">
            <summary>
            Tries to unload a provider.
            </summary>
            <param name="typeName">The provider.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.Collectors.TryDisable(System.String)">
            <summary>
            Tries to disable a provider.
            </summary>
            <param name="typeName">The provider.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.Collectors.TryEnable(System.String)">
            <summary>
            Tries to enable a provider.
            </summary>
            <param name="typeName">The provider.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.Collectors.GetAllProviders">
            <summary>
            Gets the names of all known providers, both enabled and disabled.
            </summary>
            <returns>The names of the known providers.</returns>
        </member>
        <member name="T:ScrewTurn.Wiki.SearchTools">
            <summary>
            Implements tools for searching through the wiki.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.SearchTools.SearchSimilarPages(System.String,System.String)">
            <summary>
            Searches for pages with name or title similar to a specified value.
            </summary>
            <param name="name">The name to look for (<c>null</c> for the root).</param>
            <param name="nspace">The namespace to search into.</param>
            <returns>The similar pages, if any.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.SearchTools.Search(System.String,System.Boolean,System.Boolean,ScrewTurn.Wiki.SearchEngine.SearchOptions)">
            <summary>
            Performs a search in the wiki.
            </summary>
            <param name="query">The search query.</param>
            <param name="fullText">A value indicating whether to perform a full-text search.</param>
            <param name="searchFilesAndAttachments">A value indicating whether to search through files and attachments.</param>
            <param name="options">The search options.</param>
            <returns>The results collection.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.SearchTools.DetectFileOrAttachment(ScrewTurn.Wiki.SearchEngine.DumpedDocument)">
            <summary>
            Detects the document in a dumped instance for files and attachments.
            </summary>
            <param name="doc">The dumped document instance.</param>
            <returns>The proper document instance.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.SearchTools.TraverseDirectories(ScrewTurn.Wiki.SearchEngine.InMemoryIndexBase,ScrewTurn.Wiki.PluginFramework.IFilesStorageProviderV30,System.String)">
            <summary>
            Traverses a directory tree, indexing all files.
            </summary>
            <param name="index">The output index.</param>
            <param name="provider">The provider.</param>
            <param name="currentDir">The current directory.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.SearchTools.CombineCollections(System.Collections.Generic.List{ScrewTurn.Wiki.SearchEngine.SearchResultCollection})">
            <summary>
            Combines a set of <see cref="T:SearchResultCollection" />s into a single object.
            </summary>
            <param name="collections">The collections.</param>
            <returns>The resulting <see cref="T:SearchResultCollection" />.</returns>
        </member>
        <member name="T:ScrewTurn.Wiki.IndexStorer">
            <summary>
            Stores index data to disk.
            </summary>
            <remarks>Instance and static members are <b>thread-safe</b>.</remarks>
        </member>
        <member name="M:ScrewTurn.Wiki.IndexStorer.#ctor(System.String,System.String,System.String,ScrewTurn.Wiki.SearchEngine.IInMemoryIndex)">
            <summary>
            Initializes a new instance of the <see cref="T:ScrewTurn.Wiki.IndexStorer"/> class.
            </summary>
            <param name="documentsFile">The file that contains the documents list.</param>
            <param name="wordsFile">The file that contains the words list.</param>
            <param name="mappingsFile">The file that contains the index mappings data.</param>
            <param name="index">The index to manage.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.IndexStorer.LoadIndexInternal(ScrewTurn.Wiki.SearchEngine.DumpedDocument[]@,ScrewTurn.Wiki.SearchEngine.DumpedWord[]@,ScrewTurn.Wiki.SearchEngine.DumpedWordMapping[]@)">
            <summary>
            Loads the index from the data store the first time.
            </summary>
            <param name="documents">The dumped documents.</param>
            <param name="words">The dumped words.</param>
            <param name="mappings">The dumped word mappings.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.IndexStorer.ReadReserved(System.IO.BinaryReader)">
            <summary>
            Reads the reserved bytes.
            </summary>
            <param name="reader">The <see cref="T:System.IO.BinaryReader"/> to read from.</param>
            <returns><c>true</c> if read bytes are equal to expected bytes, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.IndexStorer.InitFiles">
            <summary>
            Initializes the data files, if needed.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.IndexStorer.InitDataStore(System.Object)">
            <summary>
            Initializes the data storage.
            </summary>
            <param name="state">A state object passed from the index.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.IndexStorer.WriteHeader(System.IO.BinaryWriter)">
            <summary>
            Writes the binary file header.
            </summary>
            <param name="writer">The <see cref="T:System.IO.BinaryWriter"/> to write into.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.IndexStorer.ReadDumpedDocument(System.IO.BinaryReader)">
            <summary>
            Reads a <see cref="T:ScrewTurn.Wiki.SearchEngine.DumpedDocument"/> from a <see cref="T:System.IO.BinaryReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.IO.BinaryReader"/>.</param>
            <returns>The <see cref="T:ScrewTurn.Wiki.SearchEngine.DumpedDocument"/>.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.IndexStorer.ReadDumpedWord(System.IO.BinaryReader)">
            <summary>
            Reads a <see cref="T:ScrewTurn.Wiki.SearchEngine.DumpedWord"/> from a <see cref="T:System.IO.BinaryReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.IO.BinaryReader"/>.</param>
            <returns>The <see cref="T:ScrewTurn.Wiki.SearchEngine.DumpedWord"/>.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.IndexStorer.ReadDumpedWordMapping(System.IO.BinaryReader)">
            <summary>
            Reads a <see cref="T:ScrewTurn.Wiki.SearchEngine.DumpedWordMapping"/> from a <see cref="T:System.IO.BinaryReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.IO.BinaryReader"/>.</param>
            <returns>The <see cref="T:ScrewTurn.Wiki.SearchEngine.DumpedWordMapping"/>.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.IndexStorer.ReadCount(System.IO.FileStream)">
            <summary>
            Reads the count in a <see cref="T:System.IO.FileStream"/>.
            </summary>
            <param name="fs">The <see cref="T:System.IO.FileStream"/>, at position <b>zero</b>.</param>
            <returns>The count.</returns>
            <remarks>The caller must properly seek the stream after calling the method.</remarks>
        </member>
        <member name="M:ScrewTurn.Wiki.IndexStorer.SaveData(ScrewTurn.Wiki.SearchEngine.DumpedChange,System.Object)">
            <summary>
            Stores new data into the data storage.
            </summary>
            <param name="data">The data to store.</param>
            <param name="state">A state object passed from the index.</param>
            <returns>The storer result, if any.</returns>
            <remarks>When saving a new document, the document ID in data.Mappings must be
            replaced with the currect document ID, generated by the concrete implementation of
            this method. data.Words should have IDs numbered from uint.MaxValue downwards. 
            The method re-numbers the words appropriately.</remarks>
        </member>
        <member name="M:ScrewTurn.Wiki.IndexStorer.GetTempFile(System.String)">
            <summary>
            Gets a tempDumpedWord file name given an original name.
            </summary>
            <param name="file">The original name.</param>
            <returns>The tempDumpedWord file name.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.IndexStorer.DeleteData(ScrewTurn.Wiki.SearchEngine.DumpedChange,System.Object)">
            <summary>
            Deletes data from the data storage.
            </summary>
            <param name="data">The data to delete.</param>
            <param name="state">A state object passed from the index.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.IndexStorer.WriteDumpedDocument(System.IO.BinaryWriter,ScrewTurn.Wiki.SearchEngine.DumpedDocument)">
            <summary>
            Writes a <see cref="T:ScrewTurn.Wiki.SearchEngine.DumpedDocument"/> to a <see cref="T:System.IO.BinaryWriter"/>.
            </summary>
            <param name="writer">The <see cref="T:System.IO.BinaryWriter"/>.</param>
            <param name="document">The <see cref="T:ScrewTurn.Wiki.SearchEngine.DumpedDocument"/>.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.IndexStorer.WriteDumpedWord(System.IO.BinaryWriter,ScrewTurn.Wiki.SearchEngine.DumpedWord)">
            <summary>
            Writes a <see cref="T:ScrewTurn.Wiki.SearchEngine.DumpedWord"/> to a <see cref="T:System.IO.BinaryWriter"/>.
            </summary>
            <param name="writer">The <see cref="T:System.IO.BinaryWriter"/>.</param>
            <param name="word">The <see cref="T:ScrewTurn.Wiki.SearchEngine.DumpedWord"/>.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.IndexStorer.WriteDumpedWordMapping(System.IO.BinaryWriter,ScrewTurn.Wiki.SearchEngine.DumpedWordMapping)">
            <summary>
            Writes a <see cref="T:ScrewTurn.Wiki.SearchEngine.DumpedWordMapping"/> to a <see cref="T:System.IO.BinaryWriter"/>.
            </summary>
            <param name="writer">The <see cref="T:System.IO.BinaryWriter"/>.</param>
            <param name="mapping">The <see cref="T:ScrewTurn.Wiki.SearchEngine.DumpedWordMapping"/>.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.IndexStorer.EqualDumpedDocument(ScrewTurn.Wiki.SearchEngine.DumpedDocument,ScrewTurn.Wiki.SearchEngine.DumpedDocument)">
            <summary>
            Determines whether two <see cref="T:ScrewTurn.Wiki.SearchEngine.DumpedDocument"/>s are equal.
            </summary>
            <param name="d1">The first document.</param>
            <param name="d2">The second document.</param>
            <returns><c>true</c> if the documents are equal, <c>false</c> otherwise.</returns>
        </member>
        <member name="P:ScrewTurn.Wiki.IndexStorer.Size">
            <summary>
            Gets the approximate size, in bytes, of the search engine index.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.FilesStorageProvider">
            <summary>
            Implements a Local Files Storage Provider.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.FilesStorageProvider.Init(ScrewTurn.Wiki.PluginFramework.IHostV30,System.String)">
            <summary>
            Initializes the Storage Provider.
            </summary>
            <param name="host">The Host of the Component.</param>
            <param name="config">The Configuration data, if any.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="host"/> or <paramref name="config"/> are <c>null</c>.</exception>
            <exception cref="T:ScrewTurn.Wiki.PluginFramework.InvalidConfigurationException">If <paramref name="config"/> is not valid or is incorrect.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.FilesStorageProvider.Shutdown">
            <summary>
            Method invoked on shutdown.
            </summary>
            <remarks>This method might not be invoked in some cases.</remarks>
        </member>
        <member name="M:ScrewTurn.Wiki.FilesStorageProvider.CheckPath(System.String,System.String)">
            <summary>
            Checks the path.
            </summary>
            <param name="path">The path to be checked.</param>
            <param name="begin">The expected beginning of the path.</param>
            <exception cref="T:System.InvalidOperationException">If <paramref name="path"/> does not begin with <paramref name="begin"/> or contains "\.." or "..\".</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.FilesStorageProvider.BuildFullPath(System.String)">
            <summary>
            Builds a full path from a provider-specific partial path.
            </summary>
            <param name="partialPath">The partial path.</param>
            <returns>The full path.</returns>
            <remarks>For example: if <b>partialPath</b> is "/my/directory", the method returns 
            "C:\Inetpub\wwwroot\Wiki\public\Upload\my\directory", assuming the Wiki resides in "C:\Inetpub\wwwroot\Wiki".</remarks>
        </member>
        <member name="M:ScrewTurn.Wiki.FilesStorageProvider.BuildFullPathForAttachments(System.String)">
            <summary>
            Builds a full path from a provider-specific partial path.
            </summary>
            <param name="partialPath">The partial path.</param>
            <returns>The full path.</returns>
            <remarks>For example: if <b>partialPath</b> is "/my/directory", the method returns 
            "C:\Inetpub\wwwroot\Wiki\public\Attachments\my\directory", assuming the Wiki resides in "C:\Inetpub\wwwroot\Wiki".</remarks>
        </member>
        <member name="M:ScrewTurn.Wiki.FilesStorageProvider.ListFiles(System.String)">
            <summary>
            Lists the Files in the specified Directory.
            </summary>
            <param name="directory">The full directory name, for example "/my/directory". Null, empty or "/" for the root directory.</param>
            <returns>The list of Files in the directory.</returns>
            <exception cref="T:System.ArgumentException">If <paramref name="directory"/> does not exist.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.FilesStorageProvider.ListDirectories(System.String)">
            <summary>
            Lists the Directories in the specified directory.
            </summary>
            <param name="directory">The full directory name, for example "/my/directory". Null, empty or "/" for the root directory.</param>
            <returns>The list of Directories in the Directory.</returns>
            <exception cref="T:System.ArgumentException">If <paramref name="directory"/> does not exist.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.FilesStorageProvider.StreamCopy(System.IO.Stream,System.IO.Stream)">
            <summary>
            Copies data from a Stream to another.
            </summary>
            <param name="source">The Source stream.</param>
            <param name="destination">The destination Stream.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.FilesStorageProvider.StoreFile(System.String,System.IO.Stream,System.Boolean)">
            <summary>
            Stores a file.
            </summary>
            <param name="fullName">The full name of the file.</param>
            <param name="sourceStream">A Stream object used as <b>source</b> of a byte stream, 
            i.e. the method reads from the Stream and stores the content properly.</param>
            <param name="overwrite"><c>true</c> to overwrite an existing file.</param>
            <returns><c>true</c> if the File is stored, <c>false</c> otherwise.</returns>
            <remarks>If <b>overwrite</b> is <c>false</c> and File already exists, the method returns <c>false</c>.</remarks>
            <exception cref="T:System.ArgumentNullException">If <typeparamref name="fullName"/> os <paramref name="sourceStream"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="fullName"/> is empty or <paramref name="sourceStream"/> does not support reading.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.FilesStorageProvider.RetrieveFile(System.String,System.IO.Stream,System.Boolean)">
            <summary>
            Retrieves a File.
            </summary>
            <param name="fullName">The full name of the File.</param>
            <param name="destinationStream">A Stream object used as <b>destination</b> of a byte stream, 
            i.e. the method writes to the Stream the file content.</param>
            <param name="countHit">A value indicating whether or not to count this retrieval in the statistics.</param>
            <returns><c>true</c> if the file is retrieved, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <typeparamref name="fullName"/> os <paramref name="destinationStream"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="fullName"/> is empty or <paramref name="destinationStream"/> does not support writing, or if <paramref name="fullName"/> does not exist.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.FilesStorageProvider.AddDownloadHit(System.String,System.String)">
            <summary>
            Adds a download hit for the specified item in the specified output file.
            </summary>
            <param name="itemName">The item.</param>
            <param name="outputFile">The full path to the output file.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.FilesStorageProvider.SetDownloadHits(System.String,System.String,System.Int32)">
            <summary>
            Sets the download hits for the specified item in the specified file.
            </summary>
            <param name="itemName">The item.</param>
            <param name="outputFile">The full path of the output file.</param>
            <param name="count">The hit count to set.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.FilesStorageProvider.ClearDownloadHitsPartialMatch(System.String,System.String)">
            <summary>
            Clears the download hits for the items that match <b>itemName</b> in the specified file.
            </summary>
            <param name="itemName">The first part of the item name.</param>
            <param name="outputFile">The full path of the output file.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.FilesStorageProvider.RenameDownloadHitsItem(System.String,System.String,System.String)">
            <summary>
            Renames an item of the download count list in the specified file.
            </summary>
            <param name="oldItemName">The old item name.</param>
            <param name="newItemName">The new item name.</param>
            <param name="outputFile">The full path of the output file.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.FilesStorageProvider.RenameDownloadHitsItemPartialMatch(System.String,System.String,System.String)">
            <summary>
            Renames an item of the download count list in the specified file.
            </summary>
            <param name="oldItemName">The initial part of the old item name.</param>
            <param name="newItemName">The corresponding initial part of the new item name.</param>
            <param name="outputFile">The full path of the output file.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.FilesStorageProvider.GetFileRetrievalCount(System.String)">
            <summary>
            Gets the number of times a file was retrieved.
            </summary>
            <param name="fullName">The full name of the file.</param>
            <returns>The number of times the file was retrieved.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.FilesStorageProvider.SetFileRetrievalCount(System.String,System.Int32)">
            <summary>
            Clears the number of times a file was retrieved.
            </summary>
            <param name="fullName">The full name of the file.</param>
            <param name="count">The count to set.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="fullName"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="fullName"/> is empty.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="count"/> is less than zero.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.FilesStorageProvider.GetFileDetails(System.String)">
            <summary>
            Gets the details of a file.
            </summary>
            <param name="fullName">The full name of the file.</param>
            <returns>The details, or <c>null</c> if the file does not exist.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="fullName"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="fullName"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.FilesStorageProvider.DeleteFile(System.String)">
            <summary>
            Deletes a File.
            </summary>
            <param name="fullName">The full name of the File.</param>
            <returns><c>true</c> if the File is deleted, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="fullName"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="fullName"/> is empty or it does not exist.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.FilesStorageProvider.RenameFile(System.String,System.String)">
            <summary>
            Renames or moves a File.
            </summary>
            <param name="oldFullName">The old full name of the File.</param>
            <param name="newFullName">The new full name of the File.</param>
            <returns><c>true</c> if the File is renamed, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="oldFullName"/> or <paramref name="newFullName"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="oldFullName"/> or <paramref name="newFullName"/> are empty, or if the old file does not exist, or if the new file already exist.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.FilesStorageProvider.CreateDirectory(System.String,System.String)">
            <summary>
            Creates a new Directory.
            </summary>
            <param name="path">The path to create the new Directory in.</param>
            <param name="name">The name of the new Directory.</param>
            <returns><c>true</c> if the Directory is created, <c>false</c> otherwise.</returns>
            <remarks>If <b>path</b> is "/my/directory" and <b>name</b> is "newdir", a new directory named "/my/directory/newdir" is created.</remarks>
            <exception cref="T:System.ArgumentNullException">If <paramref name="path"/> or <paramref name="name"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty or if the directory does not exist, or if the new directory already exists.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.FilesStorageProvider.DeleteDirectory(System.String)">
            <summary>
            Deletes a Directory and <b>all of its content</b>.
            </summary>
            <param name="fullPath">The full path of the Directory.</param>
            <returns><c>true</c> if the Directory is delete, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="fullPath"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="fullPath"/> is empty or if it equals '/' or it does not exist.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.FilesStorageProvider.RenameDirectory(System.String,System.String)">
            <summary>
            Renames or moves a Directory.
            </summary>
            <param name="oldFullPath">The old full path of the Directory.</param>
            <param name="newFullPath">The new full path of the Directory.</param>
            <returns><c>true</c> if the Directory is renamed, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="oldFullPath"/> or <paramref name="newFullPath"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="oldFullPath"/> or <paramref name="newFullPath"/> are empty or equal to '/', 
            or if the old directory does not exist or the new directory already exists.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.FilesStorageProvider.GetPageAttachmentDirectory(ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Gets the name of the Directory containing the Attachments of a Page.
            </summary>
            <param name="pageInfo">The Page Info.</param>
            <returns>The name of the Directory (not the full path) that contains the Attachments of the specified Page.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.FilesStorageProvider.GetPagesWithAttachments">
            <summary>
            The the names of the pages with attachments.
            </summary>
            <returns>The names of the pages with attachments.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.FilesStorageProvider.ListPageAttachments(ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Returns the names of the Attachments of a Page.
            </summary>
            <param name="pageInfo">The Page Info object that owns the Attachments.</param>
            <returns>The names, or an empty list.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="pageInfo"/> is <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.FilesStorageProvider.StorePageAttachment(ScrewTurn.Wiki.PluginFramework.PageInfo,System.String,System.IO.Stream,System.Boolean)">
            <summary>
            Stores a Page Attachment.
            </summary>
            <param name="pageInfo">The Page Info that owns the Attachment.</param>
            <param name="name">The name of the Attachment, for example "myfile.jpg".</param>
            <param name="sourceStream">A Stream object used as <b>source</b> of a byte stream, 
            i.e. the method reads from the Stream and stores the content properly.</param>
            <param name="overwrite"><c>true</c> to overwrite an existing Attachment.</param>
            <returns><c>true</c> if the Attachment is stored, <c>false</c> otherwise.</returns>
            <remarks>If <b>overwrite</b> is <c>false</c> and Attachment already exists, the method returns <c>false</c>.</remarks>
            <exception cref="T:System.ArgumentNullException">If <paramref name="pageInfo"/>, <paramref name="name"/> or <paramref name="sourceStream"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty or if <paramref name="sourceStream"/> does not support reading.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.FilesStorageProvider.RetrievePageAttachment(ScrewTurn.Wiki.PluginFramework.PageInfo,System.String,System.IO.Stream,System.Boolean)">
            <summary>
            Retrieves a Page Attachment.
            </summary>
            <param name="pageInfo">The Page Info that owns the Attachment.</param>
            <param name="name">The name of the Attachment, for example "myfile.jpg".</param>
            <param name="destinationStream">A Stream object used as <b>destination</b> of a byte stream, 
            i.e. the method writes to the Stream the file content.</param>
            <param name="countHit">A value indicating whether or not to count this retrieval in the statistics.</param>
            <returns><c>true</c> if the Attachment is retrieved, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="pageInfo"/>, <paramref name="name"/> or <paramref name="destinationStream"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty or if <paramref name="destinationStream"/> does not support writing,
            or if the page does not have attachments or if the attachment does not exist.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.FilesStorageProvider.GetPageAttachmentRetrievalCount(ScrewTurn.Wiki.PluginFramework.PageInfo,System.String)">
            <summary>
            Gets the number of times a page attachment was retrieved.
            </summary>
            <param name="pageInfo">The page.</param>
            <param name="name">The name of the attachment.</param>
            <returns>The number of times the attachment was retrieved.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.FilesStorageProvider.SetPageAttachmentRetrievalCount(ScrewTurn.Wiki.PluginFramework.PageInfo,System.String,System.Int32)">
            <summary>
            Set the number of times a page attachment was retrieved.
            </summary>
            <param name="pageInfo">The page.</param>
            <param name="name">The name of the attachment.</param>
            <param name="count">The count to set.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="pageInfo"/> or <paramref name="name"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="count"/> is less than zero.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.FilesStorageProvider.GetPageAttachmentDetails(ScrewTurn.Wiki.PluginFramework.PageInfo,System.String)">
            <summary>
            Gets the details of a page attachment.
            </summary>
            <param name="pageInfo">The page that owns the attachment.</param>
            <param name="name">The name of the attachment, for example "myfile.jpg".</param>
            <returns>The details of the attachment, or <c>null</c> if the attachment does not exist.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="pageInfo"/> or <paramref name="name"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.FilesStorageProvider.DeletePageAttachment(ScrewTurn.Wiki.PluginFramework.PageInfo,System.String)">
            <summary>
            Deletes a Page Attachment.
            </summary>
            <param name="pageInfo">The Page Info that owns the Attachment.</param>
            <param name="name">The name of the Attachment, for example "myfile.jpg".</param>
            <returns><c>true</c> if the Attachment is deleted, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="pageInfo"/> or <paramref name="name"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty or if the page or attachment do not exist.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.FilesStorageProvider.RenamePageAttachment(ScrewTurn.Wiki.PluginFramework.PageInfo,System.String,System.String)">
            <summary>
            Renames a Page Attachment.
            </summary>
            <param name="pageInfo">The Page Info that owns the Attachment.</param>
            <param name="oldName">The old name of the Attachment.</param>
            <param name="newName">The new name of the Attachment.</param>
            <returns><c>true</c> if the Attachment is renamed, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="pageInfo"/>, <paramref name="oldName"/> or <paramref name="newName"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="pageInfo"/>, <paramref name="oldName"/> or <paramref name="newName"/> are empty,
            or if the page or old attachment do not exist, or the new attachment name already exists.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.FilesStorageProvider.NotifyPageRenaming(ScrewTurn.Wiki.PluginFramework.PageInfo,ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Notifies to the Provider that a Page has been renamed.
            </summary>
            <param name="oldPage">The old Page Info object.</param>
            <param name="newPage">The new Page Info object.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="oldPage"/> or <paramref name="newPage"/> are <c>null</c></exception>
            <exception cref="T:System.ArgumentException">If the new page is already in use.</exception>
        </member>
        <member name="P:ScrewTurn.Wiki.FilesStorageProvider.Information">
            <summary>
            Gets the Information about the Provider.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.FilesStorageProvider.ConfigHelpHtml">
            <summary>
            Gets a brief summary of the configuration string format, in HTML. Returns <c>null</c> if no configuration is needed.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.FilesStorageProvider.ReadOnly">
            <summary>
            Gets a value specifying whether the provider is read-only, i.e. it can only provide data and not store it.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.Cache">
            <summary>
            Manages data cache.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.Cache.ClearPageCache">
            <summary>
            Clears the pages cache.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.Cache.ClearPseudoCache">
            <summary>
            Clears the pseudo cache.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.Cache.GetPageContent(ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Gets a cached <see cref="T:PageContent" />.
            </summary>
            <param name="page">The page to get the content of.</param>
            <returns>The page content, or <c>null</c>.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Cache.GetFormattedPageContent(ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Gets a cached formatted page content.
            </summary>
            <param name="page">The page to get the formatted content of.</param>
            <returns>The formatted page content, or <c>null</c>.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Cache.SetPageContent(ScrewTurn.Wiki.PluginFramework.PageInfo,ScrewTurn.Wiki.PluginFramework.PageContent)">
            <summary>
            Sets the page content in cache.
            </summary>
            <param name="page">The page to set the content of.</param>
            <param name="content">The content.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.Cache.SetFormattedPageContent(ScrewTurn.Wiki.PluginFramework.PageInfo,System.String)">
            <summary>
            Sets the formatted page content in cache.
            </summary>
            <param name="page">The page to set the content of.</param>
            <param name="content">The content.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.Cache.RemovePage(ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Removes a page from the cache.
            </summary>
            <param name="page">The page to remove.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.Cache.GetPseudoCacheValue(System.String)">
            <summary>
            Gets a pseudo cache item value.
            </summary>
            <param name="name">The name of the item to get the value of.</param>
            <returns>The value of the item, or <c>null</c>.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Cache.SetPseudoCacheValue(System.String,System.String)">
            <summary>
            Sets a pseudo cache item value.
            </summary>
            <param name="name">The name of the item to set the value of.</param>
            <param name="value">The value of the item.</param>
        </member>
        <member name="P:ScrewTurn.Wiki.Cache.Provider">
            <summary>
            Gets the cache provider.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Cache.OnlineUsers">
            <summary>
            Gets or sets the number of users online.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Cache.PageCacheUsage">
            <summary>
            Gets the number of pages currently in the page cache.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Cache.FormattedPageCacheUsage">
            <summary>
            Gets the number of formatted pages currently in the page cache.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.PagesStorageProvider">
            <summary>
            Implements a Pages Storage Provider.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.GetNamespacePartialPathForPageContent(System.String)">
            <summary>
            Gets the partial path of the folder that contains page content files for the specified namespace, followed by a directory separator char if appropriate.
            </summary>
            <param name="nspace">The namespace, or <c>null</c>.</param>
            <returns>The correct partial path, such as 'Namespace\' or ''.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.Init(ScrewTurn.Wiki.PluginFramework.IHostV30,System.String)">
            <summary>
            Initializes the Provider.
            </summary>
            <param name="host">The Host of the Provider.</param>
            <param name="config">The Configuration data, if any.</param>
            <exception cref="T:System.ArgumentNullException">If <b>host</b> or <b>config</b> are <c>null</c>.</exception>
            <exception cref="T:ScrewTurn.Wiki.PluginFramework.InvalidConfigurationException">If <b>config</b> is not valid or is incorrect.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.VerifyAndPerformUpgradeForCategories">
            <summary>
            Verifies the need for a data upgrade, and performs it when needed.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.VerifyIfPagesFileNeedsAnUpgrade">
            <summary>
            Verifies whether the pages files needs to be upgraded.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.VerifyAndPerformUpgradeForPages">
            <summary>
            Verifies the need for a data upgrade, and performs it when needed.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.VerifyAndPerformUpgradeForNavigationPaths">
            <summary>
            Verifies the need for a data upgrade, and performs it when needed.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.Shutdown">
            <summary>
            Method invoked on shutdown.
            </summary>
            <remarks>This method might not be invoked in some cases.</remarks>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.FindPage(System.String,System.String,ScrewTurn.Wiki.PluginFramework.PageInfo[])">
            <summary>
            Finds a page.
            </summary>
            <param name="nspace">The namespace that contains the page.</param>
            <param name="name">The name of the page to find.</param>
            <param name="pages">The pages array.</param>
            <returns>The found page, or <c>null</c>.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.GetNamespace(System.String)">
            <summary>
            Gets a namespace.
            </summary>
            <param name="name">The name of the namespace.</param>
            <returns>The <see cref="T:NamespaceInfo"/>, or <c>null</c> if no namespace is found.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>name</b> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <b>name</b> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.GetNamespaces">
            <summary>
            Gets all the sub-namespaces.
            </summary>
            <returns>The sub-namespaces, sorted by name.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.FindNamespace(System.String,ScrewTurn.Wiki.PluginFramework.NamespaceInfo[])">
            <summary>
            Finds a namespace.
            </summary>
            <param name="name">The name of the namespace to find.</param>
            <param name="namespaces">The namespaces array.</param>
            <returns>The found namespace, or <c>null</c>.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.NamespaceExists(System.String)">
            <summary>
            Determines whether a namespace exists.
            </summary>
            <param name="name">The name to check.</param>
            <returns><c>true</c> if the namespace exists or <b>name</b> is <c>null</c> (indicating the root), <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.AddNamespace(System.String)">
            <summary>
            Adds a new namespace.
            </summary>
            <param name="name">The name of the namespace.</param>
            <returns>The correct <see cref="T:NamespaceInfo"/> object.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>name</b> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <b>name</b> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.DumpNamespaces(ScrewTurn.Wiki.PluginFramework.NamespaceInfo[])">
            <summary>
            Dumps namespaces on disk.
            </summary>
            <param name="namespaces">The namespaces to dump.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.RenameNamespace(ScrewTurn.Wiki.PluginFramework.NamespaceInfo,System.String)">
            <summary>
            Renames a namespace.
            </summary>
            <param name="nspace">The namespace to rename.</param>
            <param name="newName">The new name of the namespace.</param>
            <returns>The correct <see cref="T:NamespaceInfo"/> object.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>nspace</b> or <b>newName</b> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <b>newName</b> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.SetNamespaceDefaultPage(ScrewTurn.Wiki.PluginFramework.NamespaceInfo,ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Sets the default page of a namespace.
            </summary>
            <param name="nspace">The namespace of which to set the default page.</param>
            <param name="page">The page to use as default page, or <c>null</c>.</param>
            <returns>The correct <see cref="T:NamespaceInfo"/> object.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>nspace</b> is <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.RemoveNamespace(ScrewTurn.Wiki.PluginFramework.NamespaceInfo)">
            <summary>
            Removes a namespace.
            </summary>
            <param name="nspace">The namespace to remove.</param>
            <returns><c>true</c> if the namespace is removed, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>nspace</b> is <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.MovePage(ScrewTurn.Wiki.PluginFramework.PageInfo,ScrewTurn.Wiki.PluginFramework.NamespaceInfo,System.Boolean)">
            <summary>
            Moves a page from its namespace into another.
            </summary>
            <param name="page">The page to move.</param>
            <param name="destination">The destination namespace (null for the root).</param>
            <param name="copyCategories">A value indicating whether to copy the page categories in the destination 
            namespace, if not already available.</param>
            <returns>The correct instance of <see cref="T:PageInfo"/>.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>page</b> is <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.MoveBackups(ScrewTurn.Wiki.PluginFramework.PageInfo,ScrewTurn.Wiki.PluginFramework.NamespaceInfo)">
            <summary>
            Moves the backups of a page into a new namespace.
            </summary>
            <param name="page">The page that is being moved.</param>
            <param name="destination">The destination namespace (<c>null</c> for the root).</param>
            <remarks>This method should be invoked <b>before</b> moving the corresponding page.</remarks>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.BuildCategoryInfo(System.String)">
            <summary>
            Extracts an instance of <see cref="T:CategoryInfo" /> from a line contained in the categories file.
            </summary>
            <param name="fileLine">The line to process.</param>
            <returns>The instance of <see cref="T:CategoryInfo" />.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.GetCategory(System.String)">
            <summary>
            Gets a category.
            </summary>
            <param name="fullName">The full name of the category.</param>
            <returns>The <see cref="T:CategoryInfo"/>, or <c>null</c> if no category is found.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="fullName"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="fullName"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.GetCategories(ScrewTurn.Wiki.PluginFramework.NamespaceInfo)">
            <summary>
            Gets all the Categories in a namespace.
            </summary>
            <param name="nspace">The namespace.</param>
            <returns>All the Categories in the namespace, sorted by name.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.GetAllCategories">
            <summary>
            Gets all the Categories.
            </summary>
            <returns>The Categories.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.GetCategoriesForPage(ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Gets all the categories of a page.
            </summary>
            <param name="page">The page.</param>
            <returns>The categories, sorted by name.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="page"/> is <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.CategoryExists(ScrewTurn.Wiki.PluginFramework.CategoryInfo)">
            <summary>
            Determines whether a category exists.
            </summary>
            <param name="category">The category to check.</param>
            <returns><c>true</c> if the category exists, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.AddCategory(System.String,System.String)">
            <summary>
            Adds a new Category.
            </summary>
            <param name="nspace">The target namespace (<c>null</c> for the root).</param>
            <param name="name">The Category name.</param>
            <returns>The correct CategoryInfo object.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.RenameCategory(ScrewTurn.Wiki.PluginFramework.CategoryInfo,System.String)">
            <summary>
            Renames a Category.
            </summary>
            <param name="category">The Category to rename.</param>
            <param name="newName">The new Name.</param>
            <returns>The correct CategoryInfo object.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="category"/> or <paramref name="newName"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="newName"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.RemoveCategory(ScrewTurn.Wiki.PluginFramework.CategoryInfo)">
            <summary>
            Removes a Category.
            </summary>
            <param name="category">The Category to remove.</param>
            <returns>True if the Category has been removed successfully.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="category"/> is <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.MergeCategories(ScrewTurn.Wiki.PluginFramework.CategoryInfo,ScrewTurn.Wiki.PluginFramework.CategoryInfo)">
            <summary>
            Merges two Categories.
            </summary>
            <param name="source">The source Category.</param>
            <param name="destination">The destination Category.</param>
            <returns>True if the Categories have been merged successfully.</returns>
            <remarks>The destination Category remains, while the source Category is deleted, and all its Pages re-bound in the destination Category.</remarks>
            <exception cref="T:System.ArgumentNullException">If <paramref name="source"/> or <paramref name="destination"/> are <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.BuildDocumentHandler(ScrewTurn.Wiki.SearchEngine.DumpedDocument)">
            <summary>
            Handles the construction of an <see cref="T:IDocument" /> for the search engine.
            </summary>
            <param name="dumpedDocument">The input dumped document.</param>
            <returns>The resulting <see cref="T:IDocument" />.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.TokenizeContent(System.String)">
            <summary>
            Tokenizes page content.
            </summary>
            <param name="content">The content to tokenize.</param>
            <returns>The tokenized words.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.IndexPage(ScrewTurn.Wiki.PluginFramework.PageContent)">
            <summary>
            Indexes a page.
            </summary>
            <param name="content">The content of the page.</param>
            <returns>The number of indexed words, including duplicates.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.UnindexPage(ScrewTurn.Wiki.PluginFramework.PageContent)">
            <summary>
            Removes a page from the search engine index.
            </summary>
            <param name="content">The content of the page to remove.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.PerformSearch(ScrewTurn.Wiki.SearchEngine.SearchParameters)">
            <summary>
            Performs a search in the index.
            </summary>
            <param name="parameters">The search parameters.</param>
            <returns>The results.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="parameters"/> is <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.RebuildIndex">
            <summary>
            Rebuilds the search index.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.GetIndexStats(System.Int32@,System.Int32@,System.Int32@,System.Int64@)">
            <summary>
            Gets some statistics about the search engine index.
            </summary>
            <param name="documentCount">The total number of documents.</param>
            <param name="wordCount">The total number of unique words.</param>
            <param name="occurrenceCount">The total number of word-document occurrences.</param>
            <param name="size">The approximated size, in bytes, of the search engine index.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.BuildLocalPageInfo(System.String)">
            <summary>
            Extracts an instance of <see cref="T:LocalPageInfo" /> from a line of the pages file.
            </summary>
            <param name="fileLine">The line to process.</param>
            <returns>The instance of <see cref="T:LocalPageInfo" />.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.GetAllPages">
            <summary>
            Gets all the Pages.
            </summary>
            <returns>All the Pages.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.GetPage(System.String)">
            <summary>
            Gets a page.
            </summary>
            <param name="fullName">The full name of the page.</param>
            <returns>The <see cref="T:PageInfo"/>, or <c>null</c> if no page is found.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="fullName"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="fullName"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.GetPages(ScrewTurn.Wiki.PluginFramework.NamespaceInfo)">
            <summary>
            Gets all the Pages in a namespace.
            </summary>
            <param name="nspace">The namespace (<c>null</c> for the root).</param>
            <returns>All the Pages in the namespace. The array is not sorted.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.GetUncategorizedPages(ScrewTurn.Wiki.PluginFramework.NamespaceInfo)">
            <summary>
            Gets all the pages in a namespace that are bound to zero categories.
            </summary>
            <param name="nspace">The namespace (<c>null</c> for the root).</param>
            <returns>The pages, sorted by name.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.LoadLocalPageInfo(ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Finds a corresponding instance of <see cref="T:LocalPageInfo" /> in the available pages.
            </summary>
            <param name="page">The instance of <see cref="T:PageInfo" /> to "convert" to <see cref="T:LocalPageInfo" />.</param>
            <returns>The instance of <see cref="T:LocalPageInfo" />, or <c>null</c>.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.PageExists(ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Determines whether a page exists.
            </summary>
            <param name="page">The instance of <see cref="T:PageInfo" /> to look for.</param>
            <returns><c>true</c> if the page exists, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.AddPage(System.String,System.String,System.DateTime)">
            <summary>
            Adds a Page.
            </summary>
            <param name="nspace">The target namespace (<c>null</c> for the root).</param>
            <param name="name">The Page Name.</param>
            <param name="creationDateTime">The creation Date/Time.</param>
            <returns>The correct PageInfo object or null.</returns>
            <remarks>This method should <b>not</b> create the content of the Page.</remarks>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.GetContent(ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Gets the Content of a Page.
            </summary>
            <param name="page">The Page.</param>
            <returns>The Page Content object, <c>null</c> if the page does not exist or <paramref name="page"/> is <c>null</c>,
            or an empty instance if the content could not be retrieved (<seealso cref="M:ScrewTurn.Wiki.PluginFramework.PageContent.GetEmpty(ScrewTurn.Wiki.PluginFramework.PageInfo)"/>).</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.Backup(ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Backups a Page.
            </summary>
            <param name="page">The Page to backup.</param>
            <returns>True if the Page has been backupped successfully.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.GetBackups(ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Gets the Backup/Revision numbers of a Page.
            </summary>
            <param name="page">The Page to get the Backups of.</param>
            <returns>The list of Backup/Revision numbers.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="page"/> is <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.GetBackupContent(ScrewTurn.Wiki.PluginFramework.PageInfo,System.Int32)">
            <summary>
            Gets the Content of a Backup.
            </summary>
            <param name="page">The Page.</param>
            <param name="revision">The revision.</param>
            <returns>The content.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="page"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="revision"/> is less than zero.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.SetBackupContent(ScrewTurn.Wiki.PluginFramework.PageContent,System.Int32)">
            <summary>
            Forces to overwrite or create a Backup.
            </summary>
            <param name="content">The Backup content.</param>
            <param name="revision">The revision.</param>
            <returns>True if the Backup has been created successfully.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="content"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="revision"/> is less than zero.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.RenamePage(ScrewTurn.Wiki.PluginFramework.PageInfo,System.String)">
            <summary>
            Renames a Page.
            </summary>
            <param name="page">The Page to rename.</param>
            <param name="newName">The new Name.</param>
            <returns>True if the Page has been renamed successfully.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="page"/> or <paramref name="newName"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="newName"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.RenameBackups(ScrewTurn.Wiki.PluginFramework.PageInfo,System.String)">
            <summary>
            Renames the backups of a page.
            </summary>
            <param name="page">The page that is being renamed.</param>
            <param name="newName">The new name of the page.</param>
            <remarks>This method should be invoked <b>before</b> renaming the corresponding page.</remarks>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.ModifyPage(ScrewTurn.Wiki.PluginFramework.PageInfo,System.String,System.String,System.DateTime,System.String,System.String,System.String[],System.String,ScrewTurn.Wiki.PluginFramework.SaveMode)">
            <summary>
            Modifies the Content of a Page.
            </summary>
            <param name="page">The Page.</param>
            <param name="title">The Title of the Page.</param>
            <param name="username">The Username.</param>
            <param name="dateTime">The Date/Time.</param>
            <param name="comment">The Comment of the editor, about this revision.</param>
            <param name="content">The Page Content.</param>
            <param name="keywords">The keywords, usually used for SEO.</param>
            <param name="description">The description, usually used for SEO.</param>
            <param name="saveMode">The save mode for this modification.</param>
            <returns><c>true</c> if the Page has been modified successfully, <c>false</c> otherwise.</returns>
            <remarks>If <b>saveMode</b> equals <b>Draft</b> and a draft already exists, it is overwritten.</remarks>
            <exception cref="T:System.ArgumentNullException">If <paramref name="page"/>, <paramref name="title"/> <paramref name="username"/> or <paramref name="content"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="title"/> or <paramref name="username"/> are empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.GetDraft(ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Gets the content of a draft of a Page.
            </summary>
            <param name="page">The Page.</param>
            <returns>The draft, or <c>null</c> if no draft exists.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="page"/> is <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.DeleteDraft(ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Deletes a draft of a Page.
            </summary>
            <param name="page">The page.</param>
            <returns><c>true</c> if the draft is deleted, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="page"/> is <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.RollbackPage(ScrewTurn.Wiki.PluginFramework.PageInfo,System.Int32)">
            <summary>
            Performs the rollback of a Page to a specified revision.
            </summary>
            <param name="page">The Page to rollback.</param>
            <param name="revision">The Revision to rollback the Page to.</param>
            <returns><c>true</c> if the rollback succeeded, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="page"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="revision"/> is less than zero.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.DeleteBackups(ScrewTurn.Wiki.PluginFramework.PageInfo,System.Int32)">
            <summary>
            Deletes the Backups of a Page, up to a specified revision.
            </summary>
            <param name="page">The Page to delete the backups of.</param>
            <param name="revision">The newest revision to delete (newer revision are kept) or -1 to delete all the Backups.</param>
            <returns><c>true</c> if the deletion succeeded, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="page"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="revision"/> is less than -1.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.RemovePage(ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Removes a Page.
            </summary>
            <param name="page">The Page to remove.</param>
            <returns><c>true</c> if the Page has been removed successfully, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="page"/> is <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.RebindPage(ScrewTurn.Wiki.PluginFramework.PageInfo,System.String[])">
            <summary>
            Binds a Page with one or more Categories.
            </summary>
            <param name="page">The Page to bind.</param>
            <param name="categories">The Categories to bind the Page with (full name).</param>
            <returns>True if the binding succeeded.</returns>
            <remarks>After a successful operation, the Page is bound with all and only the categories passed as argument.</remarks>
            <exception cref="T:System.ArgumentNullException">If <paramref name="page"/> or <paramref name="categories"/> are <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.BackupPagesFile">
            <summary>
            Makes a backup copy of the pages file.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.DumpPages(ScrewTurn.Wiki.PluginFramework.PageInfo[])">
            <summary>
            Writes all pages in the storage file.
            </summary>
            <param name="pages">The pages to write.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.BackupCategoriesFile">
            <summary>
            Makes a backup copy of the categories file.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.DumpCategories(ScrewTurn.Wiki.PluginFramework.CategoryInfo[])">
            <summary>
            Writes all categories in the storage file.
            </summary>
            <param name="categories">The categories.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.GetMessages(ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Gets the Page Messages.
            </summary>
            <param name="page">The Page.</param>
            <returns>The list of the <b>first-level</b> Messages, containing the replies properly nested, sorted by date/time.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="page"/> is <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.GetMessageCount(ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Gets the total number of Messages in a Page Discussion.
            </summary>
            <param name="page">The Page.</param>
            <returns>The number of messages.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="page"/> is <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.FindMessage(System.Collections.Generic.IEnumerable{ScrewTurn.Wiki.PluginFramework.Message},System.Int32)">
            <summary>
            Finds a Message in a Message tree.
            </summary>
            <param name="messages">The Message tree.</param>
            <param name="id">The ID of the Message to find.</param>
            <returns>The Message or null.</returns>
            <remarks>The method is recursive.</remarks>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.BulkStoreMessages(ScrewTurn.Wiki.PluginFramework.PageInfo,ScrewTurn.Wiki.PluginFramework.Message[])">
            <summary>
            Removes all messages for a page and stores the new messages.
            </summary>
            <param name="page">The page.</param>
            <param name="messages">The new messages to store.</param>
            <returns><c>true</c> if the messages are stored, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="page"/> or <paramref name="messages"/> are <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.AddMessage(ScrewTurn.Wiki.PluginFramework.PageInfo,System.String,System.String,System.DateTime,System.String,System.Int32)">
            <summary>
            Adds a new Message to a Page.
            </summary>
            <param name="page">The Page.</param>
            <param name="username">The Username.</param>
            <param name="subject">The Subject.</param>
            <param name="dateTime">The Date/Time.</param>
            <param name="body">The Body.</param>
            <param name="parent">The Parent Message ID, or -1.</param>
            <returns>True if the Message has been added successfully.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="page"/>, <paramref name="username"/>, <paramref name="subject"/> or <paramref name="body"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="username"/> or <paramref name="subject"/> are empty.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="parent"/> is less than -1.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.IndexMessage(ScrewTurn.Wiki.PluginFramework.PageInfo,System.Int32,System.String,System.DateTime,System.String)">
            <summary>
            Indexes a message.
            </summary>
            <param name="page">The page.</param>
            <param name="id">The message ID.</param>
            <param name="subject">The subject.</param>
            <param name="dateTime">The date/time.</param>
            <param name="body">The body.</param>
            <returns>The number of indexed words, including duplicates.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.IndexMessageTree(ScrewTurn.Wiki.PluginFramework.PageInfo,ScrewTurn.Wiki.PluginFramework.Message)">
            <summary>
            Indexes a message tree.
            </summary>
            <param name="page">The page.</param>
            <param name="root">The tree root.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.UnindexMessage(ScrewTurn.Wiki.PluginFramework.PageInfo,System.Int32,System.String,System.DateTime,System.String)">
            <summary>
            Removes a message from the search engine index.
            </summary>
            <param name="page">The page.</param>
            <param name="id">The message ID.</param>
            <param name="subject">The subject.</param>
            <param name="dateTime">The date/time.</param>
            <param name="body">The body.</param>
            <returns>The number of indexed words, including duplicates.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.UnindexMessageTree(ScrewTurn.Wiki.PluginFramework.PageInfo,ScrewTurn.Wiki.PluginFramework.Message)">
            <summary>
            Removes a message tree from the search engine index.
            </summary>
            <param name="page">The page.</param>
            <param name="root">The tree root.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.GetFreeMessageID(ScrewTurn.Wiki.LocalPageInfo)">
            <summary>
            Find a free Message ID for a Page.
            </summary>
            <param name="page">The Page.</param>
            <returns>The Message ID.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.RemoveMessage(ScrewTurn.Wiki.PluginFramework.PageInfo,System.Int32,System.Boolean)">
            <summary>
            Removes a Message.
            </summary>
            <param name="page">The Page.</param>
            <param name="id">The ID of the Message to remove.</param>
            <param name="removeReplies">A value specifying whether or not to remove the replies.</param>
            <returns>True if the Message has been removed successfully.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="page"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="id"/> is less than zero.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.FindAnchestor(System.Collections.Generic.IEnumerable{ScrewTurn.Wiki.PluginFramework.Message},System.Int32)">
            <summary>
            Finds the anchestor/parent of a Message.
            </summary>
            <param name="messages">The Messages.</param>
            <param name="id">The Message ID.</param>
            <returns>The anchestor Message or null.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.RemoveMessage(System.Collections.Generic.List{ScrewTurn.Wiki.PluginFramework.Message},ScrewTurn.Wiki.PluginFramework.Message)">
            <summary>
            Removes a Message from a Message Tree.
            </summary>
            <param name="messages">The Message Tree.</param>
            <param name="msg">The Message to Remove.</param>
            <returns>True if the Message has been removed.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.ModifyMessage(ScrewTurn.Wiki.PluginFramework.PageInfo,System.Int32,System.String,System.String,System.DateTime,System.String)">
            <summary>
            Modifies a Message.
            </summary>
            <param name="page">The Page.</param>
            <param name="id">The ID of the Message to modify.</param>
            <param name="username">The Username.</param>
            <param name="subject">The Subject.</param>
            <param name="dateTime">The Date/Time.</param>
            <param name="body">The Body.</param>
            <returns>True if the Message has been modified successfully.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="page"/>, <paramref name="username"/>, <paramref name="subject"/> or <paramref name="body"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="id"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="username"/> or <paramref name="subject"/> are empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.DumpMessages(ScrewTurn.Wiki.PluginFramework.PageInfo,System.Collections.Generic.IEnumerable{ScrewTurn.Wiki.PluginFramework.Message})">
            <summary>
            Dumps the Message tree of a Page to disk.
            </summary>
            <param name="page">The Page.</param>
            <param name="messages">The Message tree.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.AppendMessages(System.Collections.Generic.IEnumerable{ScrewTurn.Wiki.PluginFramework.Message},System.Int32,System.Text.StringBuilder)">
            <summary>
            Appends to a StringBuilder object the branches and leaves of a Message tree.
            </summary>
            <param name="messages">The Message tree branch to append.</param>
            <param name="parent">The ID of the parent of the Message tree or -1.</param>
            <param name="sb">The StringBuilder.</param>
            <remarks>The methods appends the Messages traversing the tree depht-first, and it is recursive.</remarks>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.BuildNavigationPath(System.String)">
            <summary>
            Extracts an instance of <see cref="T:NavigationPath" /> from a line in the navigation paths file.
            </summary>
            <param name="fileLine">The line to process.</param>
            <returns>The instance of <see cref="T:NavigationPath" /></returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.GetAllNavigationPaths">
            <summary>
            Gets all the Navigation Paths.
            </summary>
            <returns>The Navigation Paths.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.GetNavigationPaths(ScrewTurn.Wiki.PluginFramework.NamespaceInfo)">
            <summary>
            Gets all the Navigation Paths in a Namespace.
            </summary>
            <param name="nspace">The Namespace.</param>
            <returns>All the Navigation Paths, sorted by name.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.AddNavigationPath(System.String,System.String,ScrewTurn.Wiki.PluginFramework.PageInfo[])">
            <summary>
            Adds a new Navigation Path.
            </summary>
            <param name="nspace">The target namespace (<c>null</c> for the root).</param>
            <param name="name">The Name of the Path.</param>
            <param name="pages">The Pages array.</param>
            <returns>The correct <see cref="T:NavigationPath"/> object.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> or <paramref name="pages"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="name"/> or <paramref name="pages"/> are empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.ModifyNavigationPath(ScrewTurn.Wiki.PluginFramework.NavigationPath,ScrewTurn.Wiki.PluginFramework.PageInfo[])">
            <summary>
            Modifies an existing Navigation Path.
            </summary>
            <param name="path">The Navigation Path to modify.</param>
            <param name="pages">The new Pages array.</param>
            <returns>The correct <see cref="T:NavigationPath"/> object.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="path"/> or <paramref name="pages"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="pages"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.RemoveNavigationPath(ScrewTurn.Wiki.PluginFramework.NavigationPath)">
            <summary>
            Removes a Navigation Path.
            </summary>
            <param name="path">The Navigation Path to remove.</param>
            <returns>True if the Path is removed successfully.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="path"/> is <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.DumpNavigationPaths(ScrewTurn.Wiki.PluginFramework.NavigationPath[])">
            <summary>
            Writes an array of Navigation Paths to disk.
            </summary>
            <param name="paths">The array.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.GetSnippets">
            <summary>
            Gets all the Snippets.
            </summary>
            <returns>All the Snippets, sorted by name.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.AddSnippet(System.String,System.String)">
            <summary>
            Adds a new Snippet.
            </summary>
            <param name="name">The Name of the Snippet.</param>
            <param name="content">The Content of the Snippet.</param>
            <returns>The correct Snippet object.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> or <paramref name="content"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.ModifySnippet(System.String,System.String)">
            <summary>
            Modifies a new Snippet.
            </summary>
            <param name="name">The Name of the Snippet to modify.</param>
            <param name="content">The Content of the Snippet.</param>
            <returns>The correct Snippet object.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> or <paramref name="content"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.RemoveSnippet(System.String)">
            <summary>
            Removes a new Snippet.
            </summary>
            <param name="name">The Name of the Snippet to remove.</param>
            <returns>True if the Snippet is removed successfully.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.GetContentTemplates">
            <summary>
            Gets all the content templates.
            </summary>
            <returns>All the content templates, sorted by name.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.AddContentTemplate(System.String,System.String)">
            <summary>
            Adds a new content template.
            </summary>
            <param name="name">The name of template.</param>
            <param name="content">The content of the template.</param>
            <returns>The correct <see cref="T:ContentTemplate"/> object.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> or <paramref name="content"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.ModifyContentTemplate(System.String,System.String)">
            <summary>
            Modifies an existing content template.
            </summary>
            <param name="name">The name of the template to modify.</param>
            <param name="content">The content of the template.</param>
            <returns>The correct <see cref="T:ContentTemplate"/> object.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> or <paramref name="content"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.PagesStorageProvider.RemoveContentTemplate(System.String)">
            <summary>
            Removes a content template.
            </summary>
            <param name="name">The name of the template to remove.</param>
            <returns><c>true</c> if the template is removed, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentNullException">If <paramref name="name"/> is empty.</exception>
        </member>
        <member name="P:ScrewTurn.Wiki.PagesStorageProvider.Information">
            <summary>
            Gets the Information about the Provider.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PagesStorageProvider.ConfigHelpHtml">
            <summary>
            Gets a brief summary of the configuration string format, in HTML. Returns <c>null</c> if no configuration is needed.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PagesStorageProvider.ReadOnly">
            <summary>
            Gets a value specifying whether the provider is read-only, i.e. it can only provide data and not store it.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PagesStorageProvider.IsIndexCorrupted">
            <summary>
            Gets a value indicating whether the search engine index is corrupted and needs to be rebuilt.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.LocalPageInfo">
            <summary>
            Represents a Local Page.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.LocalPageInfo.#ctor(System.String,ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV30,System.DateTime,System.String)">
            <summary>
            Initializes a new instance of the <b>PageInfo</b> class.
            </summary>
            <param name="fullName">The Full Name of the Page.</param>
            <param name="provider">The Pages Storage Provider that manages this Page.</param>
            <param name="creationDateTime">The creation Date/Time.</param>
            <param name="file">The relative path of the file used for data storage.</param>
        </member>
        <member name="P:ScrewTurn.Wiki.LocalPageInfo.File">
            <summary>
            Gets or sets the relative path of the File used for data storage.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.Collisions">
            <summary>
            Manages Page Editing collisions.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Collisions.EditingSessionTimeout">
            <summary>
            The refresh interval used for renewing the sessions.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.Collisions.RenewEditingSession(ScrewTurn.Wiki.PluginFramework.PageInfo,System.String)">
            <summary>
            Adds or updates an editing session.
            </summary>
            <param name="page">The edited Page.</param>
            <param name="user">The User who is editing the Page.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.Collisions.CancelEditingSession(ScrewTurn.Wiki.PluginFramework.PageInfo,System.String)">
            <summary>
            Cancels an editing session.
            </summary>
            <param name="page">The Page.</param>
            <param name="user">The User.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.Collisions.IsPageBeingEdited(ScrewTurn.Wiki.PluginFramework.PageInfo,System.String)">
            <summary>
            Finds whether a Page is being edited by a different user.
            </summary>
            <param name="page">The Page.</param>
            <param name="currentUser">The User who is requesting the status of the Page.</param>
            <returns>True if the Page is being edited by another User.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Collisions.WhosEditing(ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Gets the username of the user who's editing a page.
            </summary>
            <param name="page">The page.</param>
            <returns>The username.</returns>
        </member>
        <member name="T:ScrewTurn.Wiki.StartupTools">
            <summary>
            Provides tools for starting and shutting down the wiki engine.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.StartupTools.GetSettingsStorageProviderConfiguration">
            <summary>
            Gets the Settings Storage Provider configuration string from web.config.
            </summary>
            <returns>The configuration string.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.StartupTools.UpdateDllsIntoSettingsProvider(ScrewTurn.Wiki.PluginFramework.ISettingsStorageProviderV30,System.String)">
            <summary>
            Updates the DLLs into the settings storage provider, if appropriate.
            </summary>
            <param name="provider">The provider.</param>
            <param name="settingsProviderAsmName">The file name of the assembly that contains the current Settings Storage Provider.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.StartupTools.Startup">
            <summary>
            Performs all needed startup operations.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.StartupTools.VerifyAndCreateDefaultGroups">
            <summary>
            Verifies the existence of the default user groups and creates them if necessary.
            </summary>
            <returns><c>true</c> if the groups were created, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.StartupTools.CreateMainPage">
            <summary>
            Creates the main page.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.StartupTools.Shutdown">
            <summary>
            Performs shutdown operations, such as shutting-down Providers.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.StartupTools.SetAdministratorsGroupDefaultPermissions(ScrewTurn.Wiki.PluginFramework.UserGroup)">
            <summary>
            Sets the default permissions for the administrators group, properly importing version 2.0 values.
            </summary>
            <param name="administrators">The administrators group.</param>
            <returns><c>true</c> if the operation succeeded, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.StartupTools.SetUsersGroupDefaultPermissions(ScrewTurn.Wiki.PluginFramework.UserGroup)">
            <summary>
            Sets the default permissions for the users group, properly importing version 2.0 values.
            </summary>
            <param name="users">The users group.</param>
            <returns><c>true</c> if the operation succeeded, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.StartupTools.SetAnonymousGroupDefaultPermissions(ScrewTurn.Wiki.PluginFramework.UserGroup)">
            <summary>
            Sets the default permissions for the anonymous users group, properly importing version 2.0 values.
            </summary>
            <param name="anonymous">The anonymous users group.</param>
            <returns><c>true</c> if the operation succeeded, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.StartupTools.SetupFileManagementPermissions(ScrewTurn.Wiki.PluginFramework.UserGroup)">
            <summary>
            Sets file management permissions for the users or anonymous users group, importing version 2.0 values.
            </summary>
            <param name="group">The group.</param>
            <returns><c>true</c> if the operation succeeded, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.StartupTools.ImportPageDiscussionPermissions">
            <summary>
            Imports version 2.0 page discussion settings and properly propagates them to user groups and single pages, when needed.
            </summary>
            <returns><c>true</c> if the operation succeeded, <c>false</c> otherwise.</returns>
        </member>
        <member name="T:ScrewTurn.Wiki.Snippets">
            <summary>
            Manages snippets.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.Snippets.GetSnippets">
            <summary>
            Gets the complete list of the Snippets.
            </summary>
            <returns>The snippets, sorted by name.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Snippets.Find(System.String)">
            <summary>
            Finds a Snippet.
            </summary>
            <param name="name">The Name of the Snippet to find.</param>
            <returns>The Snippet or null if it is not found.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Snippets.AddSnippet(System.String,System.String,ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV30)">
            <summary>
            Creates a new Snippet.
            </summary>
            <param name="name">The name of the Snippet.</param>
            <param name="content">The content of the Snippet.</param>
            <param name="provider">The Provider to use to store the Snippet (<c>null</c> for the default provider).</param>
            <returns>True if the Snippets has been addedd successfully.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Snippets.RemoveSnippet(ScrewTurn.Wiki.PluginFramework.Snippet)">
            <summary>
            Removes a Snippet.
            </summary>
            <param name="snippet">The Snippet to remove.</param>
            <returns>True if the Snippet has been removed successfully.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Snippets.ModifySnippet(ScrewTurn.Wiki.PluginFramework.Snippet,System.String)">
            <summary>
            Modifies the Content of a Snippet.
            </summary>
            <param name="snippet">The Snippet to update.</param>
            <param name="content">The new Content.</param>
            <returns>True if the Snippet has been updated successfully.</returns>
        </member>
        <member name="F:ScrewTurn.Wiki.Snippets.ParametersRegex">
            <summary>
            The regular expression to use for extracting parameters.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.Snippets.CountParameters(ScrewTurn.Wiki.PluginFramework.Snippet)">
            <summary>
            Counts the parameters in a snippet.
            </summary>
            <param name="snippet">The snippet.</param>
            <returns>The number of parameters.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Snippets.ExtractParameterNames(ScrewTurn.Wiki.PluginFramework.Snippet)">
            <summary>
            Finds the parameters in a snippet.
            </summary>
            <param name="snippet">The snippet.</param>
            <returns>The parameter names.</returns>
        </member>
        <member name="T:ScrewTurn.Wiki.Settings">
            <summary>
            Allows access to all the ScrewTurn Wiki settings and configuration options.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.Settings.BeginBulkUpdate">
            <summary>
            Begins a bulk update session.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.Settings.EndBulkUpdate">
            <summary>
            Ends a bulk update session.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.Settings.GetInt(System.String,System.Int32)">
            <summary>
            Gets an integer.
            </summary>
            <param name="value">The string value.</param>
            <param name="def">The default value, returned when string parsing fails.</param>
            <returns>The result.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Settings.GetBool(System.String,System.Boolean)">
            <summary>
            Gets a boolean.
            </summary>
            <param name="value">The string value.</param>
            <param name="def">The default value, returned when parsing fails.</param>
            <returns>The result.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Settings.PrintBool(System.Boolean)">
            <summary>
            Prints a boolean.
            </summary>
            <param name="value">The value.</param>
            <returns>The string result.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Settings.GetString(System.String,System.String)">
            <summary>
            Gets a string.
            </summary>
            <param name="value">The raw string.</param>
            <param name="def">The default value, returned when the raw string is <c>null</c>.</param>
            <returns>The result.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Settings.GetTheme(System.String)">
            <summary>
            Gets the theme name for a namespace.
            </summary>
            <param name="nspace">The namespace (<c>null</c> for the root).</param>
            <returns>The theme name.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Settings.SetTheme(System.String,System.String)">
            <summary>
            Sets the theme for a namespace.
            </summary>
            <param name="nspace">The namespace (<c>null</c> for the root).</param>
            <param name="theme">The theme name.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.Settings.GetThemePath(System.String)">
            <summary>
            Gets the Theme Path for a namespace.
            </summary>
            <param name="nspace">The namespace (<c>null</c> for the root).</param>
            <returns>The path of the theme.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Settings.IsMetaDataItemGlobal(ScrewTurn.Wiki.PluginFramework.MetaDataItem)">
            <summary>
            Determines whether a meta-data item is global or namespace-specific.
            </summary>
            <param name="item">The item to test.</param>
            <returns><c>true</c> if the meta-data item is global, <c>false</c> otherwise.</returns>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.Provider">
            <summary>
            Gets the settings storage provider.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.WikiVersion">
            <summary>
            Gets the version of the Wiki.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.LoginCookieName">
            <summary>
            Gets the name of the Login Cookie.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.CultureCookieName">
            <summary>
            Gets the name of the Culture Cookie.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.MasterPassword">
            <summary>
            Gets the Master Password, used to encrypt the Users data.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.Direction">
            <summary>
            Gets direction of the application
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.MasterPasswordBytes">
            <summary>
            Gets the bytes of the MasterPassword.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.PageExtension">
            <summary>
            Gets the extension used for Pages, including the dot.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.DisplayNameRegex">
            <summary>
            Gets the display name validation regex.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.EmailRegex">
            <summary>
            Gets the Email validation Regex.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.WikiTitleRegex">
            <summary>
            Gets the WikiTitle validation Regex.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.MainUrlRegex">
            <summary>
            Gets the MainUrl validation Regex.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.SmtpServerRegex">
            <summary>
            Gets the SMTP Server validation Regex.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.RootDirectory">
            <summary>
            Gets the Root Directory of the Wiki.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.PublicDirectory">
            <summary>
            Gets the Public Directory of the Wiki.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.PublicDirectoryName">
            <summary>
            Gets the Public Directory Name (without the full Path) of the Wiki.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.ThemesDirectoryName">
            <summary>
            Gets the Name of the Themes directory.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.ThemesDirectory">
            <summary>
            Gets the Themes directory.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.JsDirectoryName">
            <summary>
            Gets the Name of the JavaScript Directory.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.JsDirectory">
            <summary>
            Gets the JavaScript Directory.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.WikiTitle">
            <summary>
            Gets or sets the Title of the Wiki.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.SmtpServer">
            <summary>
            Gets or sets the SMTP Server.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.SmtpUsername">
            <summary>
            Gets or sets the SMTP Server Username.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.SmtpPassword">
            <summary>
            Gets or sets the SMTP Server Password.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.SmtpPort">
            <summary>
            Gets or sets the SMTP Server Port.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.SmtpSsl">
            <summary>
            Gets or sets a value specifying whether to enable SSL in SMTP.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.PublicAccess">
            <summary>
            Gets or sets a value specifying whether the access to the Wiki is public or not (in this case users won't need to login in order to edit pagesCache).
            </summary>
            <remarks>Deprecated in version 3.0.</remarks>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.PrivateAccess">
            <summary>
            Gets or sets a value specifying whether the access to the Wiki is private or not (in this case users won't be able to view pagesCache unless they are logged in).
            </summary>
            <remarks>Deprecated in version 3.0.</remarks>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.FileManagementInPublicAccessAllowed">
            <summary>
            Gets or sets a value specifying whether, in Public Access mode, anonymous file management is allowed.
            </summary>
            <remarks>Deprecated in version 3.0.</remarks>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.UsersCanRegister">
            <summary>
            Gets or sets a value specifying whether Users can create new accounts or not (in this case Register.aspx won't be available).
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.DisableCaptchaControl">
            <summary>
            Gets or sets a value specifying whether to disable the Captcha control in the Registration Page.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.EnableViewPageCodeFeature">
            <summary>
            Gets or sets a value indicating whether to enable the "View Page Code" feature.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.EnablePageInfoDiv">
            <summary>
            Gets or sets a value indicating whether to enable the Page Information DIV.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.EnablePageToolbar">
            <summary>
            Gets or sets a value indicating whether to enable the Page Toolbar.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.AccountActivationMode">
            <summary>
            Gets or sets the Account Activation Mode.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.ChangeModerationMode">
            <summary>
            Gets or sets the page change moderation mode.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.UsersCanCreateNewPages">
            <summary>
            Gets or sets a value specifying whether or not Users can create new Page.
            </summary>
            <remarks>Deprecated in version 3.0.</remarks>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.UsersCanViewFiles">
            <summary>
            Gets or sets a value specifying whether or not users can view uploaded Files.
            </summary>
            <remarks>Deprecated in version 3.0.</remarks>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.UsersCanUploadFiles">
            <summary>
            Gets or sets a value specifying whether or not users can upload Files.
            </summary>
            <remarks>Deprecated in version 3.0.</remarks>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.UsersCanDeleteFiles">
            <summary>
            Gets or sets a value specifying whether or not users can delete Files.
            </summary>
            <remarks>Deprecated in version 3.0.</remarks>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.UsersCanCreateNewCategories">
            <summary>
            Gets or sets a value specifying whether or not users can create new Categories.
            </summary>
            <remarks>Deprecated in version 3.0.</remarks>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.UsersCanManagePageCategories">
            <summary>
            Gets or sets a value specifying whether or not users can manage Page Categories.
            </summary>
            <remarks>Deprecated in version 3.0.</remarks>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.DefaultLanguage">
            <summary>
            Gets or sets the Default Language.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.DefaultTimezone">
            <summary>
            Gets or sets the Default Timezone (time delta in minutes).
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.DateTimeFormat">
            <summary>
            Gets or sets the DateTime format.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.MainUrl">
            <summary>
            Gets or sets the main URL of the Wiki.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.CookiePath">
            <summary>
            Gets the correct path to use with Cookies.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.ContactEmail">
            <summary>
            Gets or sets the Contact Email.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.SenderEmail">
            <summary>
            Gets or sets the Sender Email.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.ErrorsEmails">
            <summary>
            Gets or sets the email addresses to send a message to when an error occurs.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.DefaultPage">
            <summary>
            Gets or sets the Defaul Page of the Wiki.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.MaxRecentChangesToDisplay">
            <summary>
            Gets or sets the maximum number of recent changes to display with {RecentChanges} special tag.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.EnableDoubleClickEditing">
            <summary>
            Gets or sets a value specifying whether to enable double-click Page editing.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.EnableSectionEditing">
            <summary>
            Gets or sets a value indicating whether to enable section editing.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.EnableSectionAnchors">
            <summary>
            Gets or sets a value indicating whether to display section anchors.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.DisableBreadcrumbsTrail">
            <summary>
            Gets or sets a value indicating whether to disable the Breadcrumbs Trail.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.AutoGeneratePageNames">
            <summary>
            Gets or sets a value indicating whether the editor should auto-generate page names from the title.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.ProcessSingleLineBreaks">
            <summary>
            Gets or sets a value indicating whether or not to process single line breaks in WikiMarkup.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.KeptBackupNumber">
            <summary>
            Gets or sets the # of Backups that are kept. Older backups are deleted after Page editing.
            </summary>
            <remarks>-1 indicates that no backups are deleted.</remarks>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.AllowedFileTypes">
            <summary>
            Gets or sets the list of allowed file types.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.FileDownloadCountFilterMode">
            <summary>
            Gets or sets the file download count filter mode.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.FileDownloadCountFilter">
            <summary>
            Gets or sets the file download count extension filter.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.ScriptTagsAllowed">
            <summary>
            Gets or sets a value specifying whether script tags are allowed.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.LoggingLevel">
            <summary>
            Gets or sets the Logging Level.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.MaxLogSize">
            <summary>
            Gets or sets the Max size of the Log file (KB).
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.IpHostFilter">
            <summary>
            Gets or sets the IP/Host filter for page editing.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.MaxRecentChanges">
            <summary>
            Gets or sets the max number of recent changes to log.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.ConfigVisibleToAdmins">
            <summary>
            Gets or sets a valus specifying whether or not Administrators cannot access the Configuration section in the Administration page.
            </summary>
            <remarks>Deprecated in version 3.0.</remarks>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.DefaultUsersProvider">
            <summary>
            Gets or sets the Type name of the Default Users Provider.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.DefaultPagesProvider">
            <summary>
            Gets or sets the Type name of the Default Pages Provider.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.DefaultFilesProvider">
            <summary>
            Gets or sets the Type name of the Default Files Provider.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.DefaultCacheProvider">
            <summary>
            Gets or sets the Default Cache Provider.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.DiscussionPermissions">
            <summary>
            Gets or sets the Discussion Permissions.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.DisableConcurrentEditing">
            <summary>
            Gets or sets a value specifying whether or not to disable concurrent editing of Pages.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.UseVisualEditorAsDefault">
            <summary>
            Gets or sets a value indicating whether to use the Visual editor as default.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.AdministratorsGroup">
            <summary>
            Gets or sets the name of the default Administrators group.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.UsersGroup">
            <summary>
            Gets or sets the name of the default Users group.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.AnonymousGroup">
            <summary>
            Gets or sets the name of the default Anonymous users group.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.DisplayGravatars">
            <summary>
            Gets or sets a value indicating whether to display gravatars.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.RssFeedsMode">
            <summary>
            Gets or sets the functioning mode of RSS feeds.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.DisableAutomaticVersionCheck">
            <summary>
            Gets or sets a value indicating whether to disable the Automatic Version Check.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.MaxFileSize">
            <summary>
            Gets or sets the Max file size for upload (in KB).
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.DisableCache">
            <summary>
            Gets or sets a value specifying whether to disable the cache.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.CacheSize">
            <summary>
            Gets or sets the Cache Size.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.CacheCutSize">
            <summary>
            Gets or sets the Cache Cut Size.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.EnableViewStateCompression">
            <summary>
            Gets or sets a value specifying whether ViewState compression is enabled or not.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.EnableHttpCompression">
            <summary>
            Gets or sets a value specifying whether HTTP compression is enabled or not.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.UsernameRegex">
            <summary>
            Gets or sets the Username validation Regex.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.PasswordRegex">
            <summary>
            Gets or sets the Password validation Regex.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Settings.LastPageIndexing">
            <summary>
            Gets or sets the last page indexing.
            </summary>
            <value>The last page indexing DateTime.</value>
        </member>
        <member name="T:ScrewTurn.Wiki.RssFeedsMode">
            <summary>
            Lists legal RSS feeds function modes.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.RssFeedsMode.FullText">
            <summary>
            RSS feeds serve full-text content.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.RssFeedsMode.Summary">
            <summary>
            RSS feeds serve summary content.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.RssFeedsMode.Disabled">
            <summary>
            RSS feeds are disabled.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.FileDownloadCountFilterMode">
            <summary>
            Lists legal file download filter modes.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.FileDownloadCountFilterMode.CountAll">
            <summary>
            Counts all downloads.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.FileDownloadCountFilterMode.CountSpecifiedExtensions">
            <summary>
            Counts only the specified extensions.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.FileDownloadCountFilterMode.ExcludeSpecifiedExtensions">
            <summary>
            Excludes the specified extensions.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.ChangeModerationMode">
            <summary>
            Lists legal page change moderation mode values.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.ChangeModerationMode.None">
            <summary>
            Page change moderation is disabled.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.ChangeModerationMode.RequirePageEditingPermissions">
            <summary>
            Anyone who has page editing permissoins but not page management permissions 
            can edit pages, but the changes are held in moderation.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.ChangeModerationMode.RequirePageViewingPermissions">
            <summary>
            Anyone who has page viewing permissions can edit pages, but the changes are 
            held in moderation.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.AccountActivationMode">
            <summary>
            Lists legal account activation mode values.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.AccountActivationMode.Email">
            <summary>
            Users must activate their account via email.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.AccountActivationMode.Administrator">
            <summary>
            Accounts must be activated by administrators.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.AccountActivationMode.Auto">
            <summary>
            Accounts are active by default.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.PageAttachmentDocument">
            <summary>
            Represents a page attachment document.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.PageAttachmentDocument.StandardTypeTag">
            <summary>
            The type tag for a <see cref="T:PageAttachmentDocument" />.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.PageAttachmentDocument.#ctor(ScrewTurn.Wiki.PluginFramework.PageInfo,System.String,System.String,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:PageAttachmentDocument" /> class.
            </summary>
            <param name="page">The page.</param>
            <param name="name">The attachment name.</param>
            <param name="provider">The file provider.</param>
            <param name="dateTime">The modification date/time.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.PageAttachmentDocument.#ctor(ScrewTurn.Wiki.SearchEngine.DumpedDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:PageAttachmentDocument" /> class.
            </summary>
            <param name="doc">The dumped document.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.PageAttachmentDocument.Tokenize(System.String)">
            <summary>
            Performs the tokenization of the document content.
            </summary>
            <param name="content">The content to tokenize.</param>
            <returns>The extracted words and their positions (always an empty array).</returns>
        </member>
        <member name="P:ScrewTurn.Wiki.PageAttachmentDocument.ID">
            <summary>
            Gets or sets the globally unique ID of the document.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PageAttachmentDocument.Name">
            <summary>
            Gets the globally-unique name of the document.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PageAttachmentDocument.Title">
            <summary>
            Gets the title of the document, if any.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PageAttachmentDocument.TypeTag">
            <summary>
            Gets the tag for the document type.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PageAttachmentDocument.DateTime">
            <summary>
            Gets the document date/time.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PageAttachmentDocument.Page">
            <summary>
            Gets the page.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.PageAttachmentDocument.Provider">
            <summary>
            Gets the provider.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.Content">
            <summary>
            Contains the Contents.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.Content.GetPseudoCacheValue(System.String)">
            <summary>
            Gets a pseudo cache item value.
            </summary>
            <param name="name">The name of the item to retrieve the value of.</param>
            <returns>The value of the item, or <c>null</c>.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Content.SetPseudoCacheValue(System.String,System.String)">
            <summary>
            Sets a pseudo cache item value, only if the content cache is enabled.
            </summary>
            <param name="name">The name of the item to store the value of.</param>
            <param name="value">The value of the item.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.Content.ClearPseudoCache">
            <summary>
            Clears the pseudo cache.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.Content.GetPageContent(ScrewTurn.Wiki.PluginFramework.PageInfo,System.Boolean)">
            <summary>
            Reads the Content of a Page.
            </summary>
            <param name="pageInfo">The Page.</param>
            <param name="cached">Specifies whether the page has to be cached or not.</param>
            <returns>The Page Content.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Content.GetFormattedPageContent(ScrewTurn.Wiki.PluginFramework.PageInfo,System.Boolean)">
            <summary>
            Gets the formatted Page Content, properly handling content caching and the Formatting Pipeline.
            </summary>
            <param name="page">The Page to get the formatted Content of.</param>
            <param name="cached">Specifies whether the formatted content has to be cached or not.</param>
            <returns>The formatted content.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Content.InvalidatePage(ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Invalidates the cached Content of a Page.
            </summary>
            <param name="pageInfo">The Page to invalidate the cached content of.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.Content.InvalidateAllPages">
            <summary>
            Invalidates all the cache Contents.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.AuthChecker">
            <summary>
            Utility class for checking permissions and authorizations.
            </summary>
            <remarks>All the methods in this class implement a security bypass for the <i>admin</i> user.</remarks>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthChecker.CheckActionForGlobals(System.String,System.String,System.String[])">
            <summary>
            Checks whether an action is allowed for the global resources.
            </summary>
            <param name="action">The action the user is attempting to perform.</param>
            <param name="currentUser">The current user.</param>
            <param name="groups">The groups the user is member of.</param>
            <returns><c>true</c> if the action is allowed.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthChecker.CheckActionForNamespace(ScrewTurn.Wiki.PluginFramework.NamespaceInfo,System.String,System.String,System.String[])">
            <summary>
            Checks whether an action is allowed for a namespace.
            </summary>
            <param name="nspace">The current namespace (<c>null</c> for the root).</param>
            <param name="action">The action the user is attempting to perform.</param>
            <param name="currentUser">The current user.</param>
            <param name="groups">The groups the user is member of.</param>
            <returns><c>true</c> if the action is allowed, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthChecker.CheckActionForPage(ScrewTurn.Wiki.PluginFramework.PageInfo,System.String,System.String,System.String[])">
            <summary>
            Checks whether an action is allowed for a page.
            </summary>
            <param name="page">The current page.</param>
            <param name="action">The action the user is attempting to perform.</param>
            <param name="currentUser">The current user.</param>
            <param name="groups">The groups the user is member of.</param>
            <returns><c>true</c> if the action is allowed, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthChecker.CheckActionForDirectory(ScrewTurn.Wiki.PluginFramework.IFilesStorageProviderV30,System.String,System.String,System.String,System.String[])">
            <summary>
            Checks whether an action is allowed for a directory.
            </summary>
            <param name="provider">The provider that manages the directory.</param>
            <param name="directory">The full path of the directory.</param>
            <param name="action">The action the user is attempting to perform.</param>
            <param name="currentUser">The current user.</param>
            <param name="groups">The groups the user is member of.</param>
            <returns><c>true</c> if the action is allowed, <c>false</c> otherwise.</returns>
        </member>
        <member name="P:ScrewTurn.Wiki.AuthChecker.SettingsProvider">
            <summary>
            Gets the settings storage provider.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.FilesAndAttachments">
            <summary>
            Manages files, directories and attachments.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.FilesAndAttachments.FindFileProvider(System.String)">
            <summary>
            Finds the provider that has a file.
            </summary>
            <param name="fullName">The full name of the file.</param>
            <returns>The provider that has the file, or <c>null</c> if the file could not be found.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.FilesAndAttachments.GetFileDetails(System.String)">
            <summary>
            Gets the details of a file.
            </summary>
            <param name="fullName">The full name of the file.</param>
            <returns>The details of the file, or <c>null</c> if no file is found.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.FilesAndAttachments.RetrieveFile(System.String,System.IO.Stream,System.Boolean)">
            <summary>
            Retrieves a File.
            </summary>
            <param name="fullName">The full name of the File.</param>
            <param name="output">The output stream.</param>
            <param name="countHit">A value indicating whether or not to count this retrieval in the statistics.</param>
            <returns><c>true</c> if the file is retrieved, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.FilesAndAttachments.FindDirectoryProvider(System.String)">
            <summary>
            Finds the provider that has a directory.
            </summary>
            <param name="fullPath">The full path of the directory.</param>
            <returns>The provider that has the directory, or <c>null</c> if no directory is found.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.FilesAndAttachments.ListDirectories(System.String)">
            <summary>
            Lists the directories in a directory.
            </summary>
            <param name="fullPath">The full path.</param>
            <returns>The directories.</returns>
            <remarks>If the specified directory is the root, then the list is performed on all providers.</remarks>
        </member>
        <member name="M:ScrewTurn.Wiki.FilesAndAttachments.ListFiles(System.String)">
            <summary>
            Lists the files in a directory.
            </summary>
            <param name="fullPath">The full path.</param>
            <returns>The files.</returns>
            <remarks>If the specified directory is the root, then the list is performed on all providers.</remarks>
        </member>
        <member name="M:ScrewTurn.Wiki.FilesAndAttachments.FindPageAttachmentProvider(ScrewTurn.Wiki.PluginFramework.PageInfo,System.String)">
            <summary>
            Finds the provider that has a page attachment.
            </summary>
            <param name="page">The page.</param>
            <param name="attachmentName">The name of the attachment.</param>
            <returns>The provider that has the attachment, or <c>null</c> if the attachment could not be found.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.FilesAndAttachments.GetPageAttachmentDetails(ScrewTurn.Wiki.PluginFramework.PageInfo,System.String)">
            <summary>
            Gets the details of a page attachment.
            </summary>
            <param name="page">The page.</param>
            <param name="attachmentName">The name of the attachment.</param>
            <returns>The details of the attachment, or <c>null</c> if the attachment could not be found.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.FilesAndAttachments.RetrievePageAttachment(ScrewTurn.Wiki.PluginFramework.PageInfo,System.String,System.IO.Stream,System.Boolean)">
            <summary>
            Retrieves a Page Attachment.
            </summary>
            <param name="page">The Page Info that owns the Attachment.</param>
            <param name="attachmentName">The name of the Attachment, for example "myfile.jpg".</param>
            <param name="output">The output stream.</param>
            <param name="countHit">A value indicating whether or not to count this retrieval in the statistics.</param>
            <returns><c>true</c> if the Attachment is retrieved, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.FilesAndAttachments.NormalizeFullName(System.String)">
            <summary>
            Normalizes a full name.
            </summary>
            <param name="fullName">The full name.</param>
            <returns>The normalized full name.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.FilesAndAttachments.NormalizeFullPath(System.String)">
            <summary>
            Normalizes a full path.
            </summary>
            <param name="fullPath">The full path.</param>
            <returns>The normalized full path.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.FilesAndAttachments.UpOneLevel(System.String)">
            <summary>
            Goes up one level in a directory path.
            </summary>
            <param name="fullPath">The full path, normalized, different from "/".</param>
            <returns>The directory.</returns>
        </member>
        <member name="T:ScrewTurn.Wiki.ImportWiki.TranslatorFlex">
            <summary>
            Implements a translator tool for importing FlexWiki data.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.ImportWiki.ITranslator">
            <summary>
            Exposes an interface for building import tools.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.ImportWiki.ITranslator.Translate(System.String)">
            <summary>
            Executes the translation.
            </summary>
            <param name="input">The input content.</param>
            <returns>The WikiMarkup.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.ImportWiki.TranslatorFlex.Translate(System.String)">
            <summary>
            Executes the translation.
            </summary>
            <param name="input">The input content.</param>
            <returns>The WikiMarkup.</returns>
        </member>
        <member name="T:ScrewTurn.Wiki.ReverseFormatter">
            <summary>
            Implements reverse formatting methods (HTML->WikiMarkup).
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.ReverseFormatter.ReverseFormat(System.String)">
            <summary>
            Reverse formats HTML content into WikiMarkup.
            </summary>
            <param name="html">The input HTML.</param>
            <returns>The corresponding WikiMarkup.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.ReverseFormatter.ProcessLists(System.Text.StringBuilder)">
            <summary>
            Processes unordered and ordered lists.
            </summary>
            <param name="sb">The string builder buffer.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.ReverseFormatter.ProcessList(System.Boolean,System.String)">
            <summary>
            Processes an unordered or ordered list.
            </summary>
            <param name="ordered"><c>true</c> for an ordered list, <c>false</c> for an unordered list.</param>
            <param name="html">The input HTML.</param>
            <returns>The output WikiMarkup.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.ReverseFormatter.BuildListWikiMarkup(ScrewTurn.Wiki.HtmlList,System.String)">
            <summary>
            Builds the WikiMarkup for a list.
            </summary>
            <param name="list">The root list.</param>
            <param name="previousBullets">The previous bullets, used at upper levels.</param>
            <returns>The WikiMarkup.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.ReverseFormatter.BuildListTree(System.Boolean,System.String)">
            <summary>
            Builds a list tree.
            </summary>
            <param name="ordered"><c>true</c> for an ordered list.</param>
            <param name="html">The input HTML.</param>
            <returns>The list tree.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.ReverseFormatter.FindAnchestor(ScrewTurn.Wiki.HtmlList,ScrewTurn.Wiki.HtmlList)">
            <summary>
            Finds the anchestor of a list in a tree.
            </summary>
            <param name="root">The root of the tree.</param>
            <param name="current">The current element.</param>
            <returns>The anchestor of <b>current</b>.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.ReverseFormatter.FirstIndexOfAny(System.String,System.Int32,System.Int32@,System.String[])">
            <summary>
            Finds the index of the first string.
            </summary>
            <param name="input">The input string.</param>
            <param name="startIndex">The start index.</param>
            <param name="stringFound">The index (in <b>strings</b>) of the string found.</param>
            <param name="strings">The strings to search for.</param>
            <returns>The index of the string found in <b>input</b>.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.ReverseFormatter.FindTagsPair(System.Text.StringBuilder,System.String,System.String,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Finds the position of a matched tag pair.
            </summary>
            <param name="sb">The string builder buffer.</param>
            <param name="openTag">The open tag.</param>
            <param name="closeTag">The close tag.</param>
            <param name="startIndex">The start index.</param>
            <param name="openIndex">The open index.</param>
            <param name="closeIndex">The (matched/balanced) close index.</param>
            <returns><c>true</c> if a tag pair is found, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.ReverseFormatter.PrepareLink(System.String)">
            <summary>
            Prepares a link URL.
            </summary>
            <param name="rawUrl">The raw URL, as generated by the formatter.</param>
            <returns>The prepared link URL, suitable for formatting.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.ReverseFormatter.PrepareImageUrl(System.String)">
            <summary>
            Prepares an image URL.
            </summary>
            <param name="rawUrl">The raw URL, as generated by the formatter.</param>
            <returns>The prepared image URL, suitable for formatting.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.ReverseFormatter.GetCurrentRequestMainUrl">
            <summary>
            Gets the current request main URL, such as http://www.server.com/Wiki/.
            </summary>
            <returns>The URL.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.ReverseFormatter.GetProviderAndFileAndPage(System.String,System.String@,System.String@,System.String@)">
            <summary>
            Gets the provider and file of a link or URL.
            </summary>
            <param name="rawUrl">The raw URL, in the format ...?Provider=PROVIDER[&amp;IsPageAttachment=1&amp;Page=PAGE]&amp;File=FILE.</param>
            <param name="provider">The provider, or <c>null</c>.</param>
            <param name="page">The page (for attachments), or <c>null</c>.</param>
            <param name="file">The file.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.ReverseFormatter.UrlDecode(System.String)">
            <summary>
            Decodes a URL-encoded string, even if it was encoded multiple times.
            </summary>
            <param name="input">The input encoded string.</param>
            <returns>The decoded string.</returns>
            <remarks>It seems that in some cases URL encoding occurs multiple times,
            one on the server and one on the client.</remarks>
        </member>
        <member name="T:ScrewTurn.Wiki.Tag">
            <summary>
            Represents an open or close tag.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Tag.Type">
            <summary>
            Gets or sets the tag type.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Tag.Index">
            <summary>
            Gets or sets the tag index.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.TagType">
            <summary>
            Lists tag types.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.TagType.Open">
            <summary>
            An open tag.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.TagType.Close">
            <summary>
            A close tag.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.HtmlList">
            <summary>
            Represents a HTML list.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.HtmlList.#ctor(ScrewTurn.Wiki.HtmlListType)">
            <summary>
            Initializes a new instance of the <see cref="T:HtmlList" /> class.
            </summary>
            <param name="type">The list type.</param>
        </member>
        <member name="P:ScrewTurn.Wiki.HtmlList.Type">
            <summary>
            Gets or sets the list type.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.HtmlList.Elements">
            <summary>
            Gets or sets the list elements.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.HtmlListElement">
            <summary>
            Represents a HTML list element.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.HtmlListElement.Text">
            <summary>
            Gets or sets the text.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.HtmlListElement.SubList">
            <summary>
            Gets or sets the sub-list.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.HtmlListType">
            <summary>
            Lists HTML list types.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.HtmlListType.Ordered">
            <summary>
            An ordered list.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.HtmlListType.Unordered">
            <summary>
            An unordered list.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.ProviderUpdater">
            <summary>
            Handles the updating of providers.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.ProviderUpdater.#ctor(ScrewTurn.Wiki.PluginFramework.ISettingsStorageProviderV30,System.Collections.Generic.Dictionary{System.String,System.String},ScrewTurn.Wiki.PluginFramework.IProviderV30[][])">
            <summary>
            Initializes a new instance of the <see cref="T:ProviderUpdater" /> class.
            </summary>
            <param name="settingsProvider">The settings storage provider.</param>
            <param name="fileNamesForProviders">A provider->file dictionary.</param>
            <param name="providers">The providers to update.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.ProviderUpdater.UpdateAll">
            <summary>
            Updates all the providers.
            </summary>
            <returns>The number of updated DLLs.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.ProviderUpdater.DownloadAndUpdateDll(ScrewTurn.Wiki.PluginFramework.IProviderV30,System.String,System.String)">
            <summary>
            Downloads and updates a DLL.
            </summary>
            <param name="provider">The provider.</param>
            <param name="url">The URL of the new DLL.</param>
            <param name="filename">The file name of the DLL.</param>
        </member>
        <member name="T:ScrewTurn.Wiki.Host">
            <summary>
            Implements the <b>IHost</b> interface.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.Host.#ctor">
            <summary>
            Initializes a new instance of the <b>PluginHost</b> class.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.Host.GetSettingValue(ScrewTurn.Wiki.PluginFramework.SettingName)">
            <summary>
            Gets the values of the Wiki Settings.
            </summary>
            <param name="name">The Setting's Name.</param>
            <returns>The Setting's value.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Host.GetUsers">
            <summary>
            Gets the list of the Users.
            </summary>
            <returns>The users.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Host.FindUser(System.String)">
            <summary>
            Finds a user by username, properly handling Users Storage Providers.
            </summary>
            <param name="username">The username.</param>
            <returns>The <see cref="T:UserInfo"/>, or <c>null</c> if no users are found.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>username</b> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <b>username</b> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.Host.GetCurrentUser">
            <summary>
            Gets the authenticated user in the current session, if any.
            </summary>
            <returns>The authenticated user, or <c>null</c> if no user is authenticated.</returns>
            <remarks>If the built-it <i>admin</i> user is authenticated, the returned user 
            has <i>admin</i> as Username.</remarks>
        </member>
        <member name="M:ScrewTurn.Wiki.Host.GetUserGroups">
            <summary>
            Gets the list of the user groups.
            </summary>
            <returns>The groups.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Host.FindUserGroup(System.String)">
            <summary>
            Finds a user group by name.
            </summary>
            <param name="name">The name.</param>
            <returns>The <see cref="T:UserGroup "/>, or <c>null</c> if no groups are found.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>name</b> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <b>name</b> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.Host.CheckActionForGlobals(System.String,ScrewTurn.Wiki.PluginFramework.UserInfo)">
            <summary>
            Checks whether an action is allowed for a global resource.
            </summary>
            <param name="action">The action (see <see cref="T:ScrewTurn.Wiki.Actions.ForGlobals"/> class)</param>
            <param name="user">The user.</param>
            <returns><c>true</c> if the action is allowed, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>action</b> or <b>user</b> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <b>action</b> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.Host.CheckActionForNamespace(ScrewTurn.Wiki.PluginFramework.NamespaceInfo,System.String,ScrewTurn.Wiki.PluginFramework.UserInfo)">
            <summary>
            Checks whether an action is allowed for a namespace.
            </summary>
            <param name="nspace">The namespace (<c>null</c> for the root).</param>
            <param name="action">The action (see <see cref="T:ScrewTurn.Wiki.Actions.ForNamespaces"/> class)</param>
            <param name="user">The user.</param>
            <returns><c>true</c> if the action is allowed, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>action</b> or <b>user</b> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <b>action</b> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.Host.CheckActionForPage(ScrewTurn.Wiki.PluginFramework.PageInfo,System.String,ScrewTurn.Wiki.PluginFramework.UserInfo)">
            <summary>
            Checks whether an action is allowed for a page.
            </summary>
            <param name="page">The page.</param>
            <param name="action">The action (see <see cref="T:ScrewTurn.Wiki.Actions.ForPages"/> class)</param>
            <param name="user">The user.</param>
            <returns><c>true</c> if the action is allowed, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>page</b>, <b>action</b> or <b>user</b> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <b>action</b> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.Host.CheckActionForDirectory(ScrewTurn.Wiki.PluginFramework.StDirectoryInfo,System.String,ScrewTurn.Wiki.PluginFramework.UserInfo)">
            <summary>
            Checks whether an action is allowed for a directory.
            </summary>
            <param name="directory">The directory.</param>
            <param name="action">The action (see <see cref="T:ScrewTurn.Wiki.Actions.ForDirectories"/>).</param>
            <param name="user">The user.</param>
            <returns><c>true</c> if the action is allowed, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>directory</b>, <b>action</b> or <b>user</b> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <b>action</b> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.Host.GetTheme(ScrewTurn.Wiki.PluginFramework.NamespaceInfo)">
            <summary>
            Gets the theme in use for a namespace.
            </summary>
            <param name="nspace">The namespace (<c>null</c> for the root).</param>
            <returns>The theme.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Host.GetNamespaces">
            <summary>
            Gets the list of the namespaces.
            </summary>
            <returns>The namespaces.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Host.FindNamespace(System.String)">
            <summary>
            Finds a namespace by name.
            </summary>
            <param name="name">The name.</param>
            <returns>The <see cref="T:NamespaceInfo" />, or <c>null</c> if no namespaces are found.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Host.GetPages(ScrewTurn.Wiki.PluginFramework.NamespaceInfo)">
            <summary>
            Gets the list of the Wiki Pages in a namespace.
            </summary>
            <param name="nspace">The namespace (<c>null</c> for the root).</param>
            <returns>The pages.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Host.GetCategories(ScrewTurn.Wiki.PluginFramework.NamespaceInfo)">
            <summary>
            Gets the List of Categories in a namespace.
            </summary>
            <param name="nspace">The namespace (<c>null</c> for the root).</param>
            <returns>The categories.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Host.GetSnippets">
            <summary>
            Gets the list of Snippets.
            </summary>
            <returns>The snippets.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Host.GetNavigationPaths(ScrewTurn.Wiki.PluginFramework.NamespaceInfo)">
            <summary>
            Gets the list of Navigation Paths in a namespace.
            </summary>
            <param name="nspace">The namespace (<c>null</c> for the root).</param>
            <returns>The navigation paths.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Host.GetCategoriesPerPage(ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Gets the Categories of a Page.
            </summary>
            <param name="page">The Page.</param>
            <returns>The Categories.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>page</b> is <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.Host.FindPage(System.String)">
            <summary>
            Gets a Wiki Page.
            </summary>
            <param name="fullName">The full Name of the Page.</param>
            <returns>The Wiki Page or <c>null</c>.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>fullName</b> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <b>fullName</b> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.Host.GetPageContent(ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Gets the Content of a Page.
            </summary>
            <param name="page">The Page.</param>
            <returns>The Page Content.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>page</b> is <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.Host.GetBackups(ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Gets the Backup/Revision numbers of a Page.
            </summary>
            <param name="page">The Page.</param>
            <returns>The Backup/Revision numbers.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>page</b> is <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.Host.GetBackupContent(ScrewTurn.Wiki.PluginFramework.PageInfo,System.Int32)">
            <summary>
            Gets the Content of a Page Backup.
            </summary>
            <param name="page">The Page.</param>
            <param name="revision">The revision.</param>
            <returns>The Backup Content.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>page</b> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If <b>revision</b> is less than zero.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.Host.GetFormattedContent(ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Gets the formatted content of a Wiki Page.
            </summary>
            <param name="page">The Page.</param>
            <returns>The formatted content.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>page</b> is <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.Host.Format(System.String)">
            <summary>
            Formats a block of WikiMarkup, using the built-in formatter only.
            </summary>
            <param name="raw">The block of WikiMarkup.</param>
            <returns>The formatted content.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>raw</b> is <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.Host.PrepareContentForIndexing(ScrewTurn.Wiki.PluginFramework.PageInfo,System.String)">
            <summary>
            Prepares content for indexing in the search engine, performing bare-bones formatting and removing all WikiMarkup and XML-like characters.
            </summary>
            <param name="page">The page being indexed, if any, <c>null</c> otherwise.</param>
            <param name="content">The string to prepare.</param>
            <returns>The sanitized string.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>content</b> is <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.Host.PrepareTitleForIndexing(ScrewTurn.Wiki.PluginFramework.PageInfo,System.String)">
            <summary>
            Prepares a title for indexing in the search engine, removing all WikiMarkup and XML-like characters.
            </summary>
            <param name="page">The page being indexed, if any, <c>null</c> otherwise.</param>
            <param name="title">The title to prepare.</param>
            <returns>The sanitized string.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>title</b> is <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.Host.PerformSearch(System.String,System.Boolean,System.Boolean,ScrewTurn.Wiki.SearchEngine.SearchOptions)">
            <summary>
            Performs a search.
            </summary>
            <param name="query">The search query.</param>
            <param name="fullText">A value indicating whether to perform a full-text search.</param>
            <param name="filesAndAttachments">A value indicating whether to search the names of files and attachments.</param>
            <param name="options">The search options.</param>
            <returns>The search results.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>query</b> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <b>query</b> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.Host.ListDirectories(ScrewTurn.Wiki.PluginFramework.StDirectoryInfo)">
            <summary>
            Lists directories in a directory.
            </summary>
            <param name="directory">The directory (<c>null</c> for the root, first invocation).</param>
            <returns>The directories.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Host.ListFiles(ScrewTurn.Wiki.PluginFramework.StDirectoryInfo)">
            <summary>
            Lists files in a directory.
            </summary>
            <param name="directory">The directory (<c>null</c> for the root, first invocation).</param>
            <returns>The files.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Host.ListPageAttachments(ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Lists page attachments.
            </summary>
            <param name="page">The page.</param>
            <returns>The attachments.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>page</b> is <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.Host.SendEmail(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Sends an Email.
            </summary>
            <param name="recipient">The Recipient Email address.</param>
            <param name="sender">The Sender's Email address.</param>
            <param name="subject">The Subject.</param>
            <param name="body">The Body.</param>
            <param name="html">True if the message is HTML.</param>
            <returns>True if the message has been sent successfully.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>recipient</b>, <b>sender</b>, <b>subject</b> or <b>body</b> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <b>recipient</b>, <b>sender</b>, <b>subject</b> or <b>body</b> are empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.Host.LogEntry(System.String,ScrewTurn.Wiki.PluginFramework.LogEntryType,System.String,System.Object)">
            <summary>
            Logs a new message.
            </summary>
            <param name="message">The Message.</param>
            <param name="entryType">The Entry Type.</param>
            <param name="user">The user, or <c>null</c>. If <c>null</c>, the system will log "PluginName+System".</param>
            <param name="caller">The Component that calls the method. The caller cannot be null.</param>
            <exception cref="T:System.ArgumentNullException">If <b>message</b> or <b>caller</b> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <b>message is empty.</b></exception>
        </member>
        <member name="M:ScrewTurn.Wiki.Host.ChangeCurrentUserLanguage(System.String)">
            <summary>
            Changes the language of the current user.
            </summary>
            <param name="language">The language code.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.Host.AlignDateTimeWithPreferences(System.DateTime)">
            <summary>
            Aligns a Date and Time object to the User's Time Zone preferences.
            </summary>
            <param name="dt">The Date/Time to align.</param>
            <returns>The aligned Date/Time.</returns>
            <remarks>The method takes care of daylight saving settings.</remarks>
        </member>
        <member name="M:ScrewTurn.Wiki.Host.ClearCache(ScrewTurn.Wiki.PluginFramework.CacheData)">
            <summary>
            Clears the cache.
            </summary>
            <param name="data">The part of the cache to clear.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.Host.AddToolbarItem(ScrewTurn.Wiki.PluginFramework.ToolbarItem,System.String,System.String)">
            <summary>
            Adds an item in the Editing Toolbar.
            </summary>
            <param name="item">The item to add.</param>
            <param name="text">The text of the item.</param>
            <param name="value">The value of the item.</param>
            <exception cref="T:System.ArgumentNullException">If <b>text</b> or <b>value</b> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <b>text</b> or <b>value</b> are empty, or if they contain single or double quotes, 
            or if <b>value</b> does not contain a pipe when <b>item</b> is <b>SpecialTagWrap</b>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.Host.GetDefaultProvider(System.Type)">
            <summary>
            Gets the default provider of the specified type.
            </summary>
            <param name="providerType">The type of the provider (
            <see cref="T:IPagesStorageProviderV30" />, 
            <see cref="T:IUsersStorageProviderV30" />, 
            <see cref="T:IFilesStorageProviderV30" />, 
            <see cref="T:ICacheStorageProviderV30" />).</param>
            <returns>The Full type name of the default provider of the specified type or <c>null</c>.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Host.GetPagesStorageProviders(System.Boolean)">
            <summary>
            Gets the pages storage providers, either enabled or disabled.
            </summary>
            <param name="enabled"><c>true</c> to get enabled providers, <c>false</c> to get disabled providers.</param>
            <returns>The providers.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Host.GetUsersStorageProviders(System.Boolean)">
            <summary>
            Gets the users storage providers, either enabled or disabled.
            </summary>
            <param name="enabled"><c>true</c> to get enabled providers, <c>false</c> to get disabled providers.</param>
            <returns>The providers.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Host.GetFilesStorageProviders(System.Boolean)">
            <summary>
            Gets the files storage providers, either enabled or disabled.
            </summary>
            <param name="enabled"><c>true</c> to get enabled providers, <c>false</c> to get disabled providers.</param>
            <returns>The providers.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Host.GetCacheProviders(System.Boolean)">
            <summary>
            Gets the cache providers, either enabled or disabled.
            </summary>
            <param name="enabled"><c>true</c> to get enabled providers, <c>false</c> to get disabled providers.</param>
            <returns>The providers.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Host.GetFormatterProviders(System.Boolean)">
            <summary>
            Gets the formatter providers, either enabled or disabled.
            </summary>
            <param name="enabled"><c>true</c> to get enabled providers, <c>false</c> to get disabled providers.</param>
            <returns>The providers.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Host.GetSettingsStorageProvider">
            <summary>
            Gets the current settings storage provider.
            </summary>
            <returns>The settings storage provider.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Host.GetProviderConfiguration(System.String)">
            <summary>
            Gets the configuration of a provider.
            </summary>
            <param name="providerTypeName">The type name of the provider, such as 'Vendor.Namespace.Provider'.</param>
            <returns>The configuration (can be empty or <c>null</c>).</returns>
            <exception cref="T:System.ArgumentNullException">If <b>providerTypeName</b> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <b>providerTypeName</b> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.Host.SetProviderConfiguration(ScrewTurn.Wiki.PluginFramework.IProviderV30,System.String)">
            <summary>
            Sets the configuration of a provider.
            </summary>
            <param name="provider">The provider of which to set the configuration.</param>
            <param name="configuration">The configuration to set.</param>
            <returns><c>true</c> if the configuration is set, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>provider</b> is <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.Host.UpgradePageStatusToAcl(ScrewTurn.Wiki.PluginFramework.PageInfo,System.Char)">
            <summary>
            Upgrades the old Page Status to use the new ACL facilities.
            </summary>
            <param name="page">The page of which to upgrade the status.</param>
            <param name="oldStatus">The old status ('L' = Locked, 'P' = Public).</param>
            <returns><c>true</c> if the operation succeeded, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>page</b> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">If <b>oldStatus</b> is invalid.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.Host.UpgradeSecurityFlagsToGroupsAcl(ScrewTurn.Wiki.PluginFramework.UserGroup,ScrewTurn.Wiki.PluginFramework.UserGroup)">
            <summary>
            Upgrades the old security flags to use the new ACL facilities and user groups support.
            </summary>
            <param name="administrators">The administrators group.</param>
            <param name="users">The users group.</param>
            <returns><c>true</c> if the operation succeeded, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>administrators</b> or <b>users</b> are <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.Host.OnUserAccountActivity(ScrewTurn.Wiki.PluginFramework.UserInfo,ScrewTurn.Wiki.PluginFramework.UserAccountActivity)">
            <summary>
            Fires the UserAccountActivity event.
            </summary>
            <param name="user">The user the activity refers to.</param>
            <param name="activity">The activity.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.Host.OnUserGroupActivity(ScrewTurn.Wiki.PluginFramework.UserGroup,ScrewTurn.Wiki.PluginFramework.UserGroupActivity)">
            <summary>
            Fires the UserGroupActivity event.
            </summary>
            <param name="group">The group the activity refers to.</param>
            <param name="activity">The activity.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.Host.OnNamespaceActivity(ScrewTurn.Wiki.PluginFramework.NamespaceInfo,System.String,ScrewTurn.Wiki.PluginFramework.NamespaceActivity)">
            <summary>
            Fires the NamespaceActivity event.
            </summary>
            <param name="nspace">The namespace the activity refers to.</param>
            <param name="nspaceOldName">The old name of the renamed namespace, or <c>null</c>.</param>
            <param name="activity">The activity.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.Host.OnPageActivity(ScrewTurn.Wiki.PluginFramework.PageInfo,System.String,System.String,ScrewTurn.Wiki.PluginFramework.PageActivity)">
            <summary>
            Fires the PageActivity event.
            </summary>
            <param name="page">The page the activity refers to.</param>
            <param name="pageOldName">The old name of the renamed page, or <c>null</c>.</param>
            <param name="author">The author of the activity.</param>
            <param name="activity">The activity.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.Host.OnFileActivity(System.String,System.String,System.String,ScrewTurn.Wiki.PluginFramework.FileActivity)">
            <summary>
            Fires the FileActivity event.
            </summary>
            <param name="provider">The provider that handles the file.</param>
            <param name="file">The name of the file that changed.</param>
            <param name="oldFileName">The old name of the renamed file, if any.</param>
            <param name="activity">The activity.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.Host.OnAttachmentActivity(System.String,System.String,System.String,System.String,ScrewTurn.Wiki.PluginFramework.FileActivity)">
            <summary>
            Fires the FileActivity event.
            </summary>
            <param name="provider">The provider that handles the attachment.</param>
            <param name="attachment">The old name of the renamed attachment, if any.</param>
            <param name="page">The page that owns the attachment.</param>
            <param name="oldAttachmentName">The old name of the renamed attachment, if any.</param>
            <param name="activity">The activity.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.Host.OnDirectoryActivity(System.String,System.String,System.String,ScrewTurn.Wiki.PluginFramework.FileActivity)">
            <summary>
            Fires the FileActivity event.
            </summary>
            <param name="provider">The provider that handles the directory.</param>
            <param name="directory">The directory that changed.</param>
            <param name="oldDirectoryName">The old name of the renamed directory, if any.</param>
            <param name="activity">The activity.</param>
        </member>
        <member name="P:ScrewTurn.Wiki.Host.Instance">
            <summary>
            Gets or sets the singleton instance of the <b>Host</b> object.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Host.CustomSpecialTags">
            <summary>
            Gets the Special Tags added by providers.
            </summary>
        </member>
        <member name="E:ScrewTurn.Wiki.Host.UserAccountActivity">
            <summary>
            Event fired whenever an activity is performed on a User Account.
            </summary>
        </member>
        <member name="E:ScrewTurn.Wiki.Host.UserGroupActivity">
            <summary>
            Event fired whenever an activity is performed on a user group.
            </summary>
        </member>
        <member name="E:ScrewTurn.Wiki.Host.NamespaceActivity">
            <summary>
            Event fired whenever an activity is performed on a namespace.
            </summary>
        </member>
        <member name="E:ScrewTurn.Wiki.Host.PageActivity">
            <summary>
            Even fired whenever an activity is performed on a Page.
            </summary>
        </member>
        <member name="E:ScrewTurn.Wiki.Host.FileActivity">
            <summary>
            Event fired whenever an activity is performed on a file, directory or attachment.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.CustomToolbarItem">
            <summary>
            Represents a custom toolbar item.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.CustomToolbarItem.#ctor(ScrewTurn.Wiki.PluginFramework.ToolbarItem,System.String,System.String)">
            <summary>
            Initializes a new instance of the <b>ToolbarItem</b> class.
            </summary>
            <param name="item">The item.</param>
            <param name="text">The text.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:ScrewTurn.Wiki.CustomToolbarItem.Item">
            <summary>
            Gets or sets the item.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.CustomToolbarItem.Text">
            <summary>
            Gets the text.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.CustomToolbarItem.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.Formatter">
            <summary>
            Performs all the text formatting and parsing operations.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Formatter.EditSectionPlaceHolder">
            <summary>
            The section editing button placeholder.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.Formatter.DetectNamespaceInfo(ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Detects the current namespace.
            </summary>
            <param name="currentPage">The current page, if any.</param>
            <returns>The current namespace (<c>null</c> for the root).</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Formatter.Format(System.String,System.Boolean,ScrewTurn.Wiki.PluginFramework.FormattingContext,ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Formats WikiMarkup, converting it into XHTML.
            </summary>
            <param name="raw">The raw WikiMarkup text.</param>
            <param name="forIndexing">A value indicating whether the formatting is being done for content indexing.</param>
            <param name="context">The formatting context.</param>
            <param name="current">The current Page (can be null).</param>
            <returns>The formatted text.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Formatter.Format(System.String,System.Boolean,ScrewTurn.Wiki.PluginFramework.FormattingContext,ScrewTurn.Wiki.PluginFramework.PageInfo,System.String[]@)">
            <summary>
            Formats WikiMarkup, converting it into XHTML.
            </summary>
            <param name="raw">The raw WikiMarkup text.</param>
            <param name="forIndexing">A value indicating whether the formatting is being done for content indexing.</param>
            <param name="context">The formatting context.</param>
            <param name="current">The current Page (can be null).</param>
            <param name="linkedPages">The linked pages, both existent and inexistent.</param>
            <returns>The formatted text.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Formatter.Format(System.String,System.Boolean,ScrewTurn.Wiki.PluginFramework.FormattingContext,ScrewTurn.Wiki.PluginFramework.PageInfo,System.String[]@,System.Boolean)">
            <summary>
            Formats WikiMarkup, converting it into XHTML.
            </summary>
            <param name="raw">The raw WikiMarkup text.</param>
            <param name="forIndexing">A value indicating whether the formatting is being done for content indexing.</param>
            <param name="context">The formatting context.</param>
            <param name="current">The current Page (can be null).</param>
            <param name="linkedPages">The linked pages, both existent and inexistent.</param>
            <param name="bareBones">A value indicating whether to format in bare-bones mode (for WYSIWYG editor).</param>
            <returns>The formatted text.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Formatter.EncodeFilename(System.Text.StringBuilder,System.Int32)">
            <summary>
            Encodes a filename used in combination with {UP} tags.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="startIndex">The index where to start working.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.Formatter.BuildHeaderAnchor(System.Text.StringBuilder,System.String)">
            <summary>
            Builds the anchor markup for a header.
            </summary>
            <param name="buffer">The string builder.</param>
            <param name="id">The anchor ID.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.Formatter.BuildRecentChanges(ScrewTurn.Wiki.PluginFramework.NamespaceInfo,System.Boolean,ScrewTurn.Wiki.PluginFramework.FormattingContext,ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Builds the recent changes list.
            </summary>
            <param name="allNamespaces">A value indicating whether to build a list for all namespace or for just the current one.</param>
            <param name="currentNamespace">The current namespace.</param>
            <param name="context">The formatting context.</param>
            <param name="currentPage">The current page, or <c>null</c>.</param>
            <returns>The recent changes list HTML markup.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Formatter.BuildRecentChangesTable(System.Collections.Generic.IList{ScrewTurn.Wiki.PluginFramework.RecentChange},ScrewTurn.Wiki.PluginFramework.FormattingContext,ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Builds a table containing recent changes.
            </summary>
            <param name="allChanges">The changes.</param>
            <param name="context">The formatting context.</param>
            <param name="currentPage">The current page, or <c>null</c>.</param>
            <returns>The table HTML.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Formatter.PrintRecentChange(ScrewTurn.Wiki.PluginFramework.RecentChange,ScrewTurn.Wiki.PluginFramework.FormattingContext,ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Prints a recent change.
            </summary>
            <param name="change">The change.</param>
            <param name="context">The formatting context.</param>
            <param name="currentPage">The current page, or <c>null</c>.</param>
            <returns>The proper text to display.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Formatter.PrintPageLink(ScrewTurn.Wiki.PluginFramework.RecentChange,ScrewTurn.Wiki.PluginFramework.FormattingContext,ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Builds a link to a page, properly handling inexistent pages.
            </summary>
            <param name="change">The change.</param>
            <param name="context">The formatting context.</param>
            <param name="currentPage">The current page, or <c>null</c>.</param>
            <returns>The link HTML markup.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Formatter.PrintMessageLink(ScrewTurn.Wiki.PluginFramework.RecentChange,ScrewTurn.Wiki.PluginFramework.FormattingContext,ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Builds a link to a page discussion.
            </summary>
            <param name="change">The change.</param>
            <param name="context">The formatting context.</param>
            <param name="currentPage">The current page, or <c>null</c>.</param>
            <returns>The link HTML markup.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Formatter.BuildOrphanedPagesList(ScrewTurn.Wiki.PluginFramework.NamespaceInfo,ScrewTurn.Wiki.PluginFramework.FormattingContext,ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Builds the orhpaned pages list (valid only in non-indexing mode).
            </summary>
            <param name="nspace">The namespace (<c>null</c> for the root).</param>
            <param name="context">The formatting context.</param>
            <param name="current">The current page, if any.</param>
            <returns>The list.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Formatter.BuildWantedPagesList(ScrewTurn.Wiki.PluginFramework.NamespaceInfo)">
            <summary>
            Builds the wanted pages list.
            </summary>
            <param name="nspace">The namespace (<c>null</c> for the root).</param>
            <returns>The list.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Formatter.BuildIncomingLinksList(ScrewTurn.Wiki.PluginFramework.PageInfo,ScrewTurn.Wiki.PluginFramework.FormattingContext,ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Builds the incoming links list for a page (valid only in Phase3).
            </summary>
            <param name="page">The page.</param>
            <param name="context">The formatting context.</param>
            <param name="current">The current page, if any.</param>
            <returns>The list.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Formatter.BuildOutgoingLinksList(ScrewTurn.Wiki.PluginFramework.PageInfo,ScrewTurn.Wiki.PluginFramework.FormattingContext,ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Builds the outgoing links list for a page (valid only in Phase3).
            </summary>
            <param name="page">The page.</param>
            <param name="context">The formatting context.</param>
            <param name="current">The current page, if any.</param>
            <returns>The list.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Formatter.BuildNamespaceLink(System.String)">
            <summary>
            Builds the link to a namespace.
            </summary>
            <param name="nspace">The namespace (<c>null</c> for the root).</param>
            <returns>The link.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Formatter.BuildNamespaceList">
            <summary>
            Builds the namespace list.
            </summary>
            <returns>The namespace list.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Formatter.ProcessLineBreaks(System.Text.StringBuilder,System.Boolean)">
            <summary>
            Processes line breaks.
            </summary>
            <param name="sb">The <see cref="T:StringBuilder" /> containing the text to process.</param>
            <param name="bareBones">A value indicating whether the formatting is being done in bare-bones mode.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.Formatter.AreSingleLineBreaksToBeProcessed">
            <summary>
            Gets a value indicating whether or not to process single line breaks.
            </summary>
            <returns><c>true</c> if SLB are to be processed, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Formatter.ReplaceToc(System.String,System.String)">
            <summary>
            Replaces the {TOC} markup in a string.
            </summary>
            <param name="input">The input string.</param>
            <param name="cachedToc">The TOC replacement.</param>
            <returns>The final string.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Formatter.ExpandToBalanceBrackets(System.Text.StringBuilder,System.Int32,System.String)">
            <summary>
            Expands a regex selection to match the number of open curly brackets.
            </summary>
            <param name="sb">The buffer.</param>
            <param name="index">The match start index.</param>
            <param name="value">The match value.</param>
            <returns>The balanced string, or <c>null</c> if the brackets could not be balanced.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Formatter.FormatSnippet(System.String,System.String)">
            <summary>
            Formats a snippet.
            </summary>
            <param name="capturedMarkup">The captured markup.</param>
            <param name="cachedToc">The TOC content (trick to allow {TOC} to be inserted in snippets).</param>
            <returns>The formatted result.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Formatter.FormatClassicSnippet(System.String)">
            <summary>
            Format classic number-parameterized snippets.
            </summary>
            <param name="capturedMarkup">The captured markup to process.</param>
            <returns>The formatted result.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Formatter.CustomSplit(System.String)">
            <summary>
            Splits a string at pipe characters, taking into account square brackets for links and images.
            </summary>
            <param name="data">The input data.</param>
            <returns>The resuling splitted strings.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Formatter.PrepareSnippet(System.String[],System.String)">
            <summary>
            Prepares the content of a snippet, properly managing parameters.
            </summary>
            <param name="parameters">The snippet parameters.</param>
            <param name="snippet">The snippet original text.</param>
            <returns>The prepared snippet text.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Formatter.EscapeWikiMarkup(System.String)">
            <summary>
            Escapes all the characters used by the WikiMarkup.
            </summary>
            <param name="content">The Content.</param>
            <returns>The escaped Content.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Formatter.StripWikiMarkup(System.String)">
            <summary>
            Removes all the characters used by the WikiMarkup.
            </summary>
            <param name="content">The Content.</param>
            <returns>The stripped Content.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Formatter.StripHtml(System.String)">
            <summary>
            Removes all HTML markup from a string.
            </summary>
            <param name="content">The string.</param>
            <returns>The result.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Formatter.BuildLink(System.String,System.String,System.Boolean,System.String,System.Boolean,System.Boolean,ScrewTurn.Wiki.PluginFramework.FormattingContext,ScrewTurn.Wiki.PluginFramework.PageInfo,System.Collections.Generic.List{System.String})">
            <summary>
            Builds a Link.
            </summary>
            <param name="targetUrl">The (raw) HREF.</param>
            <param name="title">The name/title.</param>
            <param name="isImage">True if the link contains an Image as "visible content".</param>
            <param name="imageTitle">The title of the image.</param>
            <param name="forIndexing">A value indicating whether the formatting is being done for content indexing.</param>
            <param name="bareBones">A value indicating whether the formatting is being done in bare-bones mode.</param>
            <param name="context">The formatting context.</param>
            <param name="currentPage">The current page, or <c>null</c>.</param>
            <param name="linkedPages">The linked pages list (both existent and inexistent).</param>
            <returns>The formatted Link.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Formatter.DetectHeaders(System.String)">
            <summary>
            Detects all the Headers in a block of text (H1, H2, H3, H4).
            </summary>
            <param name="text">The text.</param>
            <returns>The List of Header objects, in the same order as they are in the text.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Formatter.BuildEditSectionLink(System.Int32,System.String)">
            <summary>
            Builds the "Edit" links for page sections.
            </summary>
            <param name="id">The section ID.</param>
            <param name="page">The page name.</param>
            <returns>The link.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Formatter.GenerateList(System.String[],System.Int32,System.Int32,System.Int32@)">
            <summary>
            Generates list HTML markup.
            </summary>
            <param name="lines">The lines in the list WikiMarkup.</param>
            <param name="line">The current line.</param>
            <param name="level">The current level.</param>
            <param name="currLine">The current line.</param>
            <returns>The correct HTML markup.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Formatter.CountBullets(System.String)">
            <summary>
            Counts the bullets in a list line.
            </summary>
            <param name="line">The line.</param>
            <returns>The number of bullets.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Formatter.ExtractBullets(System.String)">
            <summary>
            Extracts the bullets from a list line.
            </summary>
            <param name="value">The line.</param>
            <returns>The bullets.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Formatter.BuildToc(System.Collections.Generic.List{ScrewTurn.Wiki.HPosition})">
            <summary>
            Builds the TOC of a document.
            </summary>
            <param name="hPos">The positions of headers.</param>
            <returns>The TOC HTML markup.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Formatter.BuildHAnchor(System.String)">
            <summary>
            Builds a valid anchor name from a string.
            </summary>
            <param name="h">The string, usually a header (Hx).</param>
            <returns>The anchor ID.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Formatter.BuildHAnchor(System.String,System.String)">
            <summary>
            Builds a valid and unique anchor name from a string.
            </summary>
            <param name="h">The string, usually a header (Hx).</param>
            <param name="uid">The unique ID.</param>
            <returns>The anchor ID.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Formatter.EscapeUrl(System.String)">
            <summary>
            Escapes ampersands in a URL.
            </summary>
            <param name="url">The URL.</param>
            <returns>The escaped URL.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Formatter.BuildTable(System.String)">
            <summary>
            Builds a HTML table from WikiMarkup.
            </summary>
            <param name="table">The WikiMarkup.</param>
            <returns>The HTML.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Formatter.BuildIndent(System.String)">
            <summary>
            Builds an indented text block.
            </summary>
            <param name="indent">The input text.</param>
            <returns>The result.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Formatter.BuildCloud(ScrewTurn.Wiki.PluginFramework.NamespaceInfo)">
            <summary>
            Builds the tag cloud.
            </summary>
            <param name="currentNamespace">The current namespace (<c>null</c> for the root).</param>
            <returns>The tag cloud.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Formatter.ComputeSize(System.Single)">
            <summary>
            Computes the sixe of a category label in the category cloud.
            </summary>
            <param name="percentage">The occurrence percentage of the category.</param>
            <returns>The computes size.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Formatter.ComputeNoWiki(System.String,System.Collections.Generic.List{System.Int32}@,System.Collections.Generic.List{System.Int32}@)">
            <summary>
            Computes the positions of all NOWIKI tags.
            </summary>
            <param name="text">The input text.</param>
            <param name="noWikiBegin">The output list of begin indexes of NOWIKI tags.</param>
            <param name="noWikiEnd">The output list of end indexes of NOWIKI tags.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.Formatter.IsNoWikied(System.Int32,System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{System.Int32},System.Int32@)">
            <summary>
            Determines whether a character is enclosed in a NOWIKI tag.
            </summary>
            <param name="index">The index of the character.</param>
            <param name="noWikiBegin">The list of begin indexes of NOWIKI tags.</param>
            <param name="noWikiEnd">The list of end indexes of NOWIKI tags.</param>
            <param name="end">The end index of the NOWIKI tag that encloses the specified character, or zero.</param>
            <returns><c>true</c> if the specified character is enclosed in a NOWIKI tag, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Formatter.FormatPhase3(System.String,ScrewTurn.Wiki.PluginFramework.FormattingContext,ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Performs the internal Phase 3 of the Formatting pipeline.
            </summary>
            <param name="raw">The raw data.</param>
            <param name="context">The formatting context.</param>
            <param name="current">The current PageInfo, if any.</param>
            <returns>The formatted content.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Formatter.BuildCurrentNamespaceDropDown">
            <summary>
            Builds the current namespace drop-down list.
            </summary>
            <returns>The drop-down list HTML markup.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Formatter.GetProfileLink(System.String)">
            <summary>
            Gets the link to the profile page.
            </summary>
            <param name="username">The username.</param>
            <returns>The link.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Formatter.GetLanguageLink(System.String)">
            <summary>
            Gets the link to the language page.
            </summary>
            <param name="username">The username.</param>
            <returns>The link.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Formatter.GetLoginLink">
            <summary>
            Gets the login link.
            </summary>
            <returns>The login link.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Formatter.GetLogoutLink">
            <summary>
            Gets the logout link.
            </summary>
            <returns>The logout link.</returns>
        </member>
        <member name="T:ScrewTurn.Wiki.HPosition">
            <summary>
            Represents a Header.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.HPosition.#ctor(System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <b>HPosition</b> class.
            </summary>
            <param name="index">The Index.</param>
            <param name="text">The Text.</param>
            <param name="level">The Header level.</param>
            <param name="id">The Unique ID of the Header (0-based counter).</param>
        </member>
        <member name="P:ScrewTurn.Wiki.HPosition.Index">
            <summary>
            Gets or sets the Index.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.HPosition.Text">
            <summary>
            Gets or sets the Text.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.HPosition.Level">
            <summary>
            Gets or sets the Level.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.HPosition.ID">
            <summary>
            Gets or sets the ID (0-based counter).
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.HPositionComparer">
            <summary>
            Compares HPosition objects.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.HPositionComparer.Compare(ScrewTurn.Wiki.HPosition,ScrewTurn.Wiki.HPosition)">
            <summary>
            Performs the comparison.
            </summary>
            <param name="x">The first object.</param>
            <param name="y">The second object.</param>
            <returns>The comparison result.</returns>
        </member>
        <member name="T:ScrewTurn.Wiki.FileDocument">
            <summary>
            Represents a file document.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.FileDocument.StandardTypeTag">
            <summary>
            The type tag for a <see cref="T:FileDocument" />.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.FileDocument.#ctor(System.String,System.String,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:FileDocument" /> class.
            </summary>
            <param name="fullName">The file full name.</param>
            <param name="provider">The file provider.</param>
            <param name="dateTime">The modification date/time.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.FileDocument.#ctor(ScrewTurn.Wiki.SearchEngine.DumpedDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:FileDocument" /> class.
            </summary>
            <param name="doc">The dumped document.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.FileDocument.Tokenize(System.String)">
            <summary>
            Performs the tokenization of the document content.
            </summary>
            <param name="content">The content to tokenize.</param>
            <returns>The extracted words and their positions (always an empty array).</returns>
        </member>
        <member name="P:ScrewTurn.Wiki.FileDocument.ID">
            <summary>
            Gets or sets the globally unique ID of the document.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.FileDocument.Name">
            <summary>
            Gets the globally-unique name of the document.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.FileDocument.Title">
            <summary>
            Gets the title of the document, if any.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.FileDocument.TypeTag">
            <summary>
            Gets the tag for the document type.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.FileDocument.DateTime">
            <summary>
            Gets the document date/time.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.FileDocument.Provider">
            <summary>
            Gets the provider.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.CacheProvider">
            <summary>
            Implements a local cache provider. All instance members are thread-safe.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.CacheProvider.Init(ScrewTurn.Wiki.PluginFramework.IHostV30,System.String)">
            <summary>
            Initializes the Storage Provider.
            </summary>
            <param name="host">The Host of the Component.</param>
            <param name="config">The Configuration data, if any.</param>
            <exception cref="T:System.ArgumentNullException">If <b>host</b> or <b>config</b> are <c>null</c>.</exception>
            <exception cref="T:ScrewTurn.Wiki.PluginFramework.InvalidConfigurationException">If <b>config</b> is not valid or is incorrect.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.CacheProvider.Shutdown">
            <summary>
            Method invoked on shutdown.
            </summary>
            <remarks>This method might not be invoked in some cases.</remarks>
        </member>
        <member name="M:ScrewTurn.Wiki.CacheProvider.GetPseudoCacheValue(System.String)">
            <summary>
            Gets the value of a Pseudo-cache item, previously stored in the cache.
            </summary>
            <param name="name">The name of the item being requested.</param>
            <returns>The value of the item, or <c>null</c> if the item is not found.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>name</b> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <b>name</b> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.CacheProvider.SetPseudoCacheValue(System.String,System.String)">
            <summary>
            Sets the value of a Pseudo-cache item.
            </summary>
            <param name="name">The name of the item being stored.</param>
            <param name="value">The value of the item. If the value is <c>null</c>, then the item should be removed from the cache.</param>
            <exception cref="T:System.ArgumentNullException">If <b>name</b> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <b>name</b> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.CacheProvider.GetPageContent(ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Gets the Content of a Page, previously stored in cache.
            </summary>
            <param name="pageInfo">The Page Info object related to the Content being requested.</param>
            <returns>The Page Content object, or <c>null</c> if the item is not found.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>pageInfo</b> is <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.CacheProvider.SetPageContent(ScrewTurn.Wiki.PluginFramework.PageInfo,ScrewTurn.Wiki.PluginFramework.PageContent)">
            <summary>
            Sets the Content of a Page.
            </summary>
            <param name="pageInfo">The Page Info object related to the Content being stored.</param>
            <param name="content">The Content of the Page.</param>
            <exception cref="T:System.ArgumentNullException">If <b>pageInfo</b> or <b>content</b> are <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.CacheProvider.GetFormattedPageContent(ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Gets the partially-formatted content (text) of a Page, previously stored in the cache.
            </summary>
            <param name="pageInfo">The Page Info object related to the content being requested.</param>
            <returns>The partially-formatted content, or <c>null</c> if the item is not found.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>pageInfo</b> is <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.CacheProvider.SetFormattedPageContent(ScrewTurn.Wiki.PluginFramework.PageInfo,System.String)">
            <summary>
            Sets the partially-preformatted content (text) of a Page.
            </summary>
            <param name="pageInfo">The Page Info object related to the content being stored.</param>
            <param name="content">The partially-preformatted content.</param>
            <exception cref="T:System.ArgumentNullException">If <b>pageInfo</b> or <b>content</b> are <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.CacheProvider.RemovePage(ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Removes a Page from the cache.
            </summary>
            <param name="pageInfo">The Page Info object related to the Page that has to be removed.</param>
            <exception cref="T:System.ArgumentNullException">If <b>pageInfo</b> is <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.CacheProvider.ClearPageContentCache">
            <summary>
            Clears the Page Content cache.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.CacheProvider.ClearPseudoCache">
            <summary>
            Clears the Pseudo-Cache.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.CacheProvider.CutCache(System.Int32)">
            <summary>
            Reduces the size of the Page Content cache, removing the least-recently used items.
            </summary>
            <param name="cutSize">The number of Pages to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">If <b>cutSize</b> is less than or equal to zero.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.CacheProvider.RenewEditingSession(System.String,System.String)">
            <summary>
            Adds or updates an editing session.
            </summary>
            <param name="page">The edited Page.</param>
            <param name="user">The User who is editing the Page.</param>
            <exception cref="T:System.ArgumentNullException">If <b>page</b> or <b>user</b> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <b>page</b> or <b>user</b> are empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.CacheProvider.CancelEditingSession(System.String,System.String)">
            <summary>
            Cancels an editing session.
            </summary>
            <param name="page">The Page.</param>
            <param name="user">The User.</param>
            <exception cref="T:System.ArgumentNullException">If <b>page</b> or <b>user</b> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <b>page</b> or <b>user</b> are empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.CacheProvider.IsPageBeingEdited(System.String,System.String)">
            <summary>
            Finds whether a Page is being edited by a different user.
            </summary>
            <param name="page">The Page.</param>
            <param name="currentUser">The User who is requesting the status of the Page.</param>
            <returns>True if the Page is being edited by another User.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>page</b> or <b>currentUser</b> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <b>page</b> or <b>currentUser</b> are empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.CacheProvider.WhosEditing(System.String)">
            <summary>
            Gets the username of the user who's editing a page.
            </summary>
            <param name="page">The page.</param>
            <returns>The username.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>page</b> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <b>page</b> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.CacheProvider.AddRedirection(System.String,System.String)">
            <summary>
            Adds the redirection information for a page (overwrites the previous value, if any).
            </summary>
            <param name="source">The source page.</param>
            <param name="destination">The destination page.</param>
            <exception cref="T:System.ArgumentNullException">If <b>source</b> or <b>destination</b> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <b>source</b> or <b>destination</b> are empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.CacheProvider.GetRedirectionDestination(System.String)">
            <summary>
            Gets the destination of a redirection.
            </summary>
            <param name="source">The source page.</param>
            <returns>The destination page, if any, <c>null</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>source</b> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <b>source</b> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.CacheProvider.RemovePageFromRedirections(System.String)">
            <summary>
            Removes a pge from both sources and destinations.
            </summary>
            <param name="name">The name of the page.</param>
            <exception cref="T:System.ArgumentNullException">If <b>name</b> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <b>name</b> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.CacheProvider.ClearRedirections">
            <summary>
            Clears all the redirections information.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.CacheProvider.OnlineUsers">
            <summary>
            Gets or sets the number of users online.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.CacheProvider.Information">
            <summary>
            Gets the Information about the Provider.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.CacheProvider.ConfigHelpHtml">
            <summary>
            Gets a brief summary of the configuration string format, in HTML. Returns <c>null</c> if no configuration is needed.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.CacheProvider.PageCacheUsage">
            <summary>
            Gets the number of Pages whose content is currently stored in the cache.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.CacheProvider.FormatterPageCacheUsage">
            <summary>
            Gets the numer of Pages whose formatted content is currently stored in the cache.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.EditingSession">
            <summary>
            Represents an Editing Session.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.EditingSession.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <b>EditingSession</b> class.
            </summary>
            <param name="page">The edited Page.</param>
            <param name="user">The User who is editing the Page.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.EditingSession.Renew">
            <summary>
            Sets the Last Contact to now.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.EditingSession.Page">
            <summary>
            Gets the edited Page.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.EditingSession.User">
            <summary>
            Gets the User.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.EditingSession.LastContact">
            <summary>
            Gets the Last Contact Date/Time.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.Tools">
            <summary>
            Contains useful Tools.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.Tools.GetIncludes(System.String)">
            <summary>
            Gets all the included files for the HTML Head, such as CSS, JavaScript and Icon pluginAssemblies, for a namespace.
            </summary>
            <param name="nspace">The namespace (<c>null</c> for the root).</param>
            <returns>The includes.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Tools.GetJavaScriptIncludes">
            <summary>
            Gets all the JavaScript files to include.
            </summary>
            <returns>The JS files.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Tools.BytesToString(System.Int64)">
            <summary>
            Converts a byte number into a string, formatted using KB, MB or GB.
            </summary>
            <param name="bytes">The # of bytes.</param>
            <returns>The formatted string.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Tools.DiskUsage(System.String)">
            <summary>
            Computes the Disk Space Usage of a directory.
            </summary>
            <param name="dir">The directory.</param>
            <returns>The used Disk Space, in bytes.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Tools.GetVersionString(System.Int32)">
            <summary>
            Generates the standard 5-digit Page Version string.
            </summary>
            <param name="version">The Page version.</param>
            <returns>The 5-digit Version string.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Tools.IsRightToLeftCulture">
            <summary>
            Get the direction of the current culture.
            </summary>
            <returns><c>true</c> if the current culture is RTL, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Tools.ComputeSecurityHash(System.String,System.String,System.DateTime)">
            <summary>
            Computes the Hash of a Username, mixing it with other data, in order to avoid illegal Account activations.
            </summary>
            <param name="username">The Username.</param>
            <param name="email">The email.</param>
            <param name="dateTime">The date/time.</param>
            <returns>The secured Hash of the Username.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Tools.EscapeString(System.String)">
            <summary>
            Escapes bad characters in a string (pipes and \n).
            </summary>
            <param name="input">The input string.</param>
            <returns>The escaped string.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Tools.UnescapeString(System.String)">
            <summary>
            Unescapes bad characters in a string (pipes and \n).
            </summary>
            <param name="input">The input string.</param>
            <returns>The unescaped string.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Tools.GenerateRandomPassword">
            <summary>
            Generates a random 10-char Password.
            </summary>
            <returns>The Password.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Tools.TimeSpanToString(System.TimeSpan)">
            <summary>
            Converts a Time Span to string.
            </summary>
            <param name="span">The Time Span.</param>
            <returns>The string.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Tools.UrlEncode(System.String)">
            <summary>
            Executes URL-encoding, avoiding to use '+' for spaces.
            </summary>
            <param name="input">The input string.</param>
            <returns>The encoded string.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Tools.UrlDecode(System.String)">
            <summary>
            Executes URL-decoding, replacing spaces as processed by UrlEncode.
            </summary>
            <param name="input">The input string.</param>
            <returns>The decoded string.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Tools.RemoveHtmlMarkup(System.String)">
            <summary>
            Removes all HTML tags from a text.
            </summary>
            <param name="html">The input HTML.</param>
            <returns>The extracted plain text.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Tools.ExtractDirectoryName(System.String)">
            <summary>
            Extracts the directory name from a path used in the Files Storage Providers.
            </summary>
            <param name="path">The path, for example '/folder/blah/'.</param>
            <returns>The directory name, for example 'blah'.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Tools.DetectCurrentPageInfo(System.Boolean)">
            <summary>
            Detects the correct <see cref="T:PageInfo" /> object associated to the current page using the <b>Page</b> and <b>NS</b> parameters in the query string.
            </summary>
            <param name="loadDefault"><c>true</c> to load the default page of the specified namespace when <b>Page</b> is not specified, <c>false</c> otherwise.</param>
            <returns>If <b>Page</b> is specified and exists, the correct <see cref="T:PageInfo" />, otherwise <c>null</c> if <b>loadDefault</b> is <c>false</c>,
            or the <see cref="T:PageInfo" /> object representing the default page of the specified namespace if <b>loadDefault</b> is <c>true</c>.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Tools.DetectCurrentFullName">
            <summary>
            Detects the full name of the current page using the <b>Page</b> and <b>NS</b> parameters in the query string.
            </summary>
            <returns>The full name of the page, regardless of the existence of the page.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Tools.DetectCurrentNamespaceInfo">
            <summary>
            Detects the correct <see cref="T:NamespaceInfo" /> object associated to the current namespace using the <b>NS</b> parameter in the query string.
            </summary>
            <returns>The correct <see cref="T:NamespaceInfo" /> object, or <c>null</c>.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Tools.DetectCurrentNamespace">
            <summary>
            Detects the name of the current namespace using the <b>NS</b> parameter in the query string.
            </summary>
            <returns>The name of the namespace, or an empty string.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Tools.GetMessageIdForAnchor(System.DateTime)">
            <summary>
            Gets the message ID for HTML anchors.
            </summary>
            <param name="messageDateTime">The message date/time.</param>
            <returns>The ID.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Tools.GetDirectoryName(System.String)">
            <summary>
            Gets the name of a file's directory.
            </summary>
            <param name="filename">The filename.</param>
            <returns>The name of the item.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Tools.GetUpdateStatus(System.String,System.String,System.String@,System.String@)">
            <summary>
            Gets the update status of a component.
            </summary>
            <param name="url">The version file URL.</param>
            <param name="currentVersion">The current version.</param>
            <param name="newVersion">The new version, if any.</param>
            <param name="newAssemblyUrl">The URL of the new assembly, if applicable and available.</param>
            <returns>The update status.</returns>
            <remarks>This method only works in Full Trust.</remarks>
        </member>
        <member name="M:ScrewTurn.Wiki.Tools.HashDocumentNameForTemporaryIndex(System.String)">
            <summary>
            Computes the hash value of a string that is value across application instances and versions.
            </summary>
            <param name="value">The string to compute the hash of.</param>
            <returns>The hash value.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Tools.ObfuscateText(System.String)">
            <summary>
            Obfuscates text, replacing each character with its HTML escaped sequence, for example a becomes <c>&amp;#97;</c>.
            </summary>
            <param name="input">The input text.</param>
            <returns>The output obfuscated text.</returns>
        </member>
        <member name="P:ScrewTurn.Wiki.Tools.AvailableThemes">
            <summary>
            Gets the available Themes.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Tools.AvailableCultures">
            <summary>
            Gets the available Cultures.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Tools.CurrentCulture">
            <summary>
            Gets the current culture.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.Tools.SystemUptime">
            <summary>
            Gets the approximate System Uptime.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.UpdateStatus">
            <summary>
            Lists legal update statuses.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.UpdateStatus.Error">
            <summary>
            Error while retrieving version information.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.UpdateStatus.UpToDate">
            <summary>
            The component is up-to-date.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.UpdateStatus.NewVersionFound">
            <summary>
            A new version was found.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.ProviderCollector`1">
            <summary>
            Implements a generic Provider Collector.
            </summary>
            <typeparam name="T">The type of the Collector.</typeparam>
        </member>
        <member name="M:ScrewTurn.Wiki.ProviderCollector`1.#ctor">
            <summary>
            Initializes a new instance of the class.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.ProviderCollector`1.AddProvider(`0)">
            <summary>
            Adds a Provider to the Collector.
            </summary>
            <param name="provider">The Provider to add.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.ProviderCollector`1.RemoveProvider(`0)">
            <summary>
            Removes a Provider from the Collector.
            </summary>
            <param name="provider">The Provider to remove.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.ProviderCollector`1.GetProvider(System.String)">
            <summary>
            Gets a Provider, searching for its Type Name.
            </summary>
            <param name="typeName">The Type Name.</param>
            <returns>The Provider, or null if the Provider was not found.</returns>
        </member>
        <member name="P:ScrewTurn.Wiki.ProviderCollector`1.AllProviders">
            <summary>
            Gets all the Providers (copied array).
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.UrlTools">
            <summary>
            Implements useful URL-handling tools.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.UrlTools.RouteCurrentRequest">
            <summary>
            Properly routes the current virtual request to a physical ASP.NET page.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.UrlTools.GetCurrentNamespace">
            <summary>
            Extracts the current namespace from the URL, such as <i>/App/Namespace.Edit.aspx</i>.
            </summary>
            <returns>The current namespace, or an empty string. <c>null</c> if the URL format is not specified.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.UrlTools.Redirect(System.String)">
            <summary>
            Redirects the current response to the specified URL, properly appending the current namespace if any.
            </summary>
            <param name="target">The target URL.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.UrlTools.Redirect(System.String,System.Boolean)">
            <summary>
            Redirects the current response to the specified URL, appending the current namespace if requested.
            </summary>
            <param name="target">The target URL.</param>
            <param name="addNamespace">A value indicating whether to add the namespace.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.UrlTools.BuildUrl(System.String[])">
            <summary>
            Builds a URL properly prepending the namespace to the URL.
            </summary>
            <param name="chunks">The chunks used to build the URL.</param>
            <returns>The complete URL.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.UrlTools.BuildUrl(System.Text.StringBuilder,System.String[])">
            <summary>
            Builds a URL properly appendind the <b>NS</b> parameter if appropriate.
            </summary>
            <param name="destination">The destination <see cref="T:StringBuilder"/>.</param>
            <param name="chunks">The chunks to append.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.UrlTools.RedirectHome">
            <summary>
            Redirects to the default page of the current namespace.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.AuthReader">
            <summary>
            Utility class for reading permissions and authorizations.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthReader.RetrieveGrantsForGlobals(ScrewTurn.Wiki.PluginFramework.UserGroup)">
            <summary>
            Gets all the actions for global resources that are granted to a group.
            </summary>
            <param name="group">The user group.</param>
            <returns>The granted actions.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthReader.RetrieveGrantsForGlobals(ScrewTurn.Wiki.PluginFramework.UserInfo)">
            <summary>
            Gets all the actions for global resources that are granted to a user.
            </summary>
            <param name="user">The user.</param>
            <returns>The granted actions.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthReader.RetrieveGrantsForGlobals(System.String)">
            <summary>
            Gets all the actions for global resources that are granted to a subject.
            </summary>
            <param name="subject">The subject.</param>
            <returns>The granted actions.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthReader.RetrieveDenialsForGlobals(ScrewTurn.Wiki.PluginFramework.UserGroup)">
            <summary>
            Gets all the actions for global resources that are denied to a group.
            </summary>
            <param name="group">The user group.</param>
            <returns>The denied actions.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthReader.RetrieveDenialsForGlobals(ScrewTurn.Wiki.PluginFramework.UserInfo)">
            <summary>
            Gets all the actions for global resources that are denied to a user.
            </summary>
            <param name="user">The user.</param>
            <returns>The denied actions.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthReader.RetrieveDenialsForGlobals(System.String)">
            <summary>
            Gets all the actions for global resources that are denied to a subject.
            </summary>
            <param name="subject">The subject.</param>
            <returns>The denied actions.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthReader.RetrieveSubjectsForNamespace(ScrewTurn.Wiki.PluginFramework.NamespaceInfo)">
            <summary>
            Retrieves the subjects that have ACL entries set for a namespace.
            </summary>
            <param name="nspace">The namespace (<c>null</c> for the root).</param>
            <returns>The subjects.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthReader.RetrieveGrantsForNamespace(ScrewTurn.Wiki.PluginFramework.UserGroup,ScrewTurn.Wiki.PluginFramework.NamespaceInfo)">
            <summary>
            Gets all the actions for a namespace that are granted to a group.
            </summary>
            <param name="group">The user group.</param>
            <param name="nspace">The namespace (<c>null</c> for the root).</param>
            <returns>The granted actions.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthReader.RetrieveGrantsForNamespace(ScrewTurn.Wiki.PluginFramework.UserInfo,ScrewTurn.Wiki.PluginFramework.NamespaceInfo)">
            <summary>
            Gets all the actions for a namespace that are granted to a user.
            </summary>
            <param name="user">The user.</param>
            <param name="nspace">The namespace (<c>null</c> for the root).</param>
            <returns>The granted actions.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthReader.RetrieveGrantsForNamespace(System.String,ScrewTurn.Wiki.PluginFramework.NamespaceInfo)">
            <summary>
            Gets all the actions for a namespace that are granted to a subject.
            </summary>
            <param name="subject">The subject.</param>
            <param name="nspace">The namespace (<c>null</c> for the root).</param>
            <returns>The granted actions.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthReader.RetrieveDenialsForNamespace(ScrewTurn.Wiki.PluginFramework.UserGroup,ScrewTurn.Wiki.PluginFramework.NamespaceInfo)">
            <summary>
            Gets all the actions for a namespace that are denied to a group.
            </summary>
            <param name="group">The user group.</param>
            <param name="nspace">The namespace (<c>null</c> for the root).</param>
            <returns>The denied actions.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthReader.RetrieveDenialsForNamespace(ScrewTurn.Wiki.PluginFramework.UserInfo,ScrewTurn.Wiki.PluginFramework.NamespaceInfo)">
            <summary>
            Gets all the actions for a namespace that are denied to a user.
            </summary>
            <param name="user">The user.</param>
            <param name="nspace">The namespace (<c>null</c> for the root).</param>
            <returns>The denied actions.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthReader.RetrieveDenialsForNamespace(System.String,ScrewTurn.Wiki.PluginFramework.NamespaceInfo)">
            <summary>
            Gets all the actions for a namespace that are denied to a subject.
            </summary>
            <param name="subject">The subject.</param>
            <param name="nspace">The namespace (<c>null</c> for the root).</param>
            <returns>The denied actions.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthReader.RetrieveSubjectsForPage(ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Retrieves the subjects that have ACL entries set for a page.
            </summary>
            <param name="page">The page.</param>
            <returns>The subjects.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthReader.RetrieveGrantsForPage(ScrewTurn.Wiki.PluginFramework.UserGroup,ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Gets all the actions for a page that are granted to a group.
            </summary>
            <param name="group">The user group.</param>
            <param name="page">The page.</param>
            <returns>The granted actions.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthReader.RetrieveGrantsForPage(ScrewTurn.Wiki.PluginFramework.UserInfo,ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Gets all the actions for a page that are granted to a user.
            </summary>
            <param name="user">The user.</param>
            <param name="page">The page.</param>
            <returns>The granted actions.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthReader.RetrieveGrantsForPage(System.String,ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Gets all the actions for a page that are granted to a subject.
            </summary>
            <param name="subject">The subject.</param>
            <param name="page">The page.</param>
            <returns>The granted actions.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthReader.RetrieveDenialsForPage(ScrewTurn.Wiki.PluginFramework.UserGroup,ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Gets all the actions for a page that are denied to a group.
            </summary>
            <param name="group">The user group.</param>
            <param name="page">The page.</param>
            <returns>The granted actions.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthReader.RetrieveDenialsForPage(ScrewTurn.Wiki.PluginFramework.UserInfo,ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Gets all the actions for a page that are denied to a user.
            </summary>
            <param name="user">The user.</param>
            <param name="page">The page.</param>
            <returns>The granted actions.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthReader.RetrieveDenialsForPage(System.String,ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Gets all the actions for a page that are denied to a subject.
            </summary>
            <param name="subject">The subject.</param>
            <param name="page">The page.</param>
            <returns>The granted actions.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthReader.RetrieveSubjectsForDirectory(ScrewTurn.Wiki.PluginFramework.IFilesStorageProviderV30,System.String)">
            <summary>
            Retrieves the subjects that have ACL entries set for a directory.
            </summary>
            <param name="provider">The provider.</param>
            <param name="directory">The directory.</param>
            <returns>The subjects.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthReader.RetrieveGrantsForDirectory(ScrewTurn.Wiki.PluginFramework.UserGroup,ScrewTurn.Wiki.PluginFramework.IFilesStorageProviderV30,System.String)">
            <summary>
            Gets all the actions for a directory that are granted to a group.
            </summary>
            <param name="group">The user group.</param>
            <param name="provider">The provider.</param>
            <param name="directory">The directory.</param>
            <returns>The granted actions.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthReader.RetrieveGrantsForDirectory(ScrewTurn.Wiki.PluginFramework.UserInfo,ScrewTurn.Wiki.PluginFramework.IFilesStorageProviderV30,System.String)">
            <summary>
            Gets all the actions for a directory that are granted to a user.
            </summary>
            <param name="user">The user.</param>
            <param name="provider">The provider.</param>
            <param name="directory">The directory.</param>
            <returns>The granted actions.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthReader.RetrieveGrantsForDirectory(System.String,ScrewTurn.Wiki.PluginFramework.IFilesStorageProviderV30,System.String)">
            <summary>
            Gets all the actions for a directory that are granted to a subject.
            </summary>
            <param name="subject">The subject.</param>
            <param name="provider">The provider.</param>
            <param name="directory">The directory.</param>
            <returns>The granted actions.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthReader.RetrieveDenialsForDirectory(ScrewTurn.Wiki.PluginFramework.UserGroup,ScrewTurn.Wiki.PluginFramework.IFilesStorageProviderV30,System.String)">
            <summary>
            Gets all the actions for a directory that are denied to a group.
            </summary>
            <param name="group">The user group.</param>
            <param name="provider">The provider.</param>
            <param name="directory">The directory.</param>
            <returns>The denied actions.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthReader.RetrieveDenialsForDirectory(ScrewTurn.Wiki.PluginFramework.UserInfo,ScrewTurn.Wiki.PluginFramework.IFilesStorageProviderV30,System.String)">
            <summary>
            Gets all the actions for a directory that are denied to a user.
            </summary>
            <param name="user">The user.</param>
            <param name="provider">The provider.</param>
            <param name="directory">The directory.</param>
            <returns>The denied actions.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthReader.RetrieveDenialsForDirectory(System.String,ScrewTurn.Wiki.PluginFramework.IFilesStorageProviderV30,System.String)">
            <summary>
            Gets all the actions for a directory that are denied to a subject.
            </summary>
            <param name="subject">The subject.</param>
            <param name="provider">The provider.</param>
            <param name="directory">The directory.</param>
            <returns>The denied actions.</returns>
        </member>
        <member name="P:ScrewTurn.Wiki.AuthReader.SettingsProvider">
            <summary>
            Gets the settings storage provider.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.Pages">
            <summary>
            Allows access to the Pages.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.GetNamespaces">
            <summary>
            Gets all the namespaces, sorted.
            </summary>
            <returns>The namespaces, sorted.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.FindNamespace(System.String)">
            <summary>
            Finds a namespace.
            </summary>
            <param name="name">The name of the namespace to find.</param>
            <returns>The namespace, or <c>null</c> if no namespace is found.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.FindNamespace(System.String,ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV30)">
            <summary>
            Finds a namespace.
            </summary>
            <param name="name">The name of the namespace to find.</param>
            <param name="provider">The provider to look into.</param>
            <returns>The namespace, or <c>null</c> if the namespace is not found.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.CreateNamespace(System.String)">
            <summary>
            Creates a new namespace in the default pages storage provider.
            </summary>
            <param name="name">The name of the namespace to add.</param>
            <returns><c>true</c> if the namespace is created, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.CreateNamespace(System.String,ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV30)">
            <summary>
            Creates a new namespace.
            </summary>
            <param name="name">The name of the namespace to add.</param>
            <param name="provider">The provider to create the namespace into.</param>
            <returns><c>true</c> if the namespace is created, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.RemoveNamespace(ScrewTurn.Wiki.PluginFramework.NamespaceInfo)">
            <summary>
            Removes a namespace.
            </summary>
            <param name="nspace">The namespace to remove.</param>
            <returns><c>true</c> if the namespace is removed, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.DeleteAllAttachments(System.Collections.Generic.List{ScrewTurn.Wiki.PluginFramework.PageInfo})">
            <summary>
            Deletes all page attachments for a whole namespace.
            </summary>
            <param name="pages">The pages in the namespace.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.RenameNamespace(ScrewTurn.Wiki.PluginFramework.NamespaceInfo,System.String)">
            <summary>
            Renames a namespace.
            </summary>
            <param name="nspace">The namespace to rename.</param>
            <param name="newName">The new name.</param>
            <returns><c>true</c> if the namespace is removed, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.NotifyFilesProvidersForNamespaceRename(System.Collections.Generic.List{System.String},System.String,System.String)">
            <summary>
            Notifies all files providers that a namespace was renamed.
            </summary>
            <param name="pages">The pages in the renamed namespace.</param>
            <param name="nspace">The name of the renamed namespace.</param>
            <param name="newName">The new name of the namespace.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.InitMetaDataItems(System.String)">
            <summary>
            Initializes the namespace-specific meta-data items for a namespace.
            </summary>
            <param name="nspace">The namespace to initialize meta-data items for.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.ResetMetaDataItems(System.String)">
            <summary>
            Resets the namespace-specific meta-data items for a namespace.
            </summary>
            <param name="nspace">The namespace to reset meta-data items for.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.UpdateMetaDataItems(System.String,System.String)">
            <summary>
            Updates the namespace-specific meta-data items for a namespace when it is renamed.
            </summary>
            <param name="nspace">The renamed namespace to update the meta-data items for.</param>
            <param name="newName">The new name of the namespace.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.SetNamespaceDefaultPage(ScrewTurn.Wiki.PluginFramework.NamespaceInfo,ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Sets the default page of a namespace.
            </summary>
            <param name="nspace">The namespace (<c>null</c> for the root).</param>
            <param name="page">The page.</param>
            <returns><c>true</c> if the default page is set, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.FindPage(System.String)">
            <summary>
            Finds a Page.
            </summary>
            <param name="fullName">The full name of the page to find (case <b>unsensitive</b>).</param>
            <returns>The correct <see cref="T:PageInfo" /> object, if any, <c>null</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.FindPage(System.String,ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV30)">
            <summary>
            Finds a Page in a specific Provider.
            </summary>
            <param name="fullName">The full name of the page to find (case <b>unsensitive</b>).</param>
            <param name="provider">The Provider.</param>
            <returns>The correct <see cref="T:PageInfo" /> object, if any, <c>null</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.GetDraft(ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Gets a page draft, if any.
            </summary>
            <param name="page">The draft content, or <c>null</c> if no draft exists.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.DeleteDraft(ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Deletes the draft of a page (if any).
            </summary>
            <param name="page">The page of which to delete the draft.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.GetBackups(ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Gets the Backups/Revisions of a Page.
            </summary>
            <param name="page">The Page.</param>
            <returns>The list of available Backups/Revision numbers.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.GetBackupContent(ScrewTurn.Wiki.PluginFramework.PageInfo,System.Int32)">
            <summary>
            Gets the Content of a Page Backup.
            </summary>
            <param name="page">The Page.</param>
            <param name="revision">The Backup/Revision number.</param>
            <returns>The Content of the Backup.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.DeleteBackups(ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Deletes all the backups of a page.
            </summary>
            <param name="page">The Page.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.DeleteBackups(ScrewTurn.Wiki.PluginFramework.PageInfo,System.Int32)">
            <summary>
            Deletes a subset of the backups of a page.
            </summary>
            <param name="page">The Page.</param>
            <param name="firstToDelete">The first backup to be deleted (this backup and older backups are deleted).</param>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.Rollback(ScrewTurn.Wiki.PluginFramework.PageInfo,System.Int32)">
            <summary>
            Performs the rollpack of a Page.
            </summary>
            <param name="page">The Page.</param>
            <param name="version">The revision to rollback the Page to.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.CreatePage(ScrewTurn.Wiki.PluginFramework.NamespaceInfo,System.String)">
            <summary>
            Creates a new Page.
            </summary>
            <param name="nspace">The target namespace (<c>null</c> for the root).</param>
            <param name="name">The Page name.</param>
            <returns><c>true</c> if the Page is created, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.CreatePage(System.String,System.String)">
            <summary>
            Creates a new Page.
            </summary>
            <param name="nspace">The target namespace (<c>null</c> for the root).</param>
            <param name="name">The Page name.</param>
            <returns><c>true</c> if the Page is created, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.CreatePage(ScrewTurn.Wiki.PluginFramework.NamespaceInfo,System.String,ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV30)">
            <summary>
            Creates a new Page.
            </summary>
            <param name="nspace">The target namespace (<c>null</c> for the root).</param>
            <param name="name">The Page name.</param>
            <param name="provider">The destination provider.</param>
            <returns><c>true</c> if the Page is created, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.CreatePage(System.String,System.String,ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV30)">
            <summary>
            Creates a new Page.
            </summary>
            <param name="nspace">The target namespace (<c>null</c> for the root).</param>
            <param name="name">The Page name.</param>
            <param name="provider">The destination provider.</param>
            <returns><c>true</c> if the Page is created, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.DeletePage(ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Deletes a Page.
            </summary>
            <param name="page">The Page to delete.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.RenamePage(ScrewTurn.Wiki.PluginFramework.PageInfo,System.String)">
            <summary>
            Renames a Page.
            </summary>
            <param name="page">The Page to rename.</param>
            <param name="name">The new name.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.MigratePage(ScrewTurn.Wiki.PluginFramework.PageInfo,ScrewTurn.Wiki.PluginFramework.NamespaceInfo,System.Boolean)">
            <summary>
            Migrates a page.
            </summary>
            <param name="page">The page to migrate.</param>
            <param name="targetNamespace">The target namespace.</param>
            <param name="copyCategories">A value indicating whether to copy the page categories to the target namespace.</param>
            <returns><c>true</c> if the page is migrated, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.ModifyPage(ScrewTurn.Wiki.PluginFramework.PageInfo,System.String,System.String,System.DateTime,System.String,System.String,System.String[],System.String,ScrewTurn.Wiki.PluginFramework.SaveMode)">
            <summary>
            Modifies a Page.
            </summary>
            <param name="page">The Page to modify.</param>
            <param name="title">The Title of the Page.</param>
            <param name="username">The Username of the user who modified the Page.</param>
            <param name="dateTime">The Date/Time of the modification.</param>
            <param name="comment">The comment of the editor, about this revision.</param>
            <param name="content">The Content.</param>
            <param name="keywords">The keywords, usually used for SEO.</param>
            <param name="description">The description, usually used for SEO.</param>
            <param name="saveMode">The save mode.</param>
            <returns>True if the Page has been modified successfully.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.StorePageOutgoingLinks(ScrewTurn.Wiki.PluginFramework.PageInfo,System.String)">
            <summary>
            Stores outgoing links for a page.
            </summary>
            <param name="page">The page.</param>
            <param name="content">The raw content.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.DeleteOldBackupsIfNeeded(ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Deletes the old backups if the current number of backups exceeds the limit.
            </summary>
            <param name="page">The page.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.RemoveUserFromArray(ScrewTurn.Wiki.PluginFramework.UserInfo[],ScrewTurn.Wiki.PluginFramework.UserInfo)">
            <summary>
            Removes a user from an array.
            </summary>
            <param name="users">The array of users.</param>
            <param name="userToRemove">The user to remove.</param>
            <returns>The resulting array without the specified user.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.SendEmailNotificationForPage(ScrewTurn.Wiki.PluginFramework.PageInfo,ScrewTurn.Wiki.PluginFramework.UserInfo)">
            <summary>
            Sends the email notification for a page change.
            </summary>
            <param name="page">The page that was modified.</param>
            <param name="author">The author of the modification.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.CanEditPage(ScrewTurn.Wiki.PluginFramework.PageInfo,System.String,System.String[],System.Boolean@,System.Boolean@)">
            <summary>
            Determines whether a user can edit a page.
            </summary>
            <param name="page">The page.</param>
            <param name="username">The username.</param>
            <param name="groups">The groups.</param>
            <param name="canEdit">A value indicating whether the user can edit the page.</param>
            <param name="canEditWithApproval">A value indicating whether the user can edit the page with subsequent approval.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.VerifyIpHostFilter">
            <summary>
            Verifies whether or not the current user's ip address is in the host filter or not.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.CanApproveDraft(ScrewTurn.Wiki.PluginFramework.PageInfo,System.String,System.String[])">
            <summary>
            Determines whether a user can approve/reject a draft of a page.
            </summary>
            <param name="page">The page.</param>
            <param name="username">The username.</param>
            <param name="groups">The groups.</param>
            <returns><c>true</c> if the user can approve/reject a draft of the page, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.SendEmailNotificationForDraft(ScrewTurn.Wiki.PluginFramework.PageInfo,System.String,System.String,System.String)">
            <summary>
            Sends a draft notification to "administrators".
            </summary>
            <param name="currentPage">The edited page.</param>
            <param name="title">The title.</param>
            <param name="comment">The comment.</param>
            <param name="author">The author.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.GetPages(ScrewTurn.Wiki.PluginFramework.NamespaceInfo)">
            <summary>
            Gets the list of all the Pages of a namespace.
            </summary>
            <param name="nspace">The namespace (<c>null</c> for the root).</param>
            <returns>The pages.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.GetGlobalPageCount">
            <summary>
            Gets the global number of pages.
            </summary>
            <returns>The number of pages.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.GetPageIncomingLinks(ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Gets the incoming links for a page.
            </summary>
            <param name="page">The page.</param>
            <returns>The incoming links.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.GetPageOutgoingLinks(ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Gets the outgoing links of a page.
            </summary>
            <param name="page">The page.</param>
            <returns>The outgoing links.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.GetOrphanedPages(ScrewTurn.Wiki.PluginFramework.NamespaceInfo)">
            <summary>
            Gets all the pages in a namespace without incoming links.
            </summary>
            <param name="nspace">The namespace (<c>null</c> for the root).</param>
            <returns>The orphaned pages.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.GetWantedPages(System.String)">
            <summary>
            Gets the wanted/inexistent pages in all namespaces.
            </summary>
            <param name="nspace">The namespace (<c>null</c> for the root).</param>
            <returns>The wanted/inexistent pages (dictionary wanted_page->linking_pages).</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.Contains``1(``0[],``0)">
            <summary>
            Determines whether an array contains a value.
            </summary>
            <typeparam name="T">The type of the elements in the array.</typeparam>
            <param name="array">The array.</param>
            <param name="value">The value.</param>
            <returns><c>true</c> if the array contains the value, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.ExtractNegativeKeys``1(System.Collections.Generic.Dictionary{``0,System.Boolean})">
            <summary>
            Extracts the negative keys from a dictionary.
            </summary>
            <typeparam name="T">The type of the key.</typeparam>
            <param name="data">The dictionary.</param>
            <returns>The negative keys.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.FindCategory(System.String)">
            <summary>
            Finds a Category.
            </summary>
            <param name="fullName">The full name of the Category to Find (case <b>unsensitive</b>).</param>
            <returns>The correct <see cref="T:CategoryInfo" /> object or <c>null</c> if no category is found.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.CreateCategory(ScrewTurn.Wiki.PluginFramework.NamespaceInfo,System.String)">
            <summary>
            Creates a new Category.
            </summary>
            <param name="nspace">The target namespace (<c>null</c> for the root).</param>
            <param name="name">The Name of the Category.</param>
            <returns><c>true</c> if the category is created, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.CreateCategory(System.String,System.String)">
            <summary>
            Creates a new Category.
            </summary>
            <param name="nspace">The target namespace (<c>null</c> for the root).</param>
            <param name="name">The Name of the Category.</param>
            <returns><c>true</c> if the category is created, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.CreateCategory(ScrewTurn.Wiki.PluginFramework.NamespaceInfo,System.String,ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV30)">
            <summary>
            Creates a new Category in the specifued Provider.
            </summary>
            <param name="nspace">The target namespace (<c>null</c> for the root).</param>
            <param name="name">The Name of the Category.</param>
            <param name="provider">The Provider.</param>
            <returns><c>true</c> if the category is created, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.CreateCategory(System.String,System.String,ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV30)">
            <summary>
            Creates a new Category in the specifued Provider.
            </summary>
            <param name="nspace">The target namespace (<c>null</c> for the root).</param>
            <param name="name">The Name of the Category.</param>
            <param name="provider">The Provider.</param>
            <returns><c>true</c> if the category is created, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.RemoveCategory(ScrewTurn.Wiki.PluginFramework.CategoryInfo)">
            <summary>
            Removes a Category.
            </summary>
            <param name="category">The Category to remove.</param>
            <returns>True if the Category has been removed successfully.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.RenameCategory(ScrewTurn.Wiki.PluginFramework.CategoryInfo,System.String)">
            <summary>
            Renames a Category.
            </summary>
            <param name="category">The Category to rename.</param>
            <param name="newName">The new Name of the Category.</param>
            <returns>True if the Category has been renamed successfully.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.GetCategoriesForPage(ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Gets the Categories of a Page.
            </summary>
            <param name="page">The Page.</param>
            <returns>The Categories of the Page.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.GetUncategorizedPages(ScrewTurn.Wiki.PluginFramework.NamespaceInfo)">
            <summary>
            Gets all the Uncategorized Pages.
            </summary>
            <param name="nspace">The namespace.</param>
            <returns>The Uncategorized Pages.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.GetAvailableCategories(ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Gets the valid Categories for a Page, i.e. the Categories managed by the Page's Provider and in the same namespace as the page.
            </summary>
            <param name="page">The Page, or <c>null</c> to use the default provider.</param>
            <returns>The valid Categories.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.GetMatchingCategories(ScrewTurn.Wiki.PluginFramework.CategoryInfo)">
            <summary>
            Gets the other Categories of the Provider and Namespace of the specified Category.
            </summary>
            <param name="category">The Category.</param>
            <returns>The matching Categories.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.Rebind(ScrewTurn.Wiki.PluginFramework.PageInfo,ScrewTurn.Wiki.PluginFramework.CategoryInfo[])">
            <summary>
            Binds a Page with some Categories.
            </summary>
            <param name="page">The Page to rebind.</param>
            <param name="cats">The Categories to bind the Page with.</param>
            <remarks>
            The specified Categories must be managed by the same Provider that manages the Page.
            The operation removes all the previous bindings.
            </remarks>
            <returns>True if the binding succeeded.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.MergeCategories(ScrewTurn.Wiki.PluginFramework.CategoryInfo,ScrewTurn.Wiki.PluginFramework.CategoryInfo)">
            <summary>
            Merges two Categories.
            </summary>
            <param name="source">The source Category.</param>
            <param name="destination">The destination Category.</param>
            <returns>True if the Categories have been merged successfully.</returns>
            <remarks>The <b>destination</b> Category remains, while the <b>source</b> Category is deleted, and all its Pages re-binded in the <b>destination</b> Category.
            The two Categories must have the same provider.</remarks>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.GetCategories(ScrewTurn.Wiki.PluginFramework.NamespaceInfo)">
            <summary>
            Gets the list of all the Categories of a namespace. The list shouldn't be modified.
            </summary>
            <param name="nspace">The namespace (<c>null</c> for the root).</param>
            <returns>The categories, sorted by name.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.GetPageMessages(ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Gets the Page Messages.
            </summary>
            <param name="page">The Page.</param>
            <returns>The list of the <b>first-level</b> Messages, containing the replies properly nested.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.GetMessageCount(ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Gets the total number of Messages in a Page Discussion.
            </summary>
            <param name="page">The Page.</param>
            <returns>The number of messages.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.FindMessage(ScrewTurn.Wiki.PluginFramework.Message[],System.Int32)">
            <summary>
            Finds a Message.
            </summary>
            <param name="messages">The Messages.</param>
            <param name="id">The Message ID.</param>
            <returns>The Message or null.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.AddMessage(ScrewTurn.Wiki.PluginFramework.PageInfo,System.String,System.String,System.DateTime,System.String,System.Int32)">
            <summary>
            Adds a new Message to a Page.
            </summary>
            <param name="page">The Page.</param>
            <param name="username">The Username.</param>
            <param name="subject">The Subject.</param>
            <param name="dateTime">The Date/Time.</param>
            <param name="body">The Body.</param>
            <param name="parent">The Parent Message ID, or -1.</param>
            <returns>True if the Message has been added successfully.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.SendEmailNotificationForMessage(ScrewTurn.Wiki.PluginFramework.PageInfo,ScrewTurn.Wiki.PluginFramework.UserInfo,System.String,System.String)">
            <summary>
            Sends the email notification for a new message.
            </summary>
            <param name="page">The page the message was posted to.</param>
            <param name="author">The author of the message.</param>
            <param name="id">The message ID to be used for anchors.</param>
            <param name="subject">The message subject.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.RemoveMessage(ScrewTurn.Wiki.PluginFramework.PageInfo,System.Int32,System.Boolean)">
            <summary>
            Removes a Message.
            </summary>
            <param name="page">The Page.</param>
            <param name="id">The ID of the Message to remove.</param>
            <param name="removeReplies">A value specifying whether or not to remove the replies.</param>
            <returns>True if the Message has been removed successfully.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.RemoveAllMessages(ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Removes all messages of a Page.
            </summary>
            <param name="page">The Page.</param>
            <returns><c>true</c> if the messages are removed, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.ModifyMessage(ScrewTurn.Wiki.PluginFramework.PageInfo,System.Int32,System.String,System.String,System.DateTime,System.String)">
            <summary>
            Modifies a Message.
            </summary>
            <param name="page">The Page.</param>
            <param name="id">The ID of the Message to modify.</param>
            <param name="username">The Username.</param>
            <param name="subject">The Subject.</param>
            <param name="dateTime">The Date/Time.</param>
            <param name="body">The Body.</param>
            <returns>True if the Message has been modified successfully.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Pages.IsValidName(System.String)">
            <summary>
            Checks the validity of a Page name.
            </summary>
            <param name="name">The Page name.</param>
            <returns>True if the name is valid.</returns>
        </member>
        <member name="T:ScrewTurn.Wiki.PageContentDateComparer">
            <summary>
            Compares PageContent objects.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.PageContentDateComparer.Compare(ScrewTurn.Wiki.PluginFramework.PageContent,ScrewTurn.Wiki.PluginFramework.PageContent)">
            <summary>
            Compares two PageContent objects, using the DateTime as parameter.
            </summary>
            <param name="x">The first object.</param>
            <param name="y">The second object.</param>
            <returns>The result of the comparison (1, 0 or -1).</returns>
        </member>
        <member name="T:ScrewTurn.Wiki.AuthWriter">
            <summary>
            Utility class for writing permissions and authorizations.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthWriter.SetPermissionForGlobals(ScrewTurn.Wiki.AuthStatus,System.String,ScrewTurn.Wiki.PluginFramework.UserGroup)">
            <summary>
            Sets a permission for a global resource.
            </summary>
            <param name="status">The authorization status.</param>
            <param name="action">The action of which to modify the authorization status.</param>
            <param name="group">The group subject of the authorization change.</param>
            <returns><c>true</c> if the authorization status is changed, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthWriter.SetPermissionForGlobals(ScrewTurn.Wiki.AuthStatus,System.String,ScrewTurn.Wiki.PluginFramework.UserInfo)">
            <summary>
            Sets a permission for a global resource.
            </summary>
            <param name="status">The authorization status.</param>
            <param name="action">The action of which to modify the authorization status.</param>
            <param name="user">The user subject of the authorization change.</param>
            <returns><c>true</c> if the authorization status is changed, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthWriter.SetPermissionForGlobals(ScrewTurn.Wiki.AuthStatus,System.String,System.String)">
            <summary>
            Sets a permission for a global resource.
            </summary>
            <param name="status">The authorization status.</param>
            <param name="action">The action of which to modify the authorization status.</param>
            <param name="subject">The subject of the authorization change.</param>
            <returns><c>true</c> if the authorization status is changed, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthWriter.SetPermissionForNamespace(ScrewTurn.Wiki.AuthStatus,ScrewTurn.Wiki.PluginFramework.NamespaceInfo,System.String,ScrewTurn.Wiki.PluginFramework.UserGroup)">
            <summary>
            Sets a permission for a namespace.
            </summary>
            <param name="status">The authorization status.</param>
            <param name="nspace">The namespace (<c>null</c> for the root).</param>
            <param name="action">The action of which to modify the authorization status.</param>
            <param name="group">The group subject of the authorization change.</param>
            <returns><c>true</c> if the authorization status is changed, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthWriter.SetPermissionForNamespace(ScrewTurn.Wiki.AuthStatus,ScrewTurn.Wiki.PluginFramework.NamespaceInfo,System.String,ScrewTurn.Wiki.PluginFramework.UserInfo)">
            <summary>
            Sets a permission for a namespace.
            </summary>
            <param name="status">The authorization status.</param>
            <param name="nspace">The namespace (<c>null</c> for the root).</param>
            <param name="action">The action of which to modify the authorization status.</param>
            <param name="user">The user subject of the authorization change.</param>
            <returns><c>true</c> if the authorization status is changed, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthWriter.SetPermissionForNamespace(ScrewTurn.Wiki.AuthStatus,ScrewTurn.Wiki.PluginFramework.NamespaceInfo,System.String,System.String)">
            <summary>
            Sets a permission for a namespace.
            </summary>
            <param name="status">The authorization status.</param>
            <param name="nspace">The namespace (<c>null</c> for the root).</param>
            <param name="action">The action of which to modify the authorization status.</param>
            <param name="subject">The subject of the authorization change.</param>
            <returns><c>true</c> if the authorization status is changed, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthWriter.SetPermissionForDirectory(ScrewTurn.Wiki.AuthStatus,ScrewTurn.Wiki.PluginFramework.IFilesStorageProviderV30,System.String,System.String,ScrewTurn.Wiki.PluginFramework.UserGroup)">
            <summary>
            Sets a permission for a directory.
            </summary>
            <param name="status">The authorization status.</param>
            <param name="provider">The provider that handles the directory.</param>
            <param name="directory">The directory.</param>
            <param name="action">The action of which to modify the authorization status.</param>
            <param name="group">The group subject of the authorization change.</param>
            <returns><c>true</c> if the authorization status is changed, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthWriter.SetPermissionForDirectory(ScrewTurn.Wiki.AuthStatus,ScrewTurn.Wiki.PluginFramework.IFilesStorageProviderV30,System.String,System.String,ScrewTurn.Wiki.PluginFramework.UserInfo)">
            <summary>
            Sets a permission for a directory.
            </summary>
            <param name="status">The authorization status.</param>
            <param name="provider">The provider that handles the directory.</param>
            <param name="directory">The directory.</param>
            <param name="action">The action of which to modify the authorization status.</param>
            <param name="user">The user subject of the authorization change.</param>
            <returns><c>true</c> if the authorization status is changed, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthWriter.SetPermissionForDirectory(ScrewTurn.Wiki.AuthStatus,ScrewTurn.Wiki.PluginFramework.IFilesStorageProviderV30,System.String,System.String,System.String)">
            <summary>
            Sets a permission for a directory.
            </summary>
            <param name="status">The authorization status.</param>
            <param name="provider">The provider that handles the directory.</param>
            <param name="directory">The directory.</param>
            <param name="action">The action of which to modify the authorization status.</param>
            <param name="subject">The subject of the authorization change.</param>
            <returns><c>true</c> if the authorization status is changed, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthWriter.SetPermissionForPage(ScrewTurn.Wiki.AuthStatus,ScrewTurn.Wiki.PluginFramework.PageInfo,System.String,ScrewTurn.Wiki.PluginFramework.UserGroup)">
            <summary>
            Sets a permission for a page.
            </summary>
            <param name="status">The authorization status.</param>
            <param name="page">The page.</param>
            <param name="action">The action of which to modify the authorization status.</param>
            <param name="group">The group subject of the authorization change.</param>
            <returns><c>true</c> if the authorization status is changed, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthWriter.SetPermissionForPage(ScrewTurn.Wiki.AuthStatus,ScrewTurn.Wiki.PluginFramework.PageInfo,System.String,ScrewTurn.Wiki.PluginFramework.UserInfo)">
            <summary>
            Sets a permission for a page.
            </summary>
            <param name="status">The authorization status.</param>
            <param name="page">The page.</param>
            <param name="action">The action of which to modify the authorization status.</param>
            <param name="user">The user subject of the authorization change.</param>
            <returns><c>true</c> if the authorization status is changed, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthWriter.SetPermissionForPage(ScrewTurn.Wiki.AuthStatus,ScrewTurn.Wiki.PluginFramework.PageInfo,System.String,System.String)">
            <summary>
            Sets a permission for a page.
            </summary>
            <param name="status">The authorization status.</param>
            <param name="page">The page.</param>
            <param name="action">The action of which to modify the authorization status.</param>
            <param name="subject">The subject of the authorization change.</param>
            <returns><c>true</c> if the authorization status is changed, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthWriter.RemoveEntriesForGlobals(ScrewTurn.Wiki.PluginFramework.UserGroup)">
            <summary>
            Removes all the ACL Entries for global resources that are bound to a user group.
            </summary>
            <param name="group">The user group.</param>
            <returns><c>true</c> if the operation succeeded, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthWriter.RemoveEntriesForGlobals(ScrewTurn.Wiki.PluginFramework.UserInfo)">
            <summary>
            Removes all the ACL Entries for global resources that are bound to a user.
            </summary>
            <param name="user">The user.</param>
            <returns><c>true</c> if the operation succeeded, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthWriter.RemoveEntriesForGlobals(System.String)">
            <summary>
            Removes all the ACL Entries for global resources that are bound to a subject.
            </summary>
            <param name="subject">The subject.</param>
            <returns><c>true</c> if the operation succeeded, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthWriter.RemoveEntriesForNamespace(ScrewTurn.Wiki.PluginFramework.UserGroup,ScrewTurn.Wiki.PluginFramework.NamespaceInfo)">
            <summary>
            Removes all the ACL Entries for a namespace that are bound to a user group.
            </summary>
            <param name="group">The user group.</param>
            <param name="nspace">The namespace (<c>null</c> for the root).</param>
            <returns><c>true</c> if the operation succeeded, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthWriter.RemoveEntriesForNamespace(ScrewTurn.Wiki.PluginFramework.UserInfo,ScrewTurn.Wiki.PluginFramework.NamespaceInfo)">
            <summary>
            Removes all the ACL Entries for a namespace that are bound to a user.
            </summary>
            <param name="user">The user.</param>
            <param name="nspace">The namespace (<c>null</c> for the root).</param>
            <returns><c>true</c> if the operation succeeded, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthWriter.RemoveEntriesForNamespace(System.String,ScrewTurn.Wiki.PluginFramework.NamespaceInfo)">
            <summary>
            Removes all the ACL Entries for a namespace that are bound to a subject.
            </summary>
            <param name="subject">The subject.</param>
            <param name="nspace">The namespace (<c>null</c> for the root).</param>
            <returns><c>true</c> if the operation succeeded, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthWriter.RemoveEntriesForPage(ScrewTurn.Wiki.PluginFramework.UserGroup,ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Removes all the ACL Entries for a page that are bound to a user group.
            </summary>
            <param name="group">The user group.</param>
            <param name="page">The page.</param>
            <returns><c>true</c> if the operation succeeded, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthWriter.RemoveEntriesForPage(ScrewTurn.Wiki.PluginFramework.UserInfo,ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Removes all the ACL Entries for a page that are bound to a user.
            </summary>
            <param name="user">The user.</param>
            <param name="page">The page.</param>
            <returns><c>true</c> if the operation succeeded, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthWriter.RemoveEntriesForPage(System.String,ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Removes all the ACL Entries for a page that are bound to a subject.
            </summary>
            <param name="subject">The subject.</param>
            <param name="page">The page.</param>
            <returns><c>true</c> if the operation succeeded, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthWriter.RemoveEntriesForDirectory(ScrewTurn.Wiki.PluginFramework.UserGroup,ScrewTurn.Wiki.PluginFramework.IFilesStorageProviderV30,System.String)">
            <summary>
            Removes all the ACL Entries for a directory that are bound to a user group.
            </summary>
            <param name="group">The group.</param>
            <param name="provider">The provider.</param>
            <param name="directory">The directory.</param>
            <returns><c>true</c> if the operation succeeded, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthWriter.RemoveEntriesForDirectory(ScrewTurn.Wiki.PluginFramework.UserInfo,ScrewTurn.Wiki.PluginFramework.IFilesStorageProviderV30,System.String)">
            <summary>
            Removes all the ACL Entries for a directory that are bound to a user.
            </summary>
            <param name="user">The user.</param>
            <param name="provider">The provider.</param>
            <param name="directory">The directory.</param>
            <returns><c>true</c> if the operation succeeded, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthWriter.RemoveEntriesForDirectory(System.String,ScrewTurn.Wiki.PluginFramework.IFilesStorageProviderV30,System.String)">
            <summary>
            Removes all the ACL Entries for a directory that are bound to a subject.
            </summary>
            <param name="subject">The subject.</param>
            <param name="provider">The provider.</param>
            <param name="directory">The directory.</param>
            <returns><c>true</c> if the operation succeeded, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthWriter.ClearEntriesForDirectory(ScrewTurn.Wiki.PluginFramework.IFilesStorageProviderV30,System.String)">
            <summary>
            Clears all the ACL entries for a directory.
            </summary>
            <param name="provider">The provider.</param>
            <param name="directory">The directory.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthWriter.ClearEntriesForNamespace(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Clears all the ACL entries for a namespace.
            </summary>
            <param name="nspace">The namespace.</param>
            <param name="pages">The local names of the pages in the namespace.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthWriter.ClearEntriesForPage(System.String)">
            <summary>
            Clears all the ACL entries for a page.
            </summary>
            <param name="page">The page full name.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthWriter.ProcessDirectoryRenaming(ScrewTurn.Wiki.PluginFramework.IFilesStorageProviderV30,System.String,System.String)">
            <summary>
            Processes the renaming of a directory.
            </summary>
            <param name="provider">The provider.</param>
            <param name="oldName">The old directory name (full path).</param>
            <param name="newName">The new directory name (full path).</param>
            <returns><c>true</c> if the operation completed successfully, <c>false</c> otherwise.</returns>
            <remarks>The method <b>does not</b> recurse in sub-directories.</remarks>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthWriter.ProcessNamespaceRenaming(System.String,System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Processes the renaming of a namespace.
            </summary>
            <param name="oldName">The old name of the namespace.</param>
            <param name="oldPages">The list of local names of the pages in the renamed namespace.</param>
            <param name="newName">The new name of the namespace.</param>
            <returns><c>true</c> if the operation completed successfully, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthWriter.ProcessPageRenaming(System.String,System.String)">
            <summary>
            Processes the renaming of a page.
            </summary>
            <param name="oldName">The old full page name.</param>
            <param name="newName">The new full page name.</param>
            <returns><c>true</c> if the operation completed successfully, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthWriter.GetLogMessage(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Gets the log message for an ACL entry change.
            </summary>
            <param name="resourcePrefix">The resource prefix.</param>
            <param name="resource">The resource name.</param>
            <param name="action">The action.</param>
            <param name="subject">The subject.</param>
            <param name="status">The status.</param>
            <returns>The message.</returns>
        </member>
        <member name="P:ScrewTurn.Wiki.AuthWriter.SettingsProvider">
            <summary>
            Gets the settings storage provider.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.SettingsStorageProvider">
            <summary>
            Implements a Settings Storage Provider against local text pluginAssemblies.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.SettingsStorageProvider.ProviderName">
            <summary>
            The name of the provider.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.SettingsStorageProvider.Init(ScrewTurn.Wiki.PluginFramework.IHostV30,System.String)">
            <summary>
            Initializes the Storage Provider.
            </summary>
            <param name="host">The Host of the Component.</param>
            <param name="config">The Configuration data, if any.</param>
            <exception cref="T:System.ArgumentNullException">If <b>host</b> or <b>config</b> are <c>null</c>.</exception>
            <exception cref="T:ScrewTurn.Wiki.PluginFramework.InvalidConfigurationException">If <b>config</b> is not valid or is incorrect.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.SettingsStorageProvider.Shutdown">
            <summary>
            Method invoked on shutdown.
            </summary>
            <remarks>This method might not be invoked in some cases.</remarks>
        </member>
        <member name="M:ScrewTurn.Wiki.SettingsStorageProvider.GetSetting(System.String)">
            <summary>
            Retrieves the value of a Setting.
            </summary>
            <param name="name">The name of the Setting.</param>
            <returns>The value of the Setting, or null.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>name</b> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <b>name</b> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.SettingsStorageProvider.SetSetting(System.String,System.String)">
            <summary>
            Stores the value of a Setting.
            </summary>
            <param name="name">The name of the Setting.</param>
            <param name="value">The value of the Setting. Value cannot contain CR and LF characters, which will be removed.</param>
            <returns>True if the Setting is stored, false otherwise.</returns>
            <remarks>This method stores the Value immediately.</remarks>
            <exception cref="T:System.ArgumentNullException">If <b>name</b> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <b>name</b> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.SettingsStorageProvider.GetAllSettings">
            <summary>
            Gets the all the setting values.
            </summary>
            <returns>All the settings.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.SettingsStorageProvider.LoadConfig">
            <summary>
            Loads configuration settings from disk.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.SettingsStorageProvider.DumpConfig">
            <summary>
            Dumps settings on disk.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.SettingsStorageProvider.BeginBulkUpdate">
            <summary>
            Starts a Bulk update of the Settings so that a bulk of settings can be set before storing them.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.SettingsStorageProvider.EndBulkUpdate">
            <summary>
            Ends a Bulk update of the Settings and stores the settings.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.SettingsStorageProvider.Sanitize(System.String)">
            <summary>
            Sanitizes a stiring from all unfriendly characters.
            </summary>
            <param name="input">The input string.</param>
            <returns>The sanitized result.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.SettingsStorageProvider.Resanitize(System.String)">
            <summary>
            Re-sanitizes a string from all unfriendly characters.
            </summary>
            <param name="input">The input string.</param>
            <returns>The sanitized result.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.SettingsStorageProvider.EntryTypeToString(ScrewTurn.Wiki.PluginFramework.EntryType)">
            <summary>
            Converts an <see cref="T:EntryType" /> to a string.
            </summary>
            <param name="type">The entry type.</param>
            <returns>The corresponding string.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.SettingsStorageProvider.EntryTypeParse(System.String)">
            <summary>
            Converts an entry type string to an <see cref="T:EntryType" />.
            </summary>
            <param name="value">The string.</param>
            <returns>The <see cref="T:EntryType" />.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.SettingsStorageProvider.LogEntry(System.String,ScrewTurn.Wiki.PluginFramework.EntryType,System.String)">
            <summary>
            Records a message to the System Log.
            </summary>
            <param name="message">The Log Message.</param>
            <param name="entryType">The Type of the Entry.</param>
            <param name="user">The User.</param>
            <remarks>This method <b>should not</b> write messages to the Log using the method IHost.LogEntry.
            This method should also never throw exceptions (except for parameter validation).</remarks>
            <exception cref="T:System.ArgumentNullException">If <b>message</b> or <b>user</b> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <b>message</b> or <b>user</b> are empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.SettingsStorageProvider.CutLog(System.Int32)">
            <summary>
            Reduces the size of the Log to the specified size (or less).
            </summary>
            <param name="size">The size to shrink the log to (in bytes).</param>
        </member>
        <member name="M:ScrewTurn.Wiki.SettingsStorageProvider.GetLogEntries">
            <summary>
            Gets all the Log Entries, sorted by date/time (oldest to newest).
            </summary>
            <remarks>The Log Entries.</remarks>
        </member>
        <member name="M:ScrewTurn.Wiki.SettingsStorageProvider.ClearLog">
            <summary>
            Clear the Log.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.SettingsStorageProvider.GetFullPathForMetaDataItem(System.String,System.String)">
            <summary>
            Builds the full path for a meta-data item file.
            </summary>
            <param name="tag">The tag that specifies the context.</param>
            <param name="file">The file.</param>
            <returns>The full path.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.SettingsStorageProvider.GetMetaDataItem(ScrewTurn.Wiki.PluginFramework.MetaDataItem,System.String)">
            <summary>
            Gets a meta-data item's content.
            </summary>
            <param name="item">The item.</param>
            <param name="tag">The tag that specifies the context (usually the namespace).</param>
            <returns>The content.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.SettingsStorageProvider.SetMetaDataItem(ScrewTurn.Wiki.PluginFramework.MetaDataItem,System.String,System.String)">
            <summary>
            Sets a meta-data items' content.
            </summary>
            <param name="item">The item.</param>
            <param name="tag">The tag that specifies the context (usually the namespace).</param>
            <param name="content">The content.</param>
            <returns><c>true</c> if the content is set, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.SettingsStorageProvider.GetChange(System.String)">
            <summary>
            Gets the change from a string.
            </summary>
            <param name="change">The string.</param>
            <returns>The change.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.SettingsStorageProvider.GetChangeString(ScrewTurn.Wiki.PluginFramework.Change)">
            <summary>
            Gets the change string for a change.
            </summary>
            <param name="change">The change.</param>
            <returns>The change string.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.SettingsStorageProvider.GetRecentChanges">
            <summary>
            Gets the recent changes of the Wiki.
            </summary>
            <returns>The recent Changes (oldest to newest).</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.SettingsStorageProvider.AddRecentChange(System.String,System.String,System.String,System.DateTime,System.String,ScrewTurn.Wiki.PluginFramework.Change,System.String)">
            <summary>
            Adds a new change.
            </summary>
            <param name="page">The page name.</param>
            <param name="title">The page title.</param>
            <param name="messageSubject">The message subject (or <c>null</c>).</param>
            <param name="dateTime">The date/time.</param>
            <param name="user">The user.</param>
            <param name="change">The change.</param>
            <param name="descr">The description (optional).</param>
            <returns><c>true</c> if the change is saved, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>page</b>, <b>title</b> or <b>user</b> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <b>page</b>, <b>title</b> or <b>user</b> are empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.SettingsStorageProvider.CutRecentChanges(System.Int32)">
            <summary>
            Reduces the size of the recent changes file to the specified size, deleting old entries.
            </summary>
            <param name="size">The new Size.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.SettingsStorageProvider.ListPluginAssemblies">
            <summary>
            Lists the stored plugin assemblies.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ScrewTurn.Wiki.SettingsStorageProvider.StorePluginAssembly(System.String,System.Byte[])">
            <summary>
            Stores a plugin's assembly, overwriting existing ones if present.
            </summary>
            <param name="filename">The file name of the assembly, such as "Assembly.dll".</param>
            <param name="assembly">The assembly content.</param>
            <returns><c>true</c> if the assembly is stored, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>filename</b> or <b>assembly</b> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <b>filename</b> or <b>assembly</b> are empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.SettingsStorageProvider.RetrievePluginAssembly(System.String)">
            <summary>
            Retrieves a plugin's assembly.
            </summary>
            <param name="filename">The file name of the assembly.</param>
            <returns>The assembly content, or <c>null</c>.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>filename</b> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <b>filename</b> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.SettingsStorageProvider.DeletePluginAssembly(System.String)">
            <summary>
            Removes a plugin's assembly.
            </summary>
            <param name="filename">The file name of the assembly to remove, such as "Assembly.dll".</param>
            <returns><c>true</c> if the assembly is removed, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>filename</b> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <b>filename</b> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.SettingsStorageProvider.SetPluginStatus(System.String,System.Boolean)">
            <summary>
            Sets the status of a plugin.
            </summary>
            <param name="typeName">The Type name of the plugin.</param>
            <param name="enabled">The plugin status.</param>
            <returns><c>true</c> if the status is stored, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>typeName</b> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <b>typeName</b> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.SettingsStorageProvider.GetPluginStatus(System.String)">
            <summary>
            Gets the status of a plugin.
            </summary>
            <param name="typeName">The Type name of the plugin.</param>
            <returns>The status (<c>true</c> for enabled, <c>false</c> for disabled), or <c>true</c> if no status is found.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>typeName</b> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <b>typeName</b> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.SettingsStorageProvider.SetPluginConfiguration(System.String,System.String)">
            <summary>
            Sets the configuration of a plugin.
            </summary>
            <param name="typeName">The Type name of the plugin.</param>
            <param name="config">The configuration.</param>
            <returns><c>true</c> if the configuration is stored, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>typeName</b> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <b>typeName</b> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.SettingsStorageProvider.GetPluginConfiguration(System.String)">
            <summary>
            Gets the configuration of a plugin.
            </summary>
            <param name="typeName">The Type name of the plugin.</param>
            <returns>The plugin configuration, or <b>String.Empty</b>.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>typeName</b> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <b>typeName</b> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.SettingsStorageProvider.StoreOutgoingLinks(System.String,System.String[])">
            <summary>
            Stores the outgoing links of a page, overwriting existing data.
            </summary>
            <param name="page">The full name of the page.</param>
            <param name="outgoingLinks">The full names of the pages that <b>page</b> links to.</param>
            <returns><c>true</c> if the outgoing links are stored, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>page</b> or <b>outgoingLinks</b> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <b>page</b> or <b>outgoingLinks</b> are empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.SettingsStorageProvider.GetOutgoingLinks(System.String)">
            <summary>
            Gets the outgoing links of a page.
            </summary>
            <param name="page">The full name of the page.</param>
            <returns>The outgoing links.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>page</b> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <b>page</b> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.SettingsStorageProvider.GetAllOutgoingLinks">
            <summary>
            Gets all the outgoing links stored.
            </summary>
            <returns>The outgoing links, in a dictionary in the form page->outgoing_links.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.SettingsStorageProvider.DeleteOutgoingLinks(System.String)">
            <summary>
            Deletes the outgoing links of a page and all the target links that include the page.
            </summary>
            <param name="page">The full name of the page.</param>
            <returns><c>true</c> if the links are deleted, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>page</b> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <b>page</b> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.SettingsStorageProvider.UpdateOutgoingLinksForRename(System.String,System.String)">
            <summary>
            Updates all outgoing links data for a page rename.
            </summary>
            <param name="oldName">The old page name.</param>
            <param name="newName">The new page name.</param>
            <returns><c>true</c> if the data is updated, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>oldName</b> or <b>newName</b> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <b>oldName</b> or <b>newName</b> are empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.SettingsStorageProvider.IsFirstApplicationStart">
            <summary>
            Determines whether the application was started for the first time.
            </summary>
            <returns><c>true</c> if the application was started for the first time, <c>false</c> otherwise.</returns>
        </member>
        <member name="P:ScrewTurn.Wiki.SettingsStorageProvider.Information">
            <summary>
            Gets the Information about the Provider.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.SettingsStorageProvider.ConfigHelpHtml">
            <summary>
            Gets a brief summary of the configuration string format, in HTML. Returns <c>null</c> if no configuration is needed.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.SettingsStorageProvider.LogSize">
            <summary>
            Gets the current size of the Log, in KB.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.SettingsStorageProvider.AclManager">
            <summary>
            Gets the ACL Manager instance.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.ProviderLoader">
            <summary>
            Loads providers from assemblies.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.ProviderLoader.VerifyConstraints``1(``0)">
            <summary>
            Verifies the read-only/read-write constraints of providers.
            </summary>
            <typeparam name="T">The type of the provider.</typeparam>
            <param name="provider">The provider.</param>
            <exception cref="T:ProviderConstraintException">Thrown when a constraint is not fulfilled.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.ProviderLoader.Initialize``1(``0,ScrewTurn.Wiki.ProviderCollector{``0},ScrewTurn.Wiki.ProviderCollector{``0})">
            <summary>
            Tries to inizialize a provider.
            </summary>
            <typeparam name="T">The type of the provider, which must implement <b>IProvider</b>.</typeparam>
            <param name="instance">The provider instance to initialize.</param>
            <param name="collectorEnabled">The collector for enabled providers.</param>
            <param name="collectorDisabled">The collector for disabled providers.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.ProviderLoader.FullLoad(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Loads all the Providers and initialises them.
            </summary>
            <param name="loadUsers">A value indicating whether to load users storage providers.</param>
            <param name="loadPages">A value indicating whether to load pages storage providers.</param>
            <param name="loadFiles">A value indicating whether to load files storage providers.</param>
            <param name="loadFormatters">A value indicating whether to load formatter providers.</param>
            <param name="loadCache">A value indicating whether to load cache providers.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.ProviderLoader.LoadConfiguration(System.String)">
            <summary>
            Loads the Configuration data of a Provider.
            </summary>
            <param name="typeName">The Type Name of the Provider.</param>
            <returns>The Configuration, if available, otherwise an empty string.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.ProviderLoader.SaveConfiguration(System.String,System.String)">
            <summary>
            Saves the Configuration data of a Provider.
            </summary>
            <param name="typeName">The Type Name of the Provider.</param>
            <param name="config">The Configuration data to save.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.ProviderLoader.SaveStatus(System.String,System.Boolean)">
            <summary>
            Saves the Status of a Provider.
            </summary>
            <param name="typeName">The Type Name of the Provider.</param>
            <param name="enabled">A value specifying whether or not the Provider is enabled.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.ProviderLoader.IsDisabled(System.String)">
            <summary>
            Returns a value specifying whether or not a Provider is disabled.
            </summary>
            <param name="typeName">The Type Name of the Provider.</param>
            <returns>True if the Provider is disabled.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.ProviderLoader.LoadFromAuto(System.String)">
            <summary>
            Loads Providers from an assembly.
            </summary>
            <param name="assembly">The path of the Assembly to load the Providers from.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.ProviderLoader.LoadFrom(System.String,ScrewTurn.Wiki.PluginFramework.IUsersStorageProviderV30[]@,ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV30[]@,ScrewTurn.Wiki.PluginFramework.IFilesStorageProviderV30[]@,ScrewTurn.Wiki.PluginFramework.IFormatterProviderV30[]@,ScrewTurn.Wiki.PluginFramework.ICacheProviderV30[]@)">
            <summary>
            Loads Providers from an assembly.
            </summary>
            <param name="assembly">The path of the Assembly to load the Providers from.</param>
            <param name="users">The Users Providers.</param>
            <param name="files">The Files Providers.</param>
            <param name="pages">The Pages Providers.</param>
            <param name="formatters">The Formatter Providers.</param>
            <param name="cache">The Cache Providers.</param>
            <remarks>The Components returned are <b>not</b> initialized.</remarks>
        </member>
        <member name="M:ScrewTurn.Wiki.ProviderLoader.CreateInstance``1(System.Reflection.Assembly,System.Type)">
            <summary>
            Creates an instance of a type implementing a provider interface.
            </summary>
            <typeparam name="T">The provider interface type.</typeparam>
            <param name="asm">The assembly that contains the type.</param>
            <param name="type">The type to create an instance of.</param>
            <returns>The instance, or <c>null</c>.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.ProviderLoader.LoadAssemblyFromDisk(System.String)">
            <summary>
            Loads the content of an assembly from disk.
            </summary>
            <param name="assembly">The assembly file full path.</param>
            <returns>The content of the assembly, in a byte array form.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.ProviderLoader.LoadAssemblyFromProvider(System.String)">
            <summary>
            Loads the content of an assembly from the settings provider.
            </summary>
            <param name="assemblyName">The name of the assembly, such as "Assembly.dll".</param>
            <returns>The content fo the assembly.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.ProviderLoader.LoadSettingsStorageProvider(System.String)">
            <summary>
            Loads the proper Setting Storage Provider, given its name.
            </summary>
            <param name="name">The fully qualified name (such as "Namespace.ProviderClass, MyAssembly"), or <c>null</c>/<b>String.Empty</b>/"<b>default</b>" for the default provider.</param>
            <returns>The settings storage provider.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.ProviderLoader.LoadAllSettingsStorageProviders(ScrewTurn.Wiki.PluginFramework.ISettingsStorageProviderV30)">
            <summary>
            Loads all settings storage providers available in all DLLs stored in a provider.
            </summary>
            <param name="repository">The input provider.</param>
            <returns>The providers found (not initialized).</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.ProviderLoader.TryChangeConfiguration(System.String,System.String,System.String@)">
            <summary>
            Tries to change a provider's configuration.
            </summary>
            <param name="typeName">The provider.</param>
            <param name="configuration">The new configuration.</param>
            <param name="error">The error message, if any.</param>
            <returns><c>true</c> if the configuration is saved, <c>false</c> if the provider rejected it.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.ProviderLoader.DisableProvider(System.String)">
            <summary>
            Disables a provider.
            </summary>
            <param name="typeName">The provider to disable.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.ProviderLoader.EnableProvider(System.String)">
            <summary>
            Enables a provider.
            </summary>
            <param name="typeName">The provider to enable.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.ProviderLoader.UnloadProvider(System.String)">
            <summary>
            Unloads a provider from memory.
            </summary>
            <param name="typeName">The provider to unload.</param>
        </member>
        <member name="T:ScrewTurn.Wiki.ProviderConstraintException">
            <summary>
            Defines an exception thrown when a constraint is not fulfilled by a provider.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.ProviderConstraintException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ProviderConstraintException" /> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="T:ScrewTurn.Wiki.Defaults">
            <summary>
            Contains default values.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Defaults.MainPageContent">
            <summary>
            The default content of the main page.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Defaults.MainPageContentForSubNamespace">
            <summary>
            The default content of the main page of a sub-namespace.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Defaults.AccountActivationMessageContent">
            <summary>
            The default content of the account activation message.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Defaults.EditNoticeContent">
            <summary>
            The default content of the edit notice.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Defaults.FooterContent">
            <summary>
            The default content of the footer.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Defaults.HeaderContent">
            <summary>
            The default content of the header.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Defaults.PasswordResetProcedureMessageContent">
            <summary>
            The default content of the password reset message.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Defaults.SidebarContent">
            <summary>
            The default content of the sidebar.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Defaults.SidebarContentForSubNamespace">
            <summary>
            The default content of the sidebar of a sub-namespace.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Defaults.PageChangeMessage">
            <summary>
            The default content of the page change email message.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Defaults.DiscussionChangeMessage">
            <summary>
            The default content of the discussion change email message.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Defaults.ApproveDraftMessage">
            <summary>
            The default content of the approve draft email message.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.Templates">
            <summary>
            Manages content templates.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.Templates.GetTemplates">
            <summary>
            Gets all the content templates.
            </summary>
            <returns>The content templates, sorted by name.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Templates.Find(System.String)">
            <summary>
            Finds a content template.
            </summary>
            <param name="name">The name of the template to find.</param>
            <returns>The content template, or <c>null</c>.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Templates.AddTemplate(System.String,System.String,ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV30)">
            <summary>
            Adds a new content template.
            </summary>
            <param name="name">The name of the template.</param>
            <param name="content">The content of the template.</param>
            <param name="provider">The target provider (<c>null</c> for the default provider).</param>
            <returns><c>true</c> if the template is added, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Templates.RemoveTemplate(ScrewTurn.Wiki.PluginFramework.ContentTemplate)">
            <summary>
            Removes a content template.
            </summary>
            <param name="template">The template to remove.</param>
            <returns><c>true</c> if the template is removed, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Templates.ModifyTemplate(ScrewTurn.Wiki.PluginFramework.ContentTemplate,System.String)">
            <summary>
            Modifies a content template.
            </summary>
            <param name="template">The template to modify.</param>
            <param name="content">The new content of the template.</param>
            <returns><c>true</c> if the template is modified, <c>false</c> otherwise.</returns>
        </member>
        <member name="T:ScrewTurn.Wiki.SubjectInfo">
            <summary>
            Describes the subject of an ACL entry.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.SubjectInfo.#ctor(System.String,ScrewTurn.Wiki.SubjectType)">
            <summary>
            Initializes a new instance of the <see cref="T:SubjectInfo" /> class.
            </summary>
            <param name="name">The name.</param>
            <param name="type">The type.</param>
        </member>
        <member name="P:ScrewTurn.Wiki.SubjectInfo.Name">
            <summary>
            Gets the name.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.SubjectInfo.Type">
            <summary>
            Gets the type.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.SubjectType">
            <summary>
            Lists legal values for the type of a subject.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.SubjectType.User">
            <summary>
            A user.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.SubjectType.Group">
            <summary>
            A group.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.RecentChanges">
            <summary>
            Manages the Wiki's Recent Changes.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.RecentChanges.GetAllChanges">
            <summary>
            Gets all the changes, sorted by date/time ascending.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.RecentChanges.AddChange(System.String,System.String,System.String,System.DateTime,System.String,ScrewTurn.Wiki.PluginFramework.Change,System.String)">
            <summary>
            Adds a new change.
            </summary>
            <param name="page">The page name.</param>
            <param name="title">The page title.</param>
            <param name="messageSubject">The message subject.</param>
            <param name="dateTime">The date/time.</param>
            <param name="user">The user.</param>
            <param name="change">The change.</param>
            <param name="descr">The description (optional).</param>
        </member>
        <member name="T:ScrewTurn.Wiki.AuthStatus">
            <summary>
            Lists legal values for authorizations.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.AuthStatus.Grant">
            <summary>
            Grant the action.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.AuthStatus.Deny">
            <summary>
            Deny the action.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.AuthStatus.Delete">
            <summary>
            Delete the permission entry.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.AclStorer">
            <summary>
            Implements a file-based ACL Storer.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.AclStorer.#ctor(ScrewTurn.Wiki.AclEngine.IAclManager,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:AclStorer" /> class.
            </summary>
            <param name="aclManager">The instance of the ACL Manager to handle.</param>
            <param name="file">The storage file.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.AclStorer.LoadDataInternal">
            <summary>
            Loads data from storage.
            </summary>
            <returns>The loaded ACL entries.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AclStorer.DumpAclEntry(ScrewTurn.Wiki.AclEngine.AclEntry)">
            <summary>
            Dumps a <see cref="T:AclEntry" /> into a string.
            </summary>
            <param name="entry">The entry to dump.</param>
            <returns>The resulting string.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AclStorer.DeleteEntries(ScrewTurn.Wiki.AclEngine.AclEntry[])">
            <summary>
            Deletes some entries.
            </summary>
            <param name="entries">The entries to delete.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.AclStorer.StoreEntries(ScrewTurn.Wiki.AclEngine.AclEntry[])">
            <summary>
            Stores some entries.
            </summary>
            <param name="entries">The entries to store.</param>
        </member>
        <member name="T:ScrewTurn.Wiki.MimeTypes">
            <summary>
            Contains a list of MIME Types.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.MimeTypes.Init">
            <summary>
            Initializes the list of the MIME Types, with the most common media types.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.MimeTypes.Types">
            <summary>
            Gets the list of the MIME Types.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.SessionFacade">
            <summary>
            Exposes in a strongly-typed fashion the Session variables.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.SessionFacade.AnonymousUsername">
            <summary>
            The username for anonymous users.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.SessionFacade.GetCurrentUser">
            <summary>
            Gets the current user, if any.
            </summary>
            <returns>The current user, or <c>null</c>.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.SessionFacade.GetCurrentUsername">
            <summary>
            Gets the current username for security checks purposes only.
            </summary>
            <returns>The current username, or <b>AnonymousUsername</b> if anonymous.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.SessionFacade.GetCurrentGroups">
            <summary>
            Gets the current user groups.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.SessionFacade.GetCurrentGroupNames">
            <summary>
            Gets the current group names.
            </summary>
            <returns>The group names.</returns>
        </member>
        <member name="P:ScrewTurn.Wiki.SessionFacade.Session">
            <summary>
            Gets the current Session object.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.SessionFacade.LoginKey">
            <summary>
            Gets or sets the Login Key.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.SessionFacade.CurrentUsername">
            <summary>
            Gets or sets the current username, or <c>null</c>.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.SessionFacade.Breadcrumbs">
            <summary>
            Gets the Breadcrumbs Manager.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.SessionCache">
            <summary>
            Implements a session data cache whose lifetime is only limited to one request.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.SessionCache.GetCurrentUser(System.String)">
            <summary>
            Gets the current user, if any, of a session.
            </summary>
            <param name="sessionId">The session ID.</param>
            <returns>The current user, or <c>null</c>.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.SessionCache.SetCurrentUser(System.String,ScrewTurn.Wiki.PluginFramework.UserInfo)">
            <summary>
            Sets the current user of a session.
            </summary>
            <param name="sessionId">The session ID.</param>
            <param name="user">The user.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.SessionCache.GetCurrentGroups(System.String)">
            <summary>
            Gets the current groups, if any, of a session.
            </summary>
            <param name="sessionId">The session ID.</param>
            <returns>The groups, or <b>null.</b></returns>
        </member>
        <member name="M:ScrewTurn.Wiki.SessionCache.SetCurrentGroups(System.String,ScrewTurn.Wiki.PluginFramework.UserGroup[])">
            <summary>
            Sets the current groups of a session.
            </summary>
            <param name="sessionId">The session ID.</param>
            <param name="groups">The groups.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.SessionCache.ClearData(System.String)">
            <summary>
            Clears all cached data of a session.
            </summary>
            <param name="sessionId">The session ID.</param>
        </member>
        <member name="T:ScrewTurn.Wiki.Log">
            <summary>
            Records and retrieves Log Entries.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Log.SystemUsername">
            <summary>
            The system username ('SYSTEM').
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.Log.LogEntry(System.String,ScrewTurn.Wiki.PluginFramework.EntryType,System.String)">
            <summary>
            Writes an Entry in the Log.
            </summary>
            <param name="message">The Message.</param>
            <param name="type">The Type of the Entry.</param>
            <param name="user">The User that generated the Entry.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.Log.ReadEntries">
            <summary>
            Reads all the Log Entries (newest to oldest).
            </summary>
            <returns>The Entries.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Log.ClearLog">
            <summary>
            Clears the Log.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.Preferences">
            <summary>
            Allows access to current user's preferences.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.Preferences.LoadLanguageFromCookie">
            <summary>
            Loads the language from a cookie.
            </summary>
            <returns>The language, or <c>null</c>.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Preferences.LoadLanguageFromUserData">
            <summary>
            Loads the language from the current user's data.
            </summary>
            <returns>The language, or <c>null</c>.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Preferences.LoadTimezoneFromCookie">
            <summary>
            Loads the timezone from a cookie.
            </summary>
            <returns>The timezone, or <c>null</c>.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Preferences.LoadTimezoneFromUserData">
            <summary>
            Loads the timezone from the current user's data.
            </summary>
            <returns>The timezone, or <c>null</c>.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Preferences.SavePreferencesInCookie(System.String,System.Int32)">
            <summary>
            Saves language and timezone preferences into a cookie.
            </summary>
            <param name="culture">The culture.</param>
            <param name="timezone">The timezone.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.Preferences.DeletePreferencesCookie">
            <summary>
            Deletes the language and timezone preferences cookie.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.Preferences.SavePreferencesInUserData(System.String,System.Int32)">
            <summary>
            Saves language and timezone preferences into the current user's data.
            </summary>
            <param name="culture">The culture.</param>
            <param name="timezone">The timezone.</param>
            <returns><c>true</c> if the data is stored, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Preferences.AlignWithTimezone(System.DateTime)">
            <summary>
            Aligns a date/time with the User's preferences (if any).
            </summary>
            <param name="dateTime">The date/time to align.</param>
            <returns>The aligned date/time.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Preferences.AlignWithServerTimezone(System.DateTime)">
            <summary>
            Aligns a date/time with the default timezone.
            </summary>
            <param name="dateTime">The date/time to align.</param>
            <returns>The aligned date/time.</returns>
        </member>
        <member name="T:ScrewTurn.Wiki.UsersStorageProvider">
            <summary>
            Implements a Users Storage Provider.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.UsersStorageProvider.Init(ScrewTurn.Wiki.PluginFramework.IHostV30,System.String)">
            <summary>
            Initializes the Provider.
            </summary>
            <param name="host">The Host of the Provider.</param>
            <param name="config">The Configuration data, if any.</param>
            <exception cref="T:System.ArgumentNullException">If <b>host</b> or <b>config</b> are <c>null</c>.</exception>
            <exception cref="T:ScrewTurn.Wiki.PluginFramework.InvalidConfigurationException">If <b>config</b> is not valid or is incorrect.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.UsersStorageProvider.VerifyAndPerformUpgrade">
            <summary>
            Verifies the need for a data upgrade, and performs it when needed.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.UsersStorageProvider.Shutdown">
            <summary>
            Method invoked on shutdown.
            </summary>
            <remarks>This method might not be invoked in some cases.</remarks>
        </member>
        <member name="M:ScrewTurn.Wiki.UsersStorageProvider.TestAccount(ScrewTurn.Wiki.PluginFramework.UserInfo,System.String)">
            <summary>
            Tests a Password for a User account.
            </summary>
            <param name="user">The User account.</param>
            <param name="password">The Password to test.</param>
            <returns>True if the Password is correct.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>user</b> or <b>password</b> are <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.UsersStorageProvider.GetUsers">
            <summary>
            Gets the complete list of Users.
            </summary>
            <returns>All the Users, sorted by username.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.UsersStorageProvider.GetGroupsForUser(System.String,ScrewTurn.Wiki.PluginFramework.UserGroup[])">
            <summary>
            Gets the names of all the groups a user is member of.
            </summary>
            <param name="user">The username.</param>
            <param name="groups">The groups.</param>
            <returns>The names of the groups the user is member of.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.UsersStorageProvider.LoadLocalInstance(ScrewTurn.Wiki.PluginFramework.UserInfo)">
            <summary>
            Loads a proper local instance of a user account.
            </summary>
            <param name="user">The user account.</param>
            <returns>The local instance, or <c>null</c>.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.UsersStorageProvider.UserExists(ScrewTurn.Wiki.PluginFramework.UserInfo)">
            <summary>
            Searches for a User.
            </summary>
            <param name="user">The User to search for.</param>
            <returns>True if the User already exists.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.UsersStorageProvider.AddUser(System.String,System.String,System.String,System.String,System.Boolean,System.DateTime)">
            <summary>
            Adds a new User.
            </summary>
            <param name="username">The Username.</param>
            <param name="displayName">The display name (can be <c>null</c>).</param>
            <param name="password">The Password.</param>
            <param name="email">The Email address.</param>
            <param name="active">A value specifying whether or not the account is active.</param>
            <param name="dateTime">The Account creation Date/Time.</param>
            <returns>The correct <see cref="T:UserInfo"/> object or <c>null</c>.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>username</b>, <b>password</b> or <b>email</b> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <b>username</b>, <b>password</b> or <b>email</b> are empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.UsersStorageProvider.ModifyUser(ScrewTurn.Wiki.PluginFramework.UserInfo,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Modifies a User.
            </summary>
            <param name="user">The Username of the user to modify.</param>
            <param name="newDisplayName">The new display name (can be <c>null</c>).</param>
            <param name="newPassword">The new Password (<c>null</c> or blank to keep the current password).</param>
            <param name="newEmail">The new Email address.</param>
            <param name="newActive">A value indicating whether the account is active.</param>
            <returns>The correct <see cref="T:UserInfo"/> object or <c>null</c>.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>user</b> or <b>newEmail</b> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <b>newEmail</b> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.UsersStorageProvider.RemoveUser(ScrewTurn.Wiki.PluginFramework.UserInfo)">
            <summary>
            Removes a User.
            </summary>
            <param name="user">The User to remove.</param>
            <returns>True if the User has been removed successfully.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>user</b> is <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.UsersStorageProvider.DumpUsers(ScrewTurn.Wiki.PluginFramework.UserInfo[])">
            <summary>
            Writes on disk all the Users.
            </summary>
            <param name="users">The User list.</param>
            <remarks>This method does not lock resources, therefore a lock is need in the caller.</remarks>
        </member>
        <member name="M:ScrewTurn.Wiki.UsersStorageProvider.FindGroup(System.String)">
            <summary>
            Finds a user group.
            </summary>
            <param name="name">The name of the group to find.</param>
            <returns>The <see cref="T:UserGroup" /> or <c>null</c> if no data is found.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.UsersStorageProvider.GetUserGroups">
            <summary>
            Gets all the user groups.
            </summary>
            <returns>All the groups, sorted by name.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.UsersStorageProvider.AddUserGroup(System.String,System.String)">
            <summary>
            Adds a new user group.
            </summary>
            <param name="name">The name of the group.</param>
            <param name="description">The description of the group.</param>
            <returns>The correct <see cref="T:UserGroup"/> object or <c>null</c>.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>name</b> or <b>description</b> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <b>name</b> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.UsersStorageProvider.DumpUserGroups(ScrewTurn.Wiki.PluginFramework.UserGroup[])">
            <summary>
            Dumps user groups on disk.
            </summary>
            <param name="groups">The user groups to dump.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.UsersStorageProvider.ModifyUserGroup(ScrewTurn.Wiki.PluginFramework.UserGroup,System.String)">
            <summary>
            Modifies a user group.
            </summary>
            <param name="group">The group to modify.</param>
            <param name="description">The new description of the group.</param>
            <returns>The correct <see cref="T:UserGroup"/> object or <c>null</c>.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>group</b> or <b>description</b> are <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.UsersStorageProvider.RemoveUserGroup(ScrewTurn.Wiki.PluginFramework.UserGroup)">
            <summary>
            Removes a user group.
            </summary>
            <param name="group">The group to remove.</param>
            <returns><c>true</c> if the group is removed, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>group</b> is <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.UsersStorageProvider.SetUserMembership(ScrewTurn.Wiki.PluginFramework.UserInfo,System.String[])">
            <summary>
            Sets the group memberships of a user account.
            </summary>
            <param name="user">The user account.</param>
            <param name="groups">The groups the user account is member of.</param>
            <returns>The correct <see cref="T:UserGroup"/> object or <c>null</c>.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>user</b> or <b>groups</b> are <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.UsersStorageProvider.IsSelected(ScrewTurn.Wiki.PluginFramework.UserGroup,System.String[])">
            <summary>
            Determines whether a user group is contained in an array of user group names.
            </summary>
            <param name="group">The user group to check.</param>
            <param name="groups">The user group names array.</param>
            <returns><c>true</c> if <b>users</b> contains <b>user.Name</b>, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.UsersStorageProvider.TryManualLogin(System.String,System.String)">
            <summary>
            Tries to login a user directly through the provider.
            </summary>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <returns>The correct UserInfo object, or <c>null</c>.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>username</b> or <b>password</b> are <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.UsersStorageProvider.TryAutoLogin(System.Web.HttpContext)">
            <summary>
            Tries to login a user directly through the provider using
            the current HttpContext and without username/password.
            </summary>
            <param name="context">The current HttpContext.</param>
            <returns>The correct UserInfo object, or <c>null</c>.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>context</b> is <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.UsersStorageProvider.GetUser(System.String)">
            <summary>
            Tries to retrieve the information about a user account.
            </summary>
            <param name="username">The username.</param>
            <returns>The correct UserInfo object, or <c>null</c>.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>username</b> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <b>username</b> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.UsersStorageProvider.GetUserByEmail(System.String)">
            <summary>
            Tries to retrieve the information about a user account.
            </summary>
            <param name="email">The email address.</param>
            <returns>The first user found with the specified email address, or <c>null</c>.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>email</b> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <b>email</b> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.UsersStorageProvider.NotifyCookieLogin(ScrewTurn.Wiki.PluginFramework.UserInfo)">
            <summary>
            Notifies the provider that a user has logged in through the authentication cookie.
            </summary>
            <param name="user">The user who has logged in.</param>
            <exception cref="T:System.ArgumentNullException">If <b>user</b> is <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.UsersStorageProvider.NotifyLogout(ScrewTurn.Wiki.PluginFramework.UserInfo)">
            <summary>
            Notifies the provider that a user has logged out.
            </summary>
            <param name="user">The user who has logged out.</param>
            <exception cref="T:System.ArgumentNullException">If <b>user</b> is <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.UsersStorageProvider.StoreUserData(ScrewTurn.Wiki.PluginFramework.UserInfo,System.String,System.String)">
            <summary>
            Stores a user data element, overwriting the previous one if present.
            </summary>
            <param name="user">The user the data belongs to.</param>
            <param name="key">The key of the data element (case insensitive).</param>
            <param name="value">The value of the data element, <c>null</c> for deleting the data.</param>
            <returns><c>true</c> if the data element is stored, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>user</b> or <b>key</b> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <b>key</b> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.UsersStorageProvider.RetrieveUserData(ScrewTurn.Wiki.PluginFramework.UserInfo,System.String)">
            <summary>
            Gets a user data element, if any.
            </summary>
            <param name="user">The user the data belongs to.</param>
            <param name="key">The key of the data element.</param>
            <returns>The value of the data element, or <c>null</c> if the element is not found.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>user</b> or <b>key</b> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <b>key</b> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.UsersStorageProvider.RetrieveAllUserData(ScrewTurn.Wiki.PluginFramework.UserInfo)">
            <summary>
            Retrieves all the user data elements for a user.
            </summary>
            <param name="user">The user.</param>
            <returns>The user data elements (key-&gt;value).</returns>
            <exception cref="T:System.ArgumentNullException">If <b>user</b> is <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.UsersStorageProvider.GetUsersWithData(System.String)">
            <summary>
            Gets all the users that have the specified element in their data.
            </summary>
            <param name="key">The key of the data.</param>
            <returns>The users and the data.</returns>
            <exception cref="T:System.ArgumentNullException">If <b>key</b> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <b>key</b> is empty.</exception>
        </member>
        <member name="P:ScrewTurn.Wiki.UsersStorageProvider.Information">
            <summary>
            Gets the Information about the Provider.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.UsersStorageProvider.ConfigHelpHtml">
            <summary>
            Gets a brief summary of the configuration string format, in HTML. Returns <c>null</c> if no configuration is needed.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.UsersStorageProvider.UserAccountsReadOnly">
            <summary>
            Gets a value indicating whether user accounts are read-only.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.UsersStorageProvider.UserGroupsReadOnly">
            <summary>
            Gets a value indicating whether user groups are read-only. If so, the provider 
            should support default user groups as defined in the wiki configuration.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.UsersStorageProvider.GroupMembershipReadOnly">
            <summary>
            Gets a value indicating whether group membership is read-only (if <see cref="P:ScrewTurn.Wiki.UsersStorageProvider.UserAccountsReadOnly"/> 
            is <c>false</c>, then this property must be <c>false</c>). If this property is <c>true</c>, the provider 
            should return membership data compatible with default user groups.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.UsersStorageProvider.UsersDataReadOnly">
            <summary>
            Gets a value indicating whether users' data is read-only.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.ImportWiki.Translator">
            <summary>
            Implements a translator tool for importing MediaWiki data.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.ImportWiki.Translator.Translate(System.String)">
            <summary>
            Executes the translation.
            </summary>
            <param name="input">The input content.</param>
            <returns>The WikiMarkup.</returns>
        </member>
        <member name="T:ScrewTurn.Wiki.DataMigrator">
            <summary>
            Provides methods for migrating data from a Provider to another.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.DataMigrator.MigratePagesStorageProviderData(ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV30,ScrewTurn.Wiki.PluginFramework.IPagesStorageProviderV30)">
            <summary>
            Migrates <b>all</b> the data from a Pages Provider to another one.
            </summary>
            <param name="source">The source Provider.</param>
            <param name="destination">The destination Provider.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.DataMigrator.MigrateUsersStorageProviderData(ScrewTurn.Wiki.PluginFramework.IUsersStorageProviderV30,ScrewTurn.Wiki.PluginFramework.IUsersStorageProviderV30,System.Boolean)">
            <summary>
            Migrates all the User Accounts from a Provider to another.
            </summary>
            <param name="source">The source Provider.</param>
            <param name="destination">The destination Provider.</param>
            <param name="sendEmailNotification">A value indicating whether or not to send a notification email message to the moved users.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.DataMigrator.MigrateFilesStorageProviderData(ScrewTurn.Wiki.PluginFramework.IFilesStorageProviderV30,ScrewTurn.Wiki.PluginFramework.IFilesStorageProviderV30,ScrewTurn.Wiki.PluginFramework.ISettingsStorageProviderV30)">
            <summary>
            Migrates all the stored files and page attachments from a Provider to another.
            </summary>
            <param name="source">The source Provider.</param>
            <param name="destination">The destination Provider.</param>
            <param name="settingsProvider">The settings storage provider that handles permissions.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.DataMigrator.CopySettingsStorageProviderData(ScrewTurn.Wiki.PluginFramework.ISettingsStorageProviderV30,ScrewTurn.Wiki.PluginFramework.ISettingsStorageProviderV30,System.String[],System.String[])">
            <summary>
            Copies the settings from a Provider to another.
            </summary>
            <param name="source">The source Provider.</param>
            <param name="destination">The destination Provider.</param>
            <param name="knownNamespaces">The currently known page namespaces.</param>
            <param name="knownPlugins">The currently known plugins.</param>
        </member>
        <member name="T:ScrewTurn.Wiki.MovedUser">
            <summary>
            Contains username, email and registration date/time of a moved User account.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.MovedUser.#ctor(System.String,System.String,System.DateTime)">
            <summary>
            Initializes a new instance of the <b>MovedUser</b> class.
            </summary>
            <param name="username">The esername.</param>
            <param name="email">The email address.</param>
            <param name="dateTime">The registration date/time.</param>
        </member>
        <member name="P:ScrewTurn.Wiki.MovedUser.Username">
            <summary>
            Gets the Username.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.MovedUser.Email">
            <summary>
            Gets the Email.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.MovedUser.DateTime">
            <summary>
            Gets the registration date/time.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.AuthTools">
            <summary>
            Implements tools supporting athorization management.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthTools.IsValidAction(System.String,System.String[])">
            <summary>
            Determines whether an action is valid.
            </summary>
            <param name="action">The action to validate.</param>
            <param name="validActions">The list of valid actions.</param>
            <returns><c>true</c> if the action is valid, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthTools.IsGroup(System.String)">
            <summary>
            Determines whether a subject is a group.
            </summary>
            <param name="subject">The subject to test.</param>
            <returns><c>true</c> if the subject is a group, <c>false</c> if it is a user.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthTools.PrepareUsername(System.String)">
            <summary>
            Prepends the proper string to a username.
            </summary>
            <param name="username">The username.</param>
            <returns>The resulting username.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthTools.PrepareGroups(System.String[])">
            <summary>
            Prepends the proper string to each group name in an array.
            </summary>
            <param name="groups">The group array.</param>
            <returns>The resulting group array.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthTools.PrepareGroup(System.String)">
            <summary>
            Prepends the proper string to the group name.
            </summary>
            <param name="group">The group name.</param>
            <returns>The result string.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AuthTools.GetDirectoryName(ScrewTurn.Wiki.PluginFramework.IFilesStorageProviderV30,System.String)">
            <summary>
            Gets the proper full name for a directory.
            </summary>
            <param name="prov">The provider.</param>
            <param name="name">The directory name.</param>
            <returns>The full name (<b>not</b> prepended with <see cref="F:ScrewTurn.Wiki.Actions.ForDirectories.ResourceMasterPrefix"/>.</returns>
        </member>
        <member name="T:ScrewTurn.Wiki.Users">
            <summary>
            Manages all the User Accounts data.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Users.PageChangesKey">
            <summary>
            The user data key pointing to page changes notification entries.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Users.DiscussionMessagesKey">
            <summary>
            The user data key pointing to discussion messages notification entries.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Users.NamespacePageChangesKey">
            <summary>
            The user data key pointing to page changes notification entries for whole namespace.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Users.NamespaceDiscussionMessagesKey">
            <summary>
            The user data key pointing to discussion messages notification entries for whole namespaces.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.Users.GetAdministratorAccount">
            <summary>
            Gets the built-in administrator account.
            </summary>
            <returns>The account.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Users.GetAnonymousAccount">
            <summary>
            Gets the fake anonymous account.
            </summary>
            <returns>The account.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Users.GetUsers">
            <summary>
            Gets all the Users that the providers declare to manage.
            </summary>
            <returns>The users, sorted by username.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Users.FindUser(System.String)">
            <summary>
            Finds a user.
            </summary>
            <param name="username">The username.</param>
            <returns>The user, or <c>null</c>.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Users.FindUserByEmail(System.String)">
            <summary>
            Finds a user by email.
            </summary>
            <param name="email">The email address.</param>
            <returns>The user, or <c>null</c>.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Users.GetUserData(ScrewTurn.Wiki.PluginFramework.UserInfo,System.String)">
            <summary>
            Gets user data.
            </summary>
            <param name="user">The user.</param>
            <param name="key">The data key.</param>
            <returns>The data, or <c>null</c> if either the user or the key is not found.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Users.SetUserData(ScrewTurn.Wiki.PluginFramework.UserInfo,System.String,System.String)">
            <summary>
            Sets user data.
            </summary>
            <param name="user">The user.</param>
            <param name="key">The data key.</param>
            <param name="data">The data value.</param>
            <returns><c>true</c> if the data is stored, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Users.AddUser(System.String,System.String,System.String,System.String,System.Boolean,ScrewTurn.Wiki.PluginFramework.IUsersStorageProviderV30)">
            <summary>
            Adds a new User.
            </summary>
            <param name="username">The Username.</param>
            <param name="displayName">The display name.</param>
            <param name="password">The Password (plain text).</param>
            <param name="email">The Email address.</param>
            <param name="active">A value specifying whether or not the account is active.</param>
            <param name="provider">The Provider. If null, the default provider is used.</param>
            <returns>True if the User has been created successfully.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Users.ModifyUser(ScrewTurn.Wiki.PluginFramework.UserInfo,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Updates a new User.
            </summary>
            <param name="user">The user to modify.</param>
            <param name="displayName">The display name.</param>
            <param name="password">The Password (plain text, <c>null</c> or empty for no change).</param>
            <param name="email">The Email address.</param>
            <param name="active">A value specifying whether or not the account is active.</param>
            <returns>True if the User has been created successfully.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Users.RemoveUser(ScrewTurn.Wiki.PluginFramework.UserInfo)">
            <summary>
            Removes a User.
            </summary>
            <param name="user">The User to remove.</param>
            <returns>True if the User has been removed successfully.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Users.ListDirectories(ScrewTurn.Wiki.PluginFramework.IFilesStorageProviderV30)">
            <summary>
            Lists all directories in a provider, including the root.
            </summary>
            <param name="provider">The provider.</param>
            <returns>The directories.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Users.RemovePermissions(ScrewTurn.Wiki.PluginFramework.UserInfo)">
            <summary>
            Removes all permissions for a user.
            </summary>
            <param name="user">The user.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.Users.RemovePermissions(ScrewTurn.Wiki.PluginFramework.UserGroup)">
            <summary>
            Removes all permissions for a group.
            </summary>
            <param name="group">The group.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.Users.ChangePassword(ScrewTurn.Wiki.PluginFramework.UserInfo,System.String)">
            <summary>
            Changes the Password of a User.
            </summary>
            <param name="user">The User to change the password of.</param>
            <param name="newPassword">The new Password (plain text).</param>
            <returns><c>true</c> if the Password has been changed successfully, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Users.SendPasswordResetMessage(System.String,System.String,System.DateTime)">
            <summary>
            Sends the password reset message to a user.
            </summary>
            <param name="username">The username.</param>
            <param name="email">The email.</param>
            <param name="dateTime">The user registration date/time.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.Users.ChangeEmail(ScrewTurn.Wiki.PluginFramework.UserInfo,System.String)">
            <summary>
            Changes the Email address of a User.
            </summary>
            <param name="user">The User to change the Email address of.</param>
            <param name="newEmail">The new Email address.</param>
            <returns><c>true</c> if the Email address has been changed successfully, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Users.SetActivationStatus(ScrewTurn.Wiki.PluginFramework.UserInfo,System.Boolean)">
            <summary>
            Sets the Active/Inactive status of a User.
            </summary>
            <param name="user">The User.</param>
            <param name="active">The status.</param>
            <returns>True if the User's status has been changed successfully.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Users.GetUserGroups">
            <summary>
            Gets all the user groups.
            </summary>
            <returns>All the user groups, sorted by name.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Users.GetUserGroups(ScrewTurn.Wiki.PluginFramework.IUsersStorageProviderV30)">
            <summary>
            Gets all the user groups in a provider.
            </summary>
            <param name="provider">The provider.</param>
            <returns>The user groups, sorted by name.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Users.GetUserGroupsForUser(ScrewTurn.Wiki.PluginFramework.UserInfo)">
            <summary>
            Gets all the user groups a user is member of.
            </summary>
            <param name="user">The user.</param>
            <returns>All the user groups the user is member of, sorted by name.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Users.FindUserGroup(System.String)">
            <summary>
            Finds a user group.
            </summary>
            <param name="name">The name of the user group to find.</param>
            <returns>The <see cref="T:UserGroup" /> object or <c>null</c> if no data is found.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Users.AddUserGroup(System.String,System.String,ScrewTurn.Wiki.PluginFramework.IUsersStorageProviderV30)">
            <summary>
            Adds a new user group to a specific provider.
            </summary>
            <param name="name">The name of the group.</param>
            <param name="description">The description of the group.</param>
            <param name="provider">The target provider.</param>
            <returns><c>true</c> if the groups is added, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Users.AddUserGroup(System.String,System.String)">
            <summary>
            Adds a new user group to the default provider.
            </summary>
            <param name="name">The name of the group.</param>
            <param name="description">The description of the group.</param>
            <returns><c>true</c> if the groups is added, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Users.ModifyUserGroup(ScrewTurn.Wiki.PluginFramework.UserGroup,System.String)">
            <summary>
            Modifies a user group.
            </summary>
            <param name="group">The user group to modify.</param>
            <param name="description">The new description.</param>
            <returns><c>true</c> if the user group is modified, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Users.RemoveUserGroup(ScrewTurn.Wiki.PluginFramework.UserGroup)">
            <summary>
            Removes a user group.
            </summary>
            <param name="group">The user group to remove.</param>
            <returns><c>true</c> if the user group is removed, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Users.SetUserMembership(ScrewTurn.Wiki.PluginFramework.UserInfo,System.String[])">
            <summary>
            Sets the group memberships of a user account.
            </summary>
            <param name="user">The user account.</param>
            <param name="groups">The groups the user account is member of.</param>
            <returns><c>true</c> if the membership is set, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Users.UserLink(System.String)">
            <summary>
            Creates the correct link of a User.
            </summary>
            <param name="username">The Username.</param>
            <returns>The User link.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Users.UserLink(System.String,System.Boolean)">
            <summary>
            Creates the correct link of a User.
            </summary>
            <param name="username">The Username.</param>
            <param name="newWindow">A value indicating whether to open the link in a new window.</param>
            <returns>The User link.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Users.GetDisplayName(ScrewTurn.Wiki.PluginFramework.UserInfo)">
            <summary>
            Gets the display name of a user.
            </summary>
            <param name="user">The user.</param>
            <returns>The display name.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Users.TryAutoLogin(System.Web.HttpContext)">
            <summary>
            Tries to automatically login a user using the current HttpContext,
            through any provider that supports the operation.
            </summary>
            <param name="context">The current HttpContext.</param>
            <returns>The correct UserInfo, or <c>null</c>.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Users.TryLogin(System.String,System.String)">
            <summary>
            Tries to manually login a user using all the available methods.
            </summary>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <returns>The correct UserInfo, or <c>null</c>.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Users.TryCookieLogin(System.String,System.String)">
            <summary>
            Tries to login a user through the cookie-stored authentication data.
            </summary>
            <param name="username">The username.</param>
            <param name="loginKey">The login key.</param>
            <returns>The correct UserInfo object, or <c>null</c>.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Users.NotifyLogout(System.String)">
            <summary>
            Notifies to the proper provider that a user has logged out.
            </summary>
            <param name="username">The username.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.Users.ComputeLoginKey(System.String,System.String,System.DateTime)">
            <summary>
            Copmputes the login key.
            </summary>
            <param name="username">The username.</param>
            <param name="email">The email.</param>
            <param name="dateTime">The registration date/time.</param>
            <returns>The login key.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Users.SetEmailNotification(ScrewTurn.Wiki.PluginFramework.UserInfo,ScrewTurn.Wiki.PluginFramework.PageInfo,System.Boolean,System.Boolean)">
            <summary>
            Sets the email notification status for a page.
            </summary>
            <param name="user">The user for which to set the notification status.</param>
            <param name="page">The page subject of the notification.</param>
            <param name="pageChanges">A value indicating whether page changes should be notified.</param>
            <param name="discussionMessages">A value indicating whether discussion messages should be notified.</param>
            <returns><c>true</c> if the notification is set, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Users.SetEmailNotification(ScrewTurn.Wiki.PluginFramework.UserInfo,ScrewTurn.Wiki.PluginFramework.NamespaceInfo,System.Boolean,System.Boolean)">
            <summary>
            Sets the email notification status for a namespace.
            </summary>
            <param name="user">The user for which to set the notification status.</param>
            <param name="nspace">The namespace subject of the notification.</param>
            <param name="pageChanges">A value indicating whether page changes should be notified.</param>
            <param name="discussionMessages">A value indicating whether discussion messages should be notified.</param>
            <returns><c>true</c> if the notification is set, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Users.GetEmailNotification(ScrewTurn.Wiki.PluginFramework.UserInfo,ScrewTurn.Wiki.PluginFramework.PageInfo,System.Boolean@,System.Boolean@)">
            <summary>
            Gets the email notification status for a page.
            </summary>
            <param name="user">The user for which to get the notification status.</param>
            <param name="page">The page subject of the notification.</param>
            <param name="pageChanges">A value indicating whether page changes should be notified.</param>
            <param name="discussionMessages">A value indicating whether discussion messages should be notified.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.Users.GetEmailNotification(ScrewTurn.Wiki.PluginFramework.UserInfo,ScrewTurn.Wiki.PluginFramework.NamespaceInfo,System.Boolean@,System.Boolean@)">
            <summary>
            Gets the email notification status for a namespace.
            </summary>
            <param name="user">The user for which to get the notification status.</param>
            <param name="nspace">The namespace subject of the notification (<c>null</c> for the root).</param>
            <param name="pageChanges">A value indicating whether page changes should be notified.</param>
            <param name="discussionMessages">A value indicating whether discussion messages should be notified.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.Users.GetUsersToNotifyForPageChange(ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Gets all the users that must be notified of a page change.
            </summary>
            <param name="page">The page.</param>
            <returns>The users to be notified.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Users.GetUsersToNotifyForDiscussionMessages(ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Gets all the users that must be notified of a discussion message.
            </summary>
            <param name="page">The page.</param>
            <returns>The users to be notified.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Users.MergeArrays(ScrewTurn.Wiki.PluginFramework.UserInfo[],ScrewTurn.Wiki.PluginFramework.UserInfo[])">
            <summary>
            Merges two arrays of users, removing duplicates.
            </summary>
            <param name="array1">The first array.</param>
            <param name="array2">The second array.</param>
            <returns>The merged users.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Users.GetUsersToNotify(ScrewTurn.Wiki.PluginFramework.PageInfo,System.String)">
            <summary>
            Gets the users to notify for either a page change or a discussion message.
            </summary>
            <param name="page">The page.</param>
            <param name="key">The key to look for in the user's data.</param>
            <returns>The users to be notified.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Users.GetUsersToNotify(ScrewTurn.Wiki.PluginFramework.NamespaceInfo,System.String)">
            <summary>
            Gets the users to notify for either a page change or a discussion message in a namespace.
            </summary>
            <param name="nspace">The namespace (<c>null</c> for the root).</param>
            <param name="key">The key to look for in the user's data.</param>
            <returns>The users to be notified.</returns>
        </member>
        <member name="T:ScrewTurn.Wiki.LocalUserInfo">
            <summary>
            Stores a Local UserInfo object.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.LocalUserInfo.#ctor(System.String,System.String,System.String,System.Boolean,System.DateTime,ScrewTurn.Wiki.PluginFramework.IUsersStorageProviderV30,System.String)">
            <summary>
            Initializes a new instance of the <b>LocalUserInfo</b> class.
            </summary>
            <param name="username">The Username.</param>
            <param name="displayName">The display name.</param>
            <param name="email">The Email.</param>
            <param name="active">Specifies whether the Account is active or not.</param>
            <param name="dateTime">The creation DateTime.</param>
            <param name="provider">The Users Storage Provider that manages the User.</param>
            <param name="passwordHash">The Password Hash.</param>
        </member>
        <member name="P:ScrewTurn.Wiki.LocalUserInfo.PasswordHash">
            <summary>
            Gets or sets the Password Hash.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.LocalProvidersTools">
            <summary>
            Implements tools for local providers.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.LocalProvidersTools.CheckWritePermissions(System.String)">
            <summary>
            Checks a directory for write permissions.
            </summary>
            <param name="dir">The directory.</param>
            <returns><c>true</c> if the directory has write permissions, <c>false</c> otherwise.</returns>
        </member>
        <member name="T:ScrewTurn.Wiki.Hash">
            <summary>
            Helps computing Hash codes.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.Hash.ComputeBytes(System.String)">
            <summary>
            Computes the Hash code of a string.
            </summary>
            <param name="input">The string.</param>
            <returns>The Hash code.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Hash.Compute(System.String)">
            <summary>
            Computes the Hash code of a string and converts it into a Hex string.
            </summary>
            <param name="input">The string.</param>
            <returns>The Hash code, converted into a Hex string.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Hash.ComputeSecurityHash(System.String,System.String,System.DateTime,System.String)">
            <summary>
            Computes the Hash of a Username, mixing it with other data, in order to avoid illegal Account activations.
            </summary>
            <param name="username">The Username.</param>
            <param name="email">The email.</param>
            <param name="dateTime">The date/time.</param>
            <param name="otherData">The other data to mix into the input string.</param>
            <returns>The secured Hash of the Username.</returns>
        </member>
        <member name="T:ScrewTurn.Wiki.FormattingPipeline">
            <summary>
            Contains methods for formatting content using a pipeline paradigm.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.FormattingPipeline.GetSortedFormatters">
            <summary>
            Gets the formatter providers list sorted by priority.
            </summary>
            <returns>The list.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.FormattingPipeline.FormatWithPhase1And2(System.String,System.Boolean,ScrewTurn.Wiki.PluginFramework.FormattingContext,ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Performs the Phases 1 and 2 of the formatting process.
            </summary>
            <param name="raw">The raw WikiMarkup to format.</param>
            <param name="forIndexing">A value indicating whether the formatting is being done for content indexing.</param>
            <param name="context">The formatting context.</param>
            <param name="current">The current Page, if any.</param>
            <returns>The formatted content.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.FormattingPipeline.FormatWithPhase1And2(System.String,System.Boolean,ScrewTurn.Wiki.PluginFramework.FormattingContext,ScrewTurn.Wiki.PluginFramework.PageInfo,System.String[]@)">
            <summary>
            Performs the Phases 1 and 2 of the formatting process.
            </summary>
            <param name="raw">The raw WikiMarkup to format.</param>
            <param name="forIndexing">A value indicating whether the formatting is being done for content indexing.</param>
            <param name="context">The formatting context.</param>
            <param name="current">The current Page, if any.</param>
            <param name="linkedPages">The Pages linked by the current Page.</param>
            <returns>The formatted content.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.FormattingPipeline.FormatWithPhase3(System.String,ScrewTurn.Wiki.PluginFramework.FormattingContext,ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Performs the Phase 3 of the formatting process.
            </summary>
            <param name="raw">The raw WikiMarkup to format.</param>
            <param name="context">The formatting context.</param>
            <param name="current">The current Page, if any.</param>
            <returns>The formatted content.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.FormattingPipeline.PrepareTitle(System.String,System.Boolean,ScrewTurn.Wiki.PluginFramework.FormattingContext,ScrewTurn.Wiki.PluginFramework.PageInfo)">
            <summary>
            Prepares the title of an item for display.
            </summary>
            <param name="title">The input title.</param>
            <param name="forIndexing">A value indicating whether the formatting is being done for content indexing.</param>
            <param name="context">The context information.</param>
            <param name="current">The current page, if any.</param>
            <returns>The prepared title, properly sanitized.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.FormattingPipeline.PrepareItemTitle(System.String)">
            <summary>
            Prepares the title of an item for safe display.
            </summary>
            <param name="title">The title.</param>
            <returns>The sanitized title.</returns>
        </member>
        <member name="T:ScrewTurn.Wiki.EmailTools">
            <summary>
            Implements email-related tools.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.EmailTools.AsyncSendEmail(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Sends an email.
            </summary>
            <param name="recipient">The recipient.</param>
            <param name="sender">The sender.</param>
            <param name="subject">The subject.</param>
            <param name="body">The message body.</param>
            <param name="html"><c>true</c> if the body is HTML.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.EmailTools.TrySendMessage(System.Net.Mail.MailMessage)">
            <summary>
            Tries to send a message, swallowing all exceptions.
            </summary>
            <param name="message">The message to send.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.EmailTools.GenerateSmtpClient">
            <summary>
            Generates a new SMTP client with the proper settings.
            </summary>
            <returns>The generates SMTP client.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.EmailTools.GetRecipients(ScrewTurn.Wiki.PluginFramework.UserInfo[])">
            <summary>
            Gets the email addresses of a set of users.
            </summary>
            <param name="users">The users.</param>
            <returns>The email addresses.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.EmailTools.AsyncSendMassEmail(System.String[],System.String,System.String,System.String,System.Boolean)">
            <summary>
            Asynchronously sends a mass email, using BCC.
            </summary>
            <param name="recipients">The recipents.</param>
            <param name="sender">The sender.</param>
            <param name="subject">The subject.</param>
            <param name="body">The body.</param>
            <param name="html"><c>true</c> if the body is HTML.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.EmailTools.NotifyError(System.Exception,System.String)">
            <summary>
            Notifies an error to the email addresses set in the configuration, swallowing all exceptions.
            </summary>
            <param name="ex">The exception to notify.</param>
            <param name="url">The URL that caused the error, if any.</param>
        </member>
        <member name="T:ScrewTurn.Wiki.DiffTools">
            <summary>
            Provides methods for diffing text and items.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.DiffTools.DiffRevisions(System.String,System.String)">
            <summary>
            Computes the difference between two revisions.
            </summary>
            <param name="rev1">The first revision.</param>
            <param name="rev2">The second revision.</param>
            <returns>The XHTML-formatted result.</returns>
        </member>
        <member name="T:ScrewTurn.Wiki.Difference">
            <summary>
            O(ND) Difference Algorithm for C#
            Created by Matthias Hertel, see http://www.mathertel.de
            This work is licensed under a Creative Commons Attribution 2.0 Germany License.
            see http://creativecommons.org/licenses/by/2.0/de/
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.Difference.DiffText(System.String,System.String)">
            <summary>
            Find the difference in 2 texts, comparing by textlines.
            </summary>
            <param name="TextA">A-version of the text (usualy the old one)</param>
            <param name="TextB">B-version of the text (usualy the new one)</param>
            <returns>Returns a array of Items that describe the differences.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Difference.DiffText(System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Find the difference in 2 text documents, comparing by textlines.
            The algorithm itself is comparing 2 arrays of numbers so when comparing 2 text documents
            each line is converted into a (hash) number. This hash-value is computed by storing all
            textlines into a common hashtable so i can find dublicates in there, and generating a 
            new number each time a new textline is inserted.
            </summary>
            <param name="TextA">A-version of the text (usualy the old one)</param>
            <param name="TextB">B-version of the text (usualy the new one)</param>
            <param name="trimSpace">When set to true, all leading and trailing whitespace characters are stripped out before the comparation is done.</param>
            <param name="ignoreSpace">When set to true, all whitespace characters are converted to a single space character before the comparation is done.</param>
            <param name="ignoreCase">When set to true, all characters are converted to their lowercase equivivalence before the comparation is done.</param>
            <returns>Returns a array of Items that describe the differences.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Difference.DiffInt(System.Int32[],System.Int32[])">
            <summary>
            Find the difference in 2 arrays of integers.
            </summary>
            <param name="ArrayA">A-version of the numbers (usualy the old one)</param>
            <param name="ArrayB">B-version of the numbers (usualy the new one)</param>
            <returns>Returns a array of Items that describe the differences.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Difference.DiffCodes(System.String,System.Collections.Hashtable,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Converts all textlines of the text into unique numbers for every unique textline
            so further work can work only with simple numbers.
            </summary>
            <param name="aText">The input text</param>
            <param name="h">This extern initialized hashtable is used for storing all ever used textlines.</param>
            <param name="trimSpace">Ignore leading and trailing space characters</param>
            <param name="ignoreSpace">Ignore spaces.</param>
            <param name="ignoreCase">Ignore case.</param>
            <returns>An array of integers.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Difference.SMS(ScrewTurn.Wiki.DiffData,System.Int32,System.Int32,ScrewTurn.Wiki.DiffData,System.Int32,System.Int32)">
            <summary>
            This is the algorithm to find the Shortest Middle Snake (SMS).
            </summary>
            <param name="DataA">sequence A</param>
            <param name="LowerA">lower bound of the actual range in DataA</param>
            <param name="UpperA">upper bound of the actual range in DataA (exclusive)</param>
            <param name="DataB">sequence B</param>
            <param name="LowerB">lower bound of the actual range in DataB</param>
            <param name="UpperB">upper bound of the actual range in DataB (exclusive)</param>
            <returns>a MiddleSnakeData record containing x,y and u,v</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.Difference.LCS(ScrewTurn.Wiki.DiffData,System.Int32,System.Int32,ScrewTurn.Wiki.DiffData,System.Int32,System.Int32)">
            <summary>
            This is the divide-and-conquer implementation of the longes common-subsequence (LCS) 
            algorithm.
            The published algorithm passes recursively parts of the A and B sequences.
            To avoid copying these arrays the lower and upper bounds are passed while the sequences stay constant.
            </summary>
            <param name="DataA">sequence A</param>
            <param name="LowerA">lower bound of the actual range in DataA</param>
            <param name="UpperA">upper bound of the actual range in DataA (exclusive)</param>
            <param name="DataB">sequence B</param>
            <param name="LowerB">lower bound of the actual range in DataB</param>
            <param name="UpperB">upper bound of the actual range in DataB (exclusive)</param>
        </member>
        <member name="M:ScrewTurn.Wiki.Difference.CreateDiffs(ScrewTurn.Wiki.DiffData,ScrewTurn.Wiki.DiffData)">
            <summary>Scan the tables of which lines are inserted and deleted,
            producing an edit script in forward order.  
            </summary>
            dynamic array
        </member>
        <member name="T:ScrewTurn.Wiki.Difference.Item">
            <summary>details of one difference.</summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Difference.Item.StartA">
            <summary>Start Line number in Data A.</summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Difference.Item.StartB">
            <summary>Start Line number in Data B.</summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Difference.Item.deletedA">
            <summary>Number of changes in Data A.</summary>
        </member>
        <member name="F:ScrewTurn.Wiki.Difference.Item.insertedB">
            <summary>Number of changes in Data A.</summary>
        </member>
        <member name="T:ScrewTurn.Wiki.Difference.SMSRD">
            <summary>
            Shortest Middle Snake Return Data
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.DiffData">
            <summary>Data on one input file being compared.  
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.DiffData.Length">
            <summary>Number of elements (lines).</summary>
        </member>
        <member name="F:ScrewTurn.Wiki.DiffData.data">
            <summary>Buffer of numbers that will be compared.</summary>
        </member>
        <member name="F:ScrewTurn.Wiki.DiffData.modified">
            <summary>
            Array of booleans that flag for modified data.
            This is the result of the diff.
            This means deletedA in the first Data or inserted in the second Data.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.DiffData.#ctor(System.Int32[])">
            <summary>
            Initialize the Diff-Data buffer.
            </summary>
            <param name="initData">Reference to the buffer</param>
        </member>
    </members>
</doc>
