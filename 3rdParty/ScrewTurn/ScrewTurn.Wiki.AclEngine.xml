<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ScrewTurn.Wiki.AclEngine</name>
    </assembly>
    <members>
        <member name="T:ScrewTurn.Wiki.AclEngine.AclManagerBase">
            <summary>
            Implements a base class for an ACL Manager.
            </summary>
            <remarks>All instance and static members are <b>thread-safe</b>.</remarks>
        </member>
        <member name="T:ScrewTurn.Wiki.AclEngine.IAclManager">
            <summary>
            Defines an interface for an ACL manager.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.AclEngine.IAclManager.StoreEntry(System.String,System.String,System.String,ScrewTurn.Wiki.AclEngine.Value)">
            <summary>
            Stores a new ACL entry.
            </summary>
            <param name="resource">The controlled resource.</param>
            <param name="action">The action on the controlled resource.</param>
            <param name="subject">The subject whose access to the resource/action is controlled.</param>
            <param name="value">The value of the entry.</param>
            <returns><c>true</c> if the entry is stored, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="resource"/>, <paramref name="action"/> or <paramref name="subject"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="resource"/>, <paramref name="action"/> or <paramref name="subject"/> are empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.AclEngine.IAclManager.DeleteEntry(System.String,System.String,System.String)">
            <summary>
            Deletes an ACL entry.
            </summary>
            <param name="resource">The controlled resource.</param>
            <param name="action">The action on the controlled resource.</param>
            <param name="subject">The subject whose access to the resource/action is controlled.</param>
            <returns><c>true</c> if the entry is deleted, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="resource"/>, <paramref name="action"/> or <paramref name="subject"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="resource"/>, <paramref name="action"/> or <paramref name="subject"/> are empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.AclEngine.IAclManager.DeleteEntriesForResource(System.String)">
            <summary>
            Deletes all the ACL entries for a resource.
            </summary>
            <param name="resource">The controlled resource.</param>
            <returns><c>true</c> if the entries are deleted, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="resource"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="resource"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.AclEngine.IAclManager.DeleteEntriesForSubject(System.String)">
            <summary>
            Deletes all the ACL entries for a subject.
            </summary>
            <param name="subject">The subject.</param>
            <returns><c>true</c> if the entries are deleted, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="subject"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="subject"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.AclEngine.IAclManager.RenameResource(System.String,System.String)">
            <summary>
            Renames a resource.
            </summary>
            <param name="resource">The resource.</param>
            <param name="newName">The new name of the resource.</param>
            <returns><c>true</c> if the resource is renamed, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="resource"/> or <paramref name="newName"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="resource"/> or <paramref name="newName"/> are empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.AclEngine.IAclManager.RetrieveAllEntries">
            <summary>
            Retrieves all the ACL entries for a resource.
            </summary>
            <returns>The entries.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AclEngine.IAclManager.RetrieveEntriesForResource(System.String)">
            <summary>
            Retrieves all the ACL entries for a resource.
            </summary>
            <param name="resource">The resource.</param>
            <returns>The entries.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="resource"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="resource"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.AclEngine.IAclManager.RetrieveEntriesForSubject(System.String)">
            <summary>
            Retrieves all the ACL entries for a subject.
            </summary>
            <param name="subject">The subject.</param>
            <returns>The entries.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="subject"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="subject"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.AclEngine.IAclManager.InitializeData(ScrewTurn.Wiki.AclEngine.AclEntry[])">
            <summary>
            Initializes the manager data.
            </summary>
            <param name="entries">The ACL entries.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="entries"/> is <c>null</c>.</exception>
        </member>
        <member name="P:ScrewTurn.Wiki.AclEngine.IAclManager.TotalEntries">
            <summary>
            Gets the total number of ACL entries.
            </summary>
        </member>
        <member name="E:ScrewTurn.Wiki.AclEngine.IAclManager.AclChanged">
            <summary>
            Event fired when an ACL entry is stored or deleted.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.AclEngine.AclManagerBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AclManagerBase" /> abstract class.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.AclEngine.AclManagerBase.OnAclChanged(ScrewTurn.Wiki.AclEngine.AclEntry[],ScrewTurn.Wiki.AclEngine.Change)">
            <summary>
            Handles the invokation of <see cref="E:ScrewTurn.Wiki.AclEngine.IAclManager.AclChanged"/> event.
            </summary>
            <param name="entries">The changed entries.</param>
            <param name="change">The change.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.AclEngine.AclManagerBase.StoreEntry(System.String,System.String,System.String,ScrewTurn.Wiki.AclEngine.Value)">
            <summary>
            Stores a new ACL entry.
            </summary>
            <param name="resource">The controlled resource.</param>
            <param name="action">The action on the controlled resource.</param>
            <param name="subject">The subject whose access to the resource/action is controlled.</param>
            <param name="value">The value of the entry.</param>
            <returns><c>true</c> if the entry is stored, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="resource"/>, <paramref name="action"/> or <paramref name="subject"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="resource"/>, <paramref name="action"/> or <paramref name="subject"/> are empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.AclEngine.AclManagerBase.DeleteEntry(System.String,System.String,System.String)">
            <summary>
            Deletes an ACL entry.
            </summary>
            <param name="resource">The controlled resource.</param>
            <param name="action">The action on the controlled resource.</param>
            <param name="subject">The subject whose access to the resource/action is controlled.</param>
            <returns><c>true</c> if the entry is deleted, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="resource"/>, <paramref name="action"/> or <paramref name="subject"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="resource"/>, <paramref name="action"/> or <paramref name="subject"/> are empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.AclEngine.AclManagerBase.DeleteEntriesForResource(System.String)">
            <summary>
            Deletes all the ACL entries for a resource.
            </summary>
            <param name="resource">The controlled resource.</param>
            <returns><c>true</c> if the entries are deleted, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="resource"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="resource"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.AclEngine.AclManagerBase.DeleteEntriesForSubject(System.String)">
            <summary>
            Deletes all the ACL entries for a subject.
            </summary>
            <param name="subject">The subject.</param>
            <returns><c>true</c> if the entries are deleted, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="subject"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="subject"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.AclEngine.AclManagerBase.RenameResource(System.String,System.String)">
            <summary>
            Renames a resource.
            </summary>
            <param name="resource">The resource.</param>
            <param name="newName">The new name of the resource.</param>
            <returns><c>true</c> if the resource is renamed, <c>false</c> otherwise.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="resource"/> or <paramref name="newName"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="resource"/> or <paramref name="newName"/> are empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.AclEngine.AclManagerBase.RetrieveAllEntries">
            <summary>
            Retrieves all the ACL entries for a resource.
            </summary>
            <returns>The entries.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AclEngine.AclManagerBase.RetrieveEntriesForResource(System.String)">
            <summary>
            Retrieves all the ACL entries for a resource.
            </summary>
            <param name="resource">The resource.</param>
            <returns>The entries.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="resource"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="resource"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.AclEngine.AclManagerBase.RetrieveEntriesForSubject(System.String)">
            <summary>
            Retrieves all the ACL entries for a subject.
            </summary>
            <param name="subject">The subject.</param>
            <returns>The entries.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="subject"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="subject"/> is empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.AclEngine.AclManagerBase.InitializeData(ScrewTurn.Wiki.AclEngine.AclEntry[])">
            <summary>
            Initializes the manager data.
            </summary>
            <param name="entries">The ACL entries.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="entries"/> is <c>null</c>.</exception>
        </member>
        <member name="P:ScrewTurn.Wiki.AclEngine.AclManagerBase.TotalEntries">
            <summary>
            Gets the total number of ACL entries.
            </summary>
        </member>
        <member name="E:ScrewTurn.Wiki.AclEngine.AclManagerBase.AclChanged">
            <summary>
            Event fired when an ACL entry is stored or deleted.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.AclEngine.AclChangedEventArgs">
            <summary>
            Contains arguments for the <see cref="E:ScrewTurn.Wiki.AclEngine.IAclManager.AclChanged"/> event.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.AclEngine.AclChangedEventArgs.#ctor(ScrewTurn.Wiki.AclEngine.AclEntry[],ScrewTurn.Wiki.AclEngine.Change)">
            <summary>
            Initializes a new instance of the <see cref="T:AclChangedEventArgs"/> class.
            </summary>
            <param name="entries">The entries that changed.</param>
            <param name="change">The change.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="entries"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="entries"/> is empty.</exception>
        </member>
        <member name="P:ScrewTurn.Wiki.AclEngine.AclChangedEventArgs.Entries">
            <summary>
            Gets the entries that changed.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.AclEngine.AclChangedEventArgs.Change">
            <summary>
            Gets the change.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.AclEngine.Change">
            <summary>
            Lists legal changes for ACL entries.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.AclEngine.Change.EntryStored">
            <summary>
            An entry is stored.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.AclEngine.Change.EntryDeleted">
            <summary>
            An entry is deleted.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.AclEngine.AclEvaluator">
            <summary>
            Implements tools for evaluating permissions.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.AclEngine.AclEvaluator.AuthorizeAction(System.String,System.String,System.String,System.String[],ScrewTurn.Wiki.AclEngine.AclEntry[])">
            <summary>
            Decides whether a user, member of some groups, is authorized to perform an action on a resource.
            </summary>
            <param name="resource">The resource.</param>
            <param name="action">The action on the resource.</param>
            <param name="user">The user, in the form 'U.Name'.</param>
            <param name="groups">The groups the user is member of, in the form 'G.Name'.</param>
            <param name="entries">The available ACL entries for the resource.</param>
            <returns>The positive, negative, or indeterminate result.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="resource"/>, <paramref name="action"/>, <paramref name="user"/>, <paramref name="groups"/> or <paramref name="entries"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="resource"/>, <paramref name="action"/>, <paramref name="user"/> are empty, or if <paramref name="action"/> equals <see cref="F:ScrewTurn.Wiki.AclEngine.AclEntry.FullControlAction"/>.</exception>
        </member>
        <member name="T:ScrewTurn.Wiki.AclEngine.Authorization">
            <summary>
            Lists legal authorization values.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.AclEngine.Authorization.Granted">
            <summary>
            Authorization granted.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.AclEngine.Authorization.Denied">
            <summary>
            Authorization denied.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.AclEngine.Authorization.Unknown">
            <summary>
            No information available.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.AclEngine.AclStorerBase">
            <summary>
            Implements a base class for an ACL Storer.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.AclEngine.AclStorerBase.disposed">
            <summary>
            Indicates whether the object was disposed.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.AclEngine.AclStorerBase.aclManager">
            <summary>
            The instance of the ACL Manager to handle.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.AclEngine.AclStorerBase.aclChangedHandler">
            <summary>
            The event handler for the <see cref="E:ScrewTurn.Wiki.AclEngine.IAclManager.AclChanged"/> event.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.AclEngine.AclStorerBase.#ctor(ScrewTurn.Wiki.AclEngine.IAclManager)">
            <summary>
            Initializes a new instance of the <see cref="T:AclStorerBase"/> abstract class.
            </summary>
            <param name="aclManager">The instance of the ACL Manager to handle.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="aclManager"/> is <c>null</c>.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.AclEngine.AclStorerBase.aclManager_AclChanged(System.Object,ScrewTurn.Wiki.AclEngine.AclChangedEventArgs)">
            <summary>
            Handles the <see cref="E:ScrewTurn.Wiki.AclEngine.IAclManager.AclChanged"/> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.AclEngine.AclStorerBase.LoadDataInternal">
            <summary>
            Loads data from storage.
            </summary>
            <returns>The loaded ACL entries.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AclEngine.AclStorerBase.DeleteEntries(ScrewTurn.Wiki.AclEngine.AclEntry[])">
            <summary>
            Deletes some entries.
            </summary>
            <param name="entries">The entries to delete.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.AclEngine.AclStorerBase.StoreEntries(ScrewTurn.Wiki.AclEngine.AclEntry[])">
            <summary>
            Stores some entries.
            </summary>
            <param name="entries">The entries to store.</param>
        </member>
        <member name="M:ScrewTurn.Wiki.AclEngine.AclStorerBase.LoadData">
            <summary>
            Loads the data and injects it in the instance of <see cref="T:IAclManager" />.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.AclEngine.AclStorerBase.Dispose">
            <summary>
            Disposes the current object.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.AclEngine.AclStorerBase.AclManager">
            <summary>
            Gets the instance of the ACL Manager.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.AclEngine.AclEntry">
            <summary>
            Represents an ACL Entry.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.AclEngine.AclEntry.FullControlAction">
            <summary>
            The full control action.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.AclEngine.AclEntry.resource">
            <summary>
            The controlled resource.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.AclEngine.AclEntry.action">
            <summary>
            The controlled action on the resource.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.AclEngine.AclEntry.subject">
            <summary>
            The subject whose access to the resource/action is controlled.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.AclEngine.AclEntry.value">
            <summary>
            The entry value.
            </summary>
        </member>
        <member name="M:ScrewTurn.Wiki.AclEngine.AclEntry.#ctor(System.String,System.String,System.String,ScrewTurn.Wiki.AclEngine.Value)">
            <summary>
            Initializes a new instance of the <see cref="T:AclEntry"/> class.
            </summary>
            <param name="resource">The controlled resource.</param>
            <param name="action">The controlled action on the resource.</param>
            <param name="subject">The subject whose access to the resource/action is controlled.</param>
            <param name="value">The entry value.</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="resource"/>, <paramref name="action"/> or <paramref name="subject"/> are <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">If <paramref name="resource"/>, <paramref name="action"/> or <paramref name="subject"/> are empty.</exception>
        </member>
        <member name="M:ScrewTurn.Wiki.AclEngine.AclEntry.ToString">
            <summary>
            Gets a string representation of the current object.
            </summary>
            <returns>The string representation.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AclEngine.AclEntry.GetHashCode">
            <summary>
            Gets a hash code for the current object.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AclEngine.AclEntry.Equals(System.Object)">
            <summary>
            Determines whether this object equals another (by value).
            </summary>
            <param name="obj">The other object.</param>
            <returns><c>true</c> if this object equals <b>obj</b>, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AclEngine.AclEntry.Equals(ScrewTurn.Wiki.AclEngine.AclEntry)">
            <summary>
            Determines whether this instance equals another (by value).
            </summary>
            <param name="other">The other instance.</param>
            <returns><c>true</c> if this instance equals <b>other</b>, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ScrewTurn.Wiki.AclEngine.AclEntry.Equals(ScrewTurn.Wiki.AclEngine.AclEntry,ScrewTurn.Wiki.AclEngine.AclEntry)">
            <summary>
            Determines whether two instances of <see cref="T:AclEntry" /> are equal (by value).
            </summary>
            <param name="x">The first instance.</param>
            <param name="y">The second instance.</param>
            <returns><c>true</c> if <b>x</b> equals <b>y</b>, <c>false</c> otherwise.</returns>
        </member>
        <member name="P:ScrewTurn.Wiki.AclEngine.AclEntry.Resource">
            <summary>
            Gets the controlled resource.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.AclEngine.AclEntry.Action">
            <summary>
            Gets the controlled action on the resource.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.AclEngine.AclEntry.Subject">
            <summary>
            Gets the subject of the entry.
            </summary>
        </member>
        <member name="P:ScrewTurn.Wiki.AclEngine.AclEntry.Value">
            <summary>
            Gets the value of the entry.
            </summary>
        </member>
        <member name="T:ScrewTurn.Wiki.AclEngine.Value">
            <summary>
            Lists legal ACL Entry values.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.AclEngine.Value.Deny">
            <summary>
            Deny the action.
            </summary>
        </member>
        <member name="F:ScrewTurn.Wiki.AclEngine.Value.Grant">
            <summary>
            Grant the action.
            </summary>
        </member>
    </members>
</doc>
